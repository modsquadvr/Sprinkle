{"version":3,"file":"ink-es2015.js","sources":["../src/Path.ts","../src/Debug.ts","../src/TypeAssertion.ts","../src/NullException.ts","../src/Object.ts","../src/StringBuilder.ts","../src/InkList.ts","../src/StoryException.ts","../src/TryGetResult.ts","../src/Value.ts","../src/SearchResult.ts","../src/Container.ts","../src/Glue.ts","../src/ControlCommand.ts","../src/PushPop.ts","../src/Pointer.ts","../src/Divert.ts","../src/ChoicePoint.ts","../src/VariableReference.ts","../src/VariableAssignment.ts","../src/Void.ts","../src/NativeFunctionCall.ts","../src/Tag.ts","../src/Choice.ts","../src/ListDefinition.ts","../src/ListDefinitionsOrigin.ts","../src/JsonSerialisation.ts","../src/PRNG.ts","../src/StopWatch.ts","../src/Story.ts","../src/CallStack.ts","../src/VariablesState.ts","../src/StoryState.ts","../src/Story.ts"],"sourcesContent":["export class Path{\r\n\tpublic static parentId = '^';\r\n\r\n\tpublic _isRelative: boolean;\r\n\tpublic _components: Path.Component[];\r\n\tpublic _componentsString: string | null;\r\n\r\n\tconstructor();\r\n\tconstructor(componentsString: string);\r\n\tconstructor(head: Path.Component, tail: Path);\r\n\tconstructor(head: Path.Component[], relative?: boolean);\r\n\tconstructor(){\r\n\t\tthis._components = [];\r\n\t\tthis._componentsString = null;\r\n\t\tthis._isRelative = false;\r\n\r\n\t\tif (typeof arguments[0] == 'string'){\r\n\t\t\tlet componentsString = arguments[0] as string;\r\n\t\t\tthis.componentsString = componentsString;\r\n\t\t}\r\n\t\telse if (arguments[0] instanceof Path.Component && arguments[1] instanceof Path){\r\n\t\t\tlet head = arguments[0] as Path.Component;\r\n\t\t\tlet tail = arguments[1] as Path;\r\n\t\t\tthis._components.push(head);\r\n\t\t\tthis._components = this._components.concat(tail._components);\r\n\t\t}\r\n\t\telse if (arguments[0] instanceof Array){\r\n\t\t\tlet head = arguments[0] as Path.Component[];\r\n\t\t\tlet relative = !!arguments[1] as boolean;\r\n\t\t\tthis._components = this._components.concat(head);\r\n\t\t\tthis._isRelative = relative;\r\n\t\t}\r\n\t}\r\n\tget isRelative(){\r\n\t\treturn this._isRelative;\r\n\t}\r\n\tget componentCount(): number{\r\n\t\treturn this._components.length;\r\n\t}\r\n\tget head(): Path.Component | null{\r\n\t\tif (this._components.length > 0) {\r\n\t\t\treturn this._components[0];\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tget tail(): Path{\r\n\t\tif (this._components.length >= 2) {\r\n\t\t\t// careful, the original code uses length-1 here. This is because the second argument of\r\n\t\t\t// List.GetRange is a number of elements to extract, wherease Array.slice uses an index\r\n\t\t\tlet tailComps = this._components.slice(1, this._components.length);\r\n\t\t\treturn new Path(tailComps);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn Path.self;\r\n\t\t}\r\n\t}\r\n\tget length(): number{\r\n\t\treturn this._components.length;\r\n\t}\r\n\tget lastComponent(): Path.Component | null{\r\n\t\tlet lastComponentIdx = this._components.length - 1;\r\n\t\tif (lastComponentIdx >= 0) {\r\n\t\t\treturn this._components[lastComponentIdx];\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tget containsNamedComponent(): boolean{\r\n\t\tfor (let i = 0, l = this._components.length; i < l; i++){\r\n\t\t\tif (!this._components[i].isIndex){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic get self(): Path{\r\n\t\tlet path = new Path();\r\n\t\tpath._isRelative = true;\r\n\t\treturn path;\r\n\t}\r\n\r\n\tpublic GetComponent(index: number): Path.Component{\r\n\t\treturn this._components[index];\r\n\t}\r\n\tpublic PathByAppendingPath(pathToAppend: Path): Path{\r\n\t\tlet p = new Path();\r\n\r\n\t\tlet upwardMoves = 0;\r\n\t\tfor (let i = 0; i < pathToAppend._components.length; ++i) {\r\n\t\t\tif (pathToAppend._components[i].isParent) {\r\n\t\t\t\tupwardMoves++;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this._components.length - upwardMoves; ++i) {\r\n\t\t\tp._components.push(this._components[i]);\r\n\t\t}\r\n\r\n\t\tfor (let i = upwardMoves; i < pathToAppend._components.length; ++i) {\r\n\t\t\tp._components.push(pathToAppend._components[i]);\r\n\t\t}\r\n\r\n\t\treturn p;\r\n\t}\r\n\tget componentsString(): string{\r\n\t\tif (this._componentsString == null) {\r\n\t\t\tthis._componentsString = this._components.join('.');\r\n\t\t\tif (this.isRelative) this._componentsString = '.' + this._componentsString;\r\n\t\t}\r\n\r\n\t\treturn this._componentsString;\r\n\t}\r\n\tset componentsString(value: string){\r\n\t\tthis._components.length = 0;\r\n\r\n\t\tthis._componentsString = value;\r\n\r\n\t\tif (this._componentsString == null || this._componentsString == '') return;\r\n\r\n\t\tif (this._componentsString[0] == '.') {\r\n\t\t\tthis._isRelative = true;\r\n\t\t\tthis._componentsString = this._componentsString.substring(1);\r\n\t\t}\r\n\r\n\t\tlet componentStrings = this._componentsString.split('.');\r\n\t\tfor (let str of componentStrings) {\r\n\t\t\t// we need to distinguish between named components that start with a number, eg \"42somewhere\", and indexed components\r\n\t\t\t// the normal parseInt won't do for the detection because it's too relaxed.\r\n\t\t\t// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\r\n\t\t\tif (/^(\\-|\\+)?([0-9]+|Infinity)$/.test(str)){\r\n\t\t\t\tthis._components.push(new Path.Component(parseInt(str)));\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis._components.push(new Path.Component(str));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic toString(): string{\r\n\t\treturn this.componentsString;\r\n\t}\r\n\tpublic Equals(otherPath: Path | null): boolean{\r\n\t\tif (otherPath == null)\r\n\t\t\treturn false;\r\n\r\n\t\tif (otherPath._components.length != this._components.length)\r\n\t\t\treturn false;\r\n\r\n\t\tif (otherPath.isRelative != this.isRelative)\r\n\t\t\treturn false;\r\n\r\n\t\t// the original code uses SequenceEqual here, so we need to iterate over the components manually.\r\n\t\tfor (let i = 0, l = otherPath._components.length; i < l; i++){\r\n\t\t\t// it's not quite clear whether this test should use Equals or a simple == operator,\r\n\t\t\t// see https://github.com/y-lohse/inkjs/issues/22\r\n\t\t\tif (!otherPath._components[i].Equals(this._components[i])) return false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\tpublic PathByAppendingComponent(c: Path.Component): Path{\r\n\t\tlet p = new Path();\r\n\t\tp._components.push.apply(p._components, this._components);\r\n\t\tp._components.push(c);\r\n\t\treturn p;\r\n\t}\r\n}\r\n\r\nexport namespace Path {\r\n\texport class Component{\r\n\t\tpublic readonly index: number;\r\n\t\tpublic readonly name: string | null;\r\n\r\n\t\tconstructor(indexOrName: string | number){\r\n\t\t\tthis.index = -1;\r\n\t\t\tthis.name = null;\r\n\t\t\tif (typeof indexOrName == 'string'){\r\n\t\t\t\tthis.name = indexOrName;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.index = indexOrName;\r\n\t\t\t}\r\n\t\t}\r\n\t\tget isIndex(): boolean{\r\n\t\t\treturn this.index >= 0;\r\n\t\t}\r\n\t\tget isParent(): boolean{\r\n\t\t\treturn this.name == Path.parentId;\r\n\t\t}\r\n\r\n\t\tpublic static ToParent(): Component{\r\n\t\t\treturn new Component(Path.parentId);\r\n\t\t}\r\n\t\tpublic toString(): string | null{\r\n\t\t\tif (this.isIndex) {\r\n\t\t\t\treturn this.index.toString();\r\n\t\t\t} else {\r\n\t\t\t\treturn this.name;\r\n\t\t\t}\r\n\t\t}\r\n\t\tpublic Equals(otherComp: Component): boolean{\r\n\t\t\tif (otherComp != null && otherComp.isIndex == this.isIndex) {\r\n\t\t\t\tif (this.isIndex) {\r\n\t\t\t\t\treturn this.index == otherComp.index;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.name == otherComp.name;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n","export namespace Debug {\r\n\t// tslint:disable no-string-throw\r\n\texport function AssertType<T>(variable: any, type: new () => T, message: string): void | never {\r\n\t\tAssert(variable instanceof type, message);\r\n\t}\r\n\r\n\texport function Assert(condition: boolean, message?: string): void | never {\r\n\t\tif (!condition) {\r\n\t\t\t// tslint:disable:no-console\r\n\t\t\tif (typeof message !== 'undefined') {\r\n\t\t\t\tconsole.warn(message);\r\n\t\t\t}\r\n\r\n\t\t\tif (console.trace) {\r\n\t\t\t\tconsole.trace();\r\n\t\t\t}\r\n\r\n\t\t\tthrow '';\r\n\t\t}\r\n\t}\r\n}\r\n","import {INamedContent} from './INamedContent';\r\n\r\n// tslint:disable ban-types\r\n\r\nexport function asOrNull<T>(obj: any, type: (new (...arg: any[]) => T) | Function & { prototype: T }): T | null{\r\n\tif (obj instanceof type) {\r\n\t\treturn unsafeTypeAssertion(obj, type);\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport function asOrThrows<T>(obj: any, type: (new (...arg: any[]) => T) | Function & { prototype: T }): T | never{\r\n\tif (obj instanceof type) {\r\n\t\treturn unsafeTypeAssertion(obj, type);\r\n\t} else {\r\n\t\tthrow new Error(`${obj} is not of type ${type}`);\r\n\t}\r\n}\r\n\r\nexport function asNumberOrThrows(obj: any){\r\n\tif (typeof obj === 'number') {\r\n\t\treturn obj as number;\r\n\t} else {\r\n\t\tthrow new Error(`${obj} is not a number`);\r\n\t}\r\n}\r\n\r\n// So here, in the reference implementation, contentObj is casted to an INamedContent\r\n// but here we use js-style duck typing: if it implements the same props as the interface,\r\n// we treat it as valid.\r\nexport function asINamedContentOrNull(obj: any): INamedContent | null {\r\n\tif (obj.hasValidName && obj.name) {\r\n\t\treturn obj as INamedContent;\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\nexport function nullIfUndefined<T>(obj: T | undefined): T | null {\r\n\tif (typeof obj === 'undefined') {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn obj;\r\n}\r\n\r\nfunction unsafeTypeAssertion<T>(obj: any, type: (new () => T) | Function & { prototype: T }){\r\n\treturn obj as T;\r\n}\r\n","/**\r\n * In the original C# code, a SystemException would be thrown when passing\r\n * null to methods expected a valid instance. Javascript has no such\r\n * concept, but TypeScript will not allow `null` to be passed to methods\r\n * explicitely requiring a valid type.\r\n *\r\n * Whenever TypeScript complain about the possibility of a `null` value,\r\n * check the offending value and it it's null, throw this exception using\r\n * `throwNullException(name: string)`.\r\n */\r\nexport class NullException extends Error{}\r\n\r\n/**\r\n * Throw a NullException.\r\n * @param name a short description of the offending value (often its name within the code).\r\n */\r\nexport function throwNullException(name: string): never {\r\n\tthrow new NullException(`${name} is null or undefined`);\r\n}\r\n","import {Path} from './Path';\r\nimport {Container} from './Container';\r\nimport {Debug} from './Debug';\r\nimport {asOrNull, asINamedContentOrNull} from './TypeAssertion';\r\nimport { throwNullException } from './NullException';\r\nimport { SearchResult } from './SearchResult';\r\nimport { DebugMetadata } from './DebugMetadata';\r\n\r\nexport class InkObject{\r\n\r\n\tpublic parent: InkObject | null = null;\r\n\r\n\tget debugMetadata(): DebugMetadata | null {\r\n\t\tif (this._debugMetadata === null) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.debugMetadata;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._debugMetadata;\r\n\t}\r\n\r\n\tset debugMetadata(value) {\r\n\t\tthis._debugMetadata = value;\r\n\t}\r\n\r\n\tget ownDebugMetadata() {\r\n\t\treturn this._debugMetadata;\r\n\t}\r\n\r\n\tprivate _debugMetadata: DebugMetadata | null = null;\r\n\r\n\tpublic DebugLineNumberOfPath(path: Path) {\r\n\t\tif (path === null)\r\n\t\t\treturn null;\r\n\r\n\t\t// Try to get a line number from debug metadata\r\n\t\tlet root = this.rootContentContainer;\r\n\t\tif (root) {\r\n\t\t\tlet targetContent = root.ContentAtPath(path).obj;\r\n\t\t\tif (targetContent) {\r\n\t\t\t\tlet dm = targetContent.debugMetadata;\r\n\t\t\t\tif (dm !== null) {\r\n\t\t\t\t\treturn dm.startLineNumber;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tget path(){\r\n\t\tif (this._path == null) {\r\n\r\n\t\t\tif (this.parent == null) {\r\n\t\t\t\tthis._path = new Path();\r\n\t\t\t} else {\r\n\t\t\t\tlet comps: Path.Component[] = [];\r\n\r\n\t\t\t\tlet child: InkObject = this;\r\n\t\t\t\tlet container = asOrNull(child.parent, Container);\r\n\r\n\t\t\t\twhile (container !== null) {\r\n\r\n\t\t\t\t\tlet namedChild = asINamedContentOrNull(child);\r\n\t\t\t\t\tif (namedChild != null && namedChild.hasValidName) {\r\n\t\t\t\t\t\tcomps.unshift(new Path.Component(namedChild.name));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomps.unshift(new Path.Component(container.content.indexOf(child)));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tchild = container;\r\n\t\t\t\t\tcontainer = asOrNull(container.parent, Container);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._path = new Path(comps);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this._path;\r\n\t}\r\n\tprivate _path: Path | null = null;\r\n\r\n\tpublic ResolvePath(path: Path | null): SearchResult{\r\n\t\tif (path === null) return throwNullException('path');\r\n\t\tif (path.isRelative) {\r\n\t\t\tlet nearestContainer = asOrNull(this, Container);\r\n\r\n\t\t\tif (nearestContainer === null) {\r\n\t\t\t\tDebug.Assert(this.parent !== null, \"Can't resolve relative path because we don't have a parent\");\r\n\t\t\t\tnearestContainer = asOrNull(this.parent, Container);\r\n\t\t\t\tDebug.Assert(nearestContainer !== null, 'Expected parent to be a container');\r\n\t\t\t\tDebug.Assert(path.GetComponent(0).isParent);\r\n\t\t\t\tpath = path.tail;\r\n\t\t\t}\r\n\r\n\t\t\tif (nearestContainer === null) { return throwNullException('nearestContainer'); }\r\n\t\t\treturn nearestContainer.ContentAtPath(path);\r\n\t\t} else {\r\n\t\t\tlet contentContainer = this.rootContentContainer;\r\n\t\t\tif (contentContainer === null) { return throwNullException('contentContainer'); }\r\n\t\t\treturn contentContainer.ContentAtPath(path);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ConvertPathToRelative(globalPath: Path){\r\n\t\tlet ownPath = this.path;\r\n\r\n\t\tlet minPathLength = Math.min(globalPath.length, ownPath.length);\r\n\t\tlet lastSharedPathCompIndex = -1;\r\n\r\n\t\tfor (let i = 0; i < minPathLength; ++i) {\r\n\t\t\tlet ownComp = ownPath.GetComponent(i);\r\n\t\t\tlet otherComp = globalPath.GetComponent(i);\r\n\r\n\t\t\tif (ownComp.Equals(otherComp)) {\r\n\t\t\t\tlastSharedPathCompIndex = i;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// No shared path components, so just use global path\r\n\t\tif (lastSharedPathCompIndex == -1)\r\n\t\t\treturn globalPath;\r\n\r\n\t\tlet numUpwardsMoves = (ownPath.componentCount-1) - lastSharedPathCompIndex;\r\n\r\n\t\tlet newPathComps: Path.Component[] = [];\r\n\r\n\t\tfor(let up = 0; up < numUpwardsMoves; ++up)\r\n\t\t\tnewPathComps.push(Path.Component.ToParent());\r\n\r\n\t\tfor (let down = lastSharedPathCompIndex + 1; down < globalPath.componentCount; ++down)\r\n\t\t\tnewPathComps.push(globalPath.GetComponent(down));\r\n\r\n\t\tlet relativePath = new Path(newPathComps, true);\r\n\t\treturn relativePath;\r\n\t}\r\n\r\n\tpublic CompactPathString(otherPath: Path){\r\n\t\tlet globalPathStr = null;\r\n\t\tlet relativePathStr = null;\r\n\r\n\t\tif (otherPath.isRelative) {\r\n\t\t\trelativePathStr = otherPath.componentsString;\r\n\t\t\tglobalPathStr = this.path.PathByAppendingPath(otherPath).componentsString;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet relativePath = this.ConvertPathToRelative(otherPath);\r\n\t\t\trelativePathStr = relativePath.componentsString;\r\n\t\t\tglobalPathStr = otherPath.componentsString;\r\n\t\t}\r\n\r\n\t\tif (relativePathStr.length < globalPathStr.length)\r\n\t\t\treturn relativePathStr;\r\n\t\telse\r\n\t\t\treturn globalPathStr;\r\n\t}\r\n\r\n\tget rootContentContainer(){\r\n\t\tlet ancestor: InkObject = this;\r\n\t\twhile (ancestor.parent) {\r\n\t\t\tancestor = ancestor.parent;\r\n\t\t}\r\n\t\treturn asOrNull(ancestor, Container);\r\n\t}\r\n\r\n\tpublic Copy(): InkObject {\r\n\t\tthrow Error(\"Not Implemented: Doesn't support copying\");\r\n\t}\r\n\t// SetChild works slightly diferently in the js implementation.\r\n\t// Since we can't pass an objets property by reference, we instead pass\r\n\t// the object and the property string.\r\n\t// TODO: This method can probably be rewritten with type-safety in mind.\r\n\tpublic SetChild(obj: any, prop: any, value: any){\r\n\t\tif (obj[prop])\r\n\t\t\tobj[prop] = null;\r\n\r\n\t\tobj[prop] = value;\r\n\r\n\t\tif( obj[prop] )\r\n\t\t\tobj[prop].parent = this;\r\n\t}\r\n}\r\n","export class StringBuilder{\r\n\r\n\tprivate string: string;\r\n\r\n\tconstructor(str?: string){\r\n\t\tstr = (typeof str !== 'undefined') ? str.toString() : '';\r\n\t\tthis.string = str;\r\n\t}\r\n\tget Length(): number{\r\n\t\treturn this.string.length;\r\n\t}\r\n\tpublic Append(str: string | null){\r\n\t\tif (str !== null) {\r\n\t\t\tthis.string += str;\r\n\t\t}\r\n\t}\r\n\tpublic AppendLine(str?: string){\r\n\t\tif (typeof str !== 'undefined') this.Append(str);\r\n\t\tthis.string += '\\n';\r\n\t}\r\n\tpublic AppendFormat(format: string, ...args: any[]){\r\n\t\t// taken from http://stackoverflow.com/questions/610406/javascript-equivalent-to-printf-string-format\r\n\t\tthis.string += format.replace(/{(\\d+)}/g, (match: string, num: number) => {\r\n\t\t\treturn typeof args[num] != 'undefined' ? args[num] : match;\r\n\t\t});\r\n\t}\r\n\tpublic toString(): string{\r\n\t\treturn this.string;\r\n\t}\r\n}\r\n","import {throwNullException} from './NullException';\r\nimport {StringBuilder} from './StringBuilder';\r\nimport {ListDefinition} from './ListDefinition';\r\nimport {Story} from './Story';\r\n\r\nexport class InkListItem implements IInkListItem{ // InkListItem is a struct\r\n\r\n\tpublic readonly originName: string | null = null;\r\n\tpublic readonly itemName: string | null = null;\r\n\r\n\tconstructor(originName: string | null, itemName: string | null)\r\n\tconstructor(fullName: string | null)\r\n\tconstructor(){\r\n\t\tif (typeof arguments[1] !== 'undefined'){\r\n\t\t\tlet originName = arguments[0] as string | null;\r\n\t\t\tlet itemName = arguments[1] as string | null;\r\n\r\n\t\t\tthis.originName = originName;\r\n\t\t\tthis.itemName = itemName;\r\n\t\t}\r\n\t\telse if (arguments[0]){\r\n\t\t\tlet fullName = arguments[0] as string;\r\n\r\n\t\t\tlet nameParts = fullName.toString().split('.');\r\n\t\t\tthis.originName = nameParts[0];\r\n\t\t\tthis.itemName = nameParts[1];\r\n\t\t}\r\n\t}\r\n\tpublic static get Null(){\r\n\t\treturn new InkListItem(null, null);\r\n\t}\r\n\tpublic get isNull(){\r\n\t\treturn this.originName == null && this.itemName == null;\r\n\t}\r\n\tget fullName(){\r\n\t\treturn ((this.originName !== null) ? this.originName : '?') + '.' + this.itemName;\r\n\t}\r\n\tpublic toString(): string {\r\n\t\treturn this.fullName;\r\n\t}\r\n\tpublic Equals(obj: InkListItem){\r\n\t\tif (obj instanceof InkListItem) {\r\n\t\t\tlet otherItem = obj;\r\n\t\t\treturn otherItem.itemName == this.itemName\r\n\t\t\t\t&& otherItem.originName == this.originName;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// These methods did not exist in the original C# code. Their purpose is to\r\n\t// make `InkListItem` mimics the value-type semantics of the original\r\n\t// struct. Please refer to the end of this file, for a more in-depth\r\n\t// explanation.\r\n\r\n\t/**\r\n\t * Returns a shallow clone of the current instance.\r\n\t */\r\n\tpublic copy(){\r\n\t\treturn new InkListItem(this.originName, this.itemName);\r\n\t}\r\n\t/**\r\n\t * Returns a `SerializedInkListItem` representing the current\r\n\t * instance. The result is intended to be used as a key inside a Map.\r\n\t */\r\n\tpublic serialized(): SerializedInkListItem{\r\n\t\t// We are simply using a JSON representation as a value-typed key.\r\n\t\treturn JSON.stringify({originName: this.originName, itemName: this.itemName});\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs a `InkListItem` from the given SerializedInkListItem.\r\n\t */\r\n\tpublic static fromSerializedKey(key: SerializedInkListItem): InkListItem {\r\n\t\tlet obj = JSON.parse(key);\r\n\t\tif (!InkListItem.isLikeInkListItem(obj)) return InkListItem.Null;\r\n\r\n\t\tlet inkListItem = obj as IInkListItem;\r\n\r\n\t\treturn new InkListItem(inkListItem.originName, inkListItem.itemName);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the given item is sufficiently `InkListItem`-like\r\n\t * to be used as a template when reconstructing the InkListItem.\r\n\t */\r\n\tprivate static isLikeInkListItem(item: any){\r\n\t\tif (typeof item !== 'object') return false;\r\n\t\tif (!item.hasOwnProperty('originName') || !item.hasOwnProperty('itemName')) return false;\r\n\t\tif (typeof item.originName !== 'string' && typeof item.originName !== null) return false;\r\n\t\tif (typeof item.itemName !== 'string' && typeof item.itemName !== null) return false;\r\n\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport class InkList extends Map<SerializedInkListItem, number> {\r\n\tpublic origins: ListDefinition[] | null = null;\r\n\tpublic _originNames: string[] | null = [];\r\n\r\n\tconstructor()\r\n\tconstructor(otherList: InkList)\r\n\tconstructor(singleOriginListName: string, originStory: Story)\r\n\tconstructor(singleElement: KeyValuePair<InkListItem, number>)\r\n\tconstructor(){\r\n\t\t// Trying to be smart here, this emulates the constructor inheritance found\r\n\t\t// in the original code, but only if otherList is an InkList. IIFE FTW.\r\n\t\tsuper((() => {\r\n\t\t\tif (arguments[0] instanceof InkList){\r\n\t\t\t\treturn arguments[0];\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t})());\r\n\r\n\t\tif (arguments[0] instanceof InkList){\r\n\t\t\tlet otherList = arguments[0] as InkList;\r\n\r\n\t\t\tif (otherList._originNames) {\r\n\t\t\t\tthis._originNames = otherList._originNames.slice();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (typeof arguments[0] === 'string'){\r\n\t\t\tlet singleOriginListName = arguments[0] as string;\r\n\t\t\tlet originStory = arguments[1] /* as Story */;\r\n\t\t\tthis.SetInitialOriginName(singleOriginListName);\r\n\r\n\t\t\tlet def = originStory.listDefinitions.TryListGetDefinition(singleOriginListName, null);\r\n\t\t\tif (def.exists){\r\n\t\t\t\tthis.origins = [def.result];\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthrow new Error('InkList origin could not be found in story when constructing new list: ' + singleOriginListName);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (typeof arguments[0] === 'object' && arguments[0].hasOwnProperty('Key') && arguments[0].hasOwnProperty('Value')){\r\n\t\t\tlet singleElement = arguments[0] as KeyValuePair<InkListItem, number>;\r\n\t\t\tthis.Add(singleElement.Key, singleElement.Value);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic AddItem(itemOrItemName: InkListItem | string | null){\r\n\t\tif (itemOrItemName instanceof InkListItem){\r\n\t\t\tlet item = itemOrItemName;\r\n\r\n\t\t\tif (item.originName == null) {\r\n\t\t\t\tthis.AddItem(item.itemName);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.origins === null) return throwNullException('this.origins');\r\n\r\n\t\t\tfor (let origin of this.origins) {\r\n\t\t\t\tif (origin.name == item.originName) {\r\n\t\t\t\t\tlet intVal = origin.TryGetValueForItem(item, 0);\r\n\t\t\t\t\tif (intVal.exists) {\r\n\t\t\t\t\t\tthis.Add(item, intVal.result);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('Could not add the item ' + item + \" to this list because it doesn't exist in the original list definition in ink.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(\"Failed to add item to list because the item was from a new list definition that wasn't previously known to this list. Only items from previously known lists can be used, so that the int value can be found.\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet itemName = itemOrItemName as string | null;\r\n\r\n\t\t\tlet foundListDef: ListDefinition | null = null;\r\n\r\n\t\t\tif (this.origins === null) return throwNullException('this.origins');\r\n\r\n\t\t\tfor (let origin of this.origins) {\r\n\t\t\t\tif (itemName === null) return throwNullException('itemName');\r\n\r\n\t\t\t\tif (origin.ContainsItemWithName(itemName)) {\r\n\t\t\t\t\t\tif (foundListDef != null) {\r\n\t\t\t\t\t\t\tthrow new Error('Could not add the item ' + itemName + ' to this list because it could come from either ' + origin.name + ' or ' + foundListDef.name);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfoundListDef = origin;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (foundListDef == null)\r\n\t\t\t\tthrow new Error('Could not add the item ' + itemName + \" to this list because it isn't known to any list definitions previously associated with this list.\");\r\n\r\n\t\t\tlet item = new InkListItem(foundListDef.name, itemName);\r\n\t\t\tlet itemVal = foundListDef.ValueForItem(item);\r\n\t\t\tthis.Add(item, itemVal);\r\n\t\t}\r\n\t}\r\n\tpublic ContainsItemNamed(itemName: string | null){\r\n\t\tfor (let [key, value] of this) {\r\n\t\t\tlet item = InkListItem.fromSerializedKey(key);\r\n\t\t\tif (item.itemName == itemName) return true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\tpublic ContainsKey(key: InkListItem){\r\n\t\treturn this.has(key.serialized());\r\n\t}\r\n\tpublic Add(key: InkListItem, value: number){\r\n\t\tlet serializedKey = key.serialized();\r\n\t\tif (this.has(serializedKey)) {\r\n\t\t\t// Throw an exception to match the C# behavior.\r\n\t\t\tthrow new Error(`The Map already contains an entry for ${key}`);\r\n\t\t}\r\n\t\tthis.set(serializedKey, value);\r\n\t}\r\n\tpublic Remove(key: InkListItem){\r\n\t\treturn this.delete(key.serialized());\r\n\t}\r\n\tget Count(){\r\n\t\treturn this.size;\r\n\t}\r\n\tget originOfMaxItem(): ListDefinition | null{\r\n\t\tif (this.origins == null) return null;\r\n\r\n\t\tlet maxOriginName = this.maxItem.Key.originName;\r\n\t\tlet result = null;\r\n\t\tthis.origins.every((origin)=>{\r\n\t\t\tif (origin.name == maxOriginName){\r\n\t\t\t\tresult = origin;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse return true;\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\tget originNames(): string[]{\r\n\t\tif (this.Count > 0) {\r\n\t\t\tif (this._originNames == null && this.Count > 0)\r\n\t\t\t\tthis._originNames = [];\r\n\t\t\telse {\r\n\t\t\t\tif (!this._originNames) this._originNames = [];\r\n\t\t\t\tthis._originNames.length = 0;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let [key, value] of this) {\r\n\t\t\t\tlet item = InkListItem.fromSerializedKey(key);\r\n\t\t\t\tif (item.originName === null) return throwNullException('item.originName');\r\n\t\t\t\tthis._originNames.push(item.originName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._originNames as string[];\r\n\t}\r\n\tpublic SetInitialOriginName(initialOriginName: string){\r\n\t\tthis._originNames = [initialOriginName];\r\n\t}\r\n\tpublic SetInitialOriginNames(initialOriginNames: string[]){\r\n\t\tif (initialOriginNames == null)\r\n\t\t\tthis._originNames = null;\r\n\t\telse\r\n\t\t\tthis._originNames = initialOriginNames.slice();// store a copy\r\n\t}\r\n\tget maxItem(){\r\n\t\tlet max: KeyValuePair<InkListItem, number> = {\r\n\t\t\tKey: InkListItem.Null,\r\n\t\t\tValue: 0,\r\n\t\t};\r\n\t\tfor (let [key, value] of this) {\r\n\t\t\tlet item = InkListItem.fromSerializedKey(key);\r\n\t\t\tif (max.Key.isNull || value > max.Value)\r\n\t\t\t\tmax = { Key: item, Value: value };\r\n\t\t}\r\n\r\n\t\treturn max;\r\n\t}\r\n\tget minItem(){\r\n\t\tlet min: KeyValuePair<InkListItem, number> = {\r\n\t\t\tKey: InkListItem.Null,\r\n\t\t\tValue: 0,\r\n\t\t};\r\n\t\tfor (let [key, value] of this) {\r\n\t\t\tlet item = InkListItem.fromSerializedKey(key);\r\n\t\t\tif (min.Key.isNull || value < min.Value) {\r\n\t\t\t\tmin = { Key: item, Value: value };\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn min;\r\n\t}\r\n\tget inverse(){\r\n\t\tlet list = new InkList();\r\n\t\tif (this.origins != null) {\r\n\t\t\tfor (let origin of this.origins) {\r\n\t\t\t\tfor (let [key, value] of origin.items) {\r\n\t\t\t\t\tlet item = InkListItem.fromSerializedKey(key);\r\n\t\t\t\t\tif (!this.ContainsKey(item))\r\n\t\t\t\t\t\tlist.Add(item, value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn list;\r\n\t}\r\n\tget all(){\r\n\t\tlet list = new InkList();\r\n\t\tif (this.origins != null) {\r\n\t\t\tfor(let origin of this.origins) {\r\n\t\t\t\tfor (let [key, value] of origin.items) {\r\n\t\t\t\t\tlet item = InkListItem.fromSerializedKey(key);\r\n\t\t\t\t\tlist.set(item.serialized(), value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn list;\r\n\t}\r\n\tpublic Union(otherList: InkList){\r\n\t\tlet union = new InkList(this);\r\n\t\tfor(let [key, value] of otherList) {\r\n\t\t\tunion.set(key, value);\r\n\t\t}\r\n\t\treturn union;\r\n\t}\r\n\tpublic Intersect(otherList: InkList){\r\n\t\tlet intersection = new InkList();\r\n\t\tfor(let [key, value] of this) {\r\n\t\t\tif (otherList.has(key))\r\n\t\t\t\tintersection.set(key, value);\r\n\t\t}\r\n\r\n\t\treturn intersection;\r\n\t}\r\n\tpublic Without(listToRemove: InkList){\r\n\t\tlet result = new InkList(this);\r\n\t\tfor(let [key, value] of listToRemove) {\r\n\t\t\tresult.delete(key);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\tpublic Contains(otherList: InkList){\r\n\t\tfor(let [key, value] of otherList) {\r\n\t\t\tif (!this.has(key)) return false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\tpublic GreaterThan(otherList: InkList){\r\n\t\tif (this.Count == 0) return false;\r\n\t\tif (otherList.Count == 0) return true;\r\n\r\n\t\treturn this.minItem.Value > otherList.maxItem.Value;\r\n\t}\r\n\tpublic GreaterThanOrEquals(otherList: InkList){\r\n\t\tif (this.Count == 0) return false;\r\n\t\tif (otherList.Count == 0) return true;\r\n\r\n\t\treturn this.minItem.Value >= otherList.minItem.Value\r\n\t\t\t&& this.maxItem.Value >= otherList.maxItem.Value;\r\n\t}\r\n\tpublic LessThan(otherList: InkList){\r\n\t\tif (otherList.Count == 0) return false;\r\n\t\tif (this.Count == 0) return true;\r\n\r\n\t\treturn this.maxItem.Value < otherList.minItem.Value;\r\n\t}\r\n\tpublic LessThanOrEquals(otherList: InkList){\r\n\t\tif (otherList.Count == 0) return false;\r\n\t\tif (this.Count == 0) return true;\r\n\r\n\t\treturn this.maxItem.Value <= otherList.maxItem.Value\r\n\t\t\t&& this.minItem.Value <= otherList.minItem.Value;\r\n\t}\r\n\tpublic MaxAsList(){\r\n\t\tif (this.Count > 0)\r\n\t\t\treturn new InkList(this.maxItem);\r\n\t\telse\r\n\t\t\treturn new InkList();\r\n\t}\r\n\tpublic MinAsList(){\r\n\t\tif (this.Count > 0)\r\n\t\t\treturn new InkList(this.minItem);\r\n\t\telse\r\n\t\t\treturn new InkList();\r\n\t}\r\n\tpublic ListWithSubRange(minBound: any, maxBound: any)\r\n\t{\r\n\t\tif (this.Count == 0) return new InkList();\r\n\r\n\t\tlet ordered = this.orderedItems;\r\n\r\n\t\tlet minValue = 0;\r\n\t\tlet maxValue = Number.MAX_SAFE_INTEGER;\r\n\r\n\t\tif (Number.isInteger(minBound)) {\r\n\t\t\tminValue = minBound;\r\n\t\t} else {\r\n\t\t\tif (minBound instanceof InkList && minBound.Count > 0 )\r\n\t\t\t\tminValue = minBound.minItem.Value;\r\n\t\t}\r\n\r\n\t\tif (Number.isInteger(maxBound)) {\r\n\t\t\tmaxValue = maxBound;\r\n\t\t} else {\r\n\t\t\tif (minBound instanceof InkList && (minBound).Count > 0)\r\n\t\t\t\tmaxValue = maxBound.maxItem.Value;\r\n\t\t}\r\n\r\n\t\tlet subList = new InkList();\r\n\t\tsubList.SetInitialOriginNames(this.originNames);\r\n\t\tfor (let item of ordered) {\r\n\t\t\tif (item.Value >= minValue && item.Value <= maxValue ) {\r\n\t\t\t\tsubList.Add(item.Key, item.Value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn subList;\r\n\t}\r\n\tpublic Equals(otherInkList: InkList){\r\n\t\tif (otherInkList instanceof InkList === false) return false;\r\n\t\tif (otherInkList.Count != this.Count) return false;\r\n\r\n\t\tfor(let [key, value] of this) {\r\n\t\t\tif (!otherInkList.has(key))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t// GetHashCode not implemented\r\n\tget orderedItems() {\r\n\t\t// List<KeyValuePair<InkListItem, int>>\r\n\t\tlet ordered = new Array<KeyValuePair<InkListItem, number>>();\r\n\r\n\t\tfor(let [key, value] of this) {\r\n\t\t\tlet item = InkListItem.fromSerializedKey(key);\r\n\t\t\tordered.push({ Key: item, Value: value });\r\n\t\t}\r\n\r\n\t\tordered.sort((x, y) => {\r\n\t\t\tif (x.Key.originName === null) { return throwNullException('x.Key.originName'); }\r\n\t\t\tif (y.Key.originName === null) { return throwNullException('y.Key.originName'); }\r\n\r\n\t\t\tif (x.Value == y.Value) {\r\n\t\t\t\treturn x.Key.originName.localeCompare(y.Key.originName);\r\n\t\t\t} else {\r\n\t\t\t\t// TODO: refactor this bit into a numberCompareTo method?\r\n\t\t\t\tif (x.Value < y.Value)\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\treturn x.Value > y.Value ? 1 : 0;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn ordered;\r\n\t}\r\n\tpublic toString(){\r\n\t\tlet ordered = this.orderedItems;\r\n\r\n\t\tlet sb = new StringBuilder();\r\n\t\tfor (let i = 0; i < ordered.length; i++) {\r\n\t\t\tif (i > 0)\r\n\t\t\t\tsb.Append(', ');\r\n\r\n\t\t\tlet item = ordered[i].Key;\r\n\t\t\tif (item.itemName === null) return throwNullException('item.itemName');\r\n\t\t\tsb.Append(item.itemName);\r\n\t\t}\r\n\r\n\t\treturn sb.toString();\r\n\t}\r\n\t// casting a InkList to a Number, for somereason, actually gives a number.\r\n\t// This messes up the type detection when creating a Value from a InkList.\r\n\t// Returning NaN here prevents that.\r\n\tpublic valueOf(){\r\n\t\treturn NaN;\r\n\t}\r\n}\r\n\r\n/**\r\n * In the original C# code, `InkListItem` was defined as value type, meaning\r\n * that two `InkListItem` would be considered equal as long as they held the\r\n * same values. This doesn't hold true in Javascript, as `InkListItem` is a\r\n * reference type (Javascript doesn't allow the creation of custom value types).\r\n *\r\n * The key equality of Map objects is based on the \"SameValueZero\" algorithm;\r\n * since `InkListItem` is a value type, two keys will only be considered\r\n * equal if they are, in fact, the same object. As we are trying to emulate\r\n * the original behavior as close as possible, this will lead to unforeseen\r\n * side effects.\r\n *\r\n * In order to have a key equality based on value semantics, we'll convert\r\n * `InkListItem` to a valid string representation and use this representation\r\n * as a key (strings are value types in Javascript). Rather than using the\r\n * type `string` directly, we'll alias it to `SerializedInkListItem` and use\r\n * this type as the key for our Map-based `InkList`.\r\n *\r\n * Reducing `InkListItem` to a JSON representation would not be bulletproof\r\n * in the general case, but for our needs it works well. The major downside of\r\n * this method is that we will have to to reconstruct the original `InkListItem`\r\n * every time we'll need to access its properties.\r\n */\r\nexport type SerializedInkListItem = string;\r\n\r\n/**\r\n * An interface inherited by `InkListItem`, defining exposed\r\n * properties. It's mainly used when deserializing a `InkListItem` from its\r\n * key (`SerializedInkListItem`)\r\n */\r\ninterface IInkListItem{\r\n\treadonly originName: string | null;\r\n\treadonly itemName: string | null;\r\n}\r\nexport interface KeyValuePair<K, V> {\r\n\tKey: K;\r\n\tValue: V;\r\n}\r\n","export class StoryException extends Error{\r\n\r\n\tpublic useEndLineNumber: boolean;\r\n\tpublic message: string;\r\n\tpublic name: string;\r\n\r\n\tconstructor(message: string){\r\n\t\tsuper(message);\r\n\t\tthis.useEndLineNumber = false;\r\n\t\tthis.message = message;\r\n\t\tthis.name = 'StoryException';\r\n\t}\r\n}\r\n","// tslint:disable:jsdoc-format\r\n/**\r\n * This interface normalize the `TryGet` behavior found in the original\r\n * C# project. Any `TryGet` method will return a object conforming to this\r\n * interface.\r\n *\r\n * The original function returns a boolean and has a second parameter called\r\n * item that is an `out`. Both are needed and we can't just return the item\r\n * because it'll always be truthy. Instead, we return an object containing\r\n * whether the result exists (`exists`) and the result itself (`result`).\r\n *\r\n * For instance a `TryGet` prototype would look like this:\r\n```\r\nTryGetItemWithValue(val: number, item: InkListItem): TryGetResult<InkListItem>{\r\n```\r\n *\r\n * On the other hand, dealing with the result can be done in the following way:\r\n```\r\nvar item = item.TryGetItemWithValue(intVal, InkListItem.Null);\r\nif (item.exists) {\r\n\tconsole.log(item.result)\r\n}\r\n```\r\n *\r\n */\r\nexport interface TryGetResult<T> {\r\n\tresult: T;\r\n\texists: boolean;\r\n}\r\n\r\nexport function tryGetValueFromMap<K, V>(map: Map<K, V> | null, key: K, /* out */ value: V): TryGetResult<V> {\r\n\tif (map === null) {\r\n\t\treturn { result: value, exists: false };\r\n\t}\r\n\r\n\tlet val = map.get(key);\r\n\r\n\tif (val) {\r\n\t\treturn { result: val, exists: true };\r\n\t} else {\r\n\t\treturn { result: value, exists: false };\r\n\t}\r\n}\r\n\r\nexport function tryParseInt(value: any, /* out */ defaultValue: number = 0): TryGetResult<number> {\r\n\tlet val = parseInt(value);\r\n\r\n\tif (!Number.isNaN(val)) {\r\n\t\treturn { result: val, exists: true };\r\n\t} else {\r\n\t\treturn { result: defaultValue, exists: false };\r\n\t}\r\n}\r\n\r\nexport function tryParseFloat(value: any, /* out */ defaultValue: number = 0): TryGetResult<number> {\r\n\tlet val = parseFloat(value);\r\n\r\n\tif (!Number.isNaN(val)) {\r\n\t\treturn { result: val, exists: true };\r\n\t} else {\r\n\t\treturn { result: defaultValue, exists: false };\r\n\t}\r\n}\r\n","import {InkObject} from './Object';\r\nimport {Path} from './Path';\r\nimport {InkList, InkListItem} from './InkList';\r\nimport {StoryException} from './StoryException';\r\nimport {asOrNull, asOrThrows} from './TypeAssertion';\r\nimport {tryParseInt, tryParseFloat} from './TryGetResult';\r\nimport {throwNullException} from './NullException';\r\n\r\nexport abstract class AbstractValue extends InkObject{\r\n\tpublic abstract get valueType(): ValueType;\r\n\tpublic abstract get isTruthy(): boolean;\r\n\tpublic abstract get valueObject(): any;\r\n\r\n\tpublic abstract Cast(newType: ValueType): Value<any>;\r\n\r\n\tpublic static Create(val: any): Value<any> | null{\r\n\t\t// Implicitly convert bools into ints\r\n\t\tif (typeof val === 'boolean'){\r\n\t\t\tlet b = !!val;\r\n\t\t\tval = (b) ? 1 : 0;\r\n\t\t}\r\n\r\n\t\t// https://github.com/y-lohse/inkjs/issues/425\r\n\t\t// Changed condition sequence, because Number('') is\r\n\t\t// parsed to 0, which made setting string to empty\r\n\t\t// impossible\r\n\t\tif (typeof val === 'string') {\r\n\t\t\treturn new StringValue(String(val));\r\n\t\t} else if (Number.isInteger(Number(val))) {\r\n\t\t\treturn new IntValue(Number(val));\r\n\t\t} else if (!isNaN(val)) {\r\n\t\t\treturn new FloatValue(Number(val));\r\n\t\t} else if (val instanceof Path) {\r\n\t\t\treturn new DivertTargetValue(asOrThrows(val, Path));\r\n\t\t} else if (val instanceof InkList) {\r\n\t\t\treturn new ListValue(asOrThrows(val, InkList));\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\tpublic Copy() {\r\n\t\treturn asOrThrows(AbstractValue.Create(this), InkObject);\r\n\t}\r\n\tpublic BadCastException(targetType: ValueType) {\r\n\t\treturn new StoryException(\"Can't cast \"+this.valueObject+' from ' + this.valueType+' to '+targetType);\r\n\t}\r\n}\r\n\r\nexport abstract class Value<T extends { toString: () => string; }> extends AbstractValue{\r\n\tpublic value: T | null;\r\n\r\n\tconstructor(val: T | null){\r\n\t\tsuper();\r\n\t\tthis.value = val;\r\n\t}\r\n\tpublic get valueObject(){\r\n\t\treturn this.value;\r\n\t}\r\n\tpublic toString(){\r\n\t\tif (this.value === null) return throwNullException('Value.value');\r\n\t\treturn this.value.toString();\r\n\t}\r\n}\r\n\r\nexport class IntValue extends Value<number>{\r\n\tconstructor(val: number){\r\n\t\tsuper(val || 0);\r\n\t}\r\n\tpublic get isTruthy(){\r\n\t\treturn this.value != 0;\r\n\t}\r\n\tpublic get valueType() {\r\n\t\treturn ValueType.Int;\r\n\t}\r\n\r\n\tpublic Cast(newType: ValueType): Value<any>{\r\n\t\tif (this.value === null) return throwNullException('Value.value');\r\n\r\n\t\tif (newType == this.valueType) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif (newType == ValueType.Float) {\r\n\t\t\treturn new FloatValue(this.value);\r\n\t\t}\r\n\r\n\t\tif (newType == ValueType.String) {\r\n\t\t\treturn new StringValue('' + this.value);\r\n\t\t}\r\n\r\n\t\tthrow this.BadCastException(newType);\r\n\t}\r\n}\r\n\r\nexport class FloatValue extends Value<number>{\r\n\tconstructor(val: number){\r\n\t\tsuper(val || 0.0);\r\n\t}\r\n\tpublic get isTruthy(){\r\n\t\treturn this.value != 0.0;\r\n\t}\r\n\tpublic get valueType(){\r\n\t\treturn ValueType.Float;\r\n\t}\r\n\r\n\tpublic Cast(newType: ValueType): Value<any>{\r\n\t\tif (this.value === null) return throwNullException('Value.value');\r\n\r\n\t\tif (newType == this.valueType) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif (newType == ValueType.Int) {\r\n\t\t\treturn new IntValue(this.value);\r\n\t\t}\r\n\r\n\t\tif (newType == ValueType.String) {\r\n\t\t\treturn new StringValue('' + this.value);\r\n\t\t}\r\n\r\n\t\tthrow this.BadCastException(newType);\r\n\t}\r\n}\r\n\r\nexport class StringValue extends Value<string>{\r\n\tpublic _isNewline: boolean;\r\n\tpublic _isInlineWhitespace: boolean;\r\n\r\n\tconstructor(val: string){\r\n\t\tsuper(val || '');\r\n\r\n\t\tthis._isNewline = (this.value == '\\n');\r\n\t\tthis._isInlineWhitespace = true;\r\n\r\n\t\tif (this.value === null) return throwNullException('Value.value');\r\n\r\n\t\tif (this.value.length > 0) {\r\n\t\t\tthis.value.split('').every((c) => {\r\n\t\t\t\tif (c != ' ' && c != '\\t'){\r\n\t\t\t\t\tthis._isInlineWhitespace = false;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tpublic get valueType(){\r\n\t\treturn ValueType.String;\r\n\t}\r\n\tpublic get isTruthy(){\r\n\t\tif (this.value === null) return throwNullException('Value.value');\r\n\t\treturn this.value.length > 0;\r\n\t}\r\n\tpublic get isNewline(){\r\n\t\treturn this._isNewline;\r\n\t}\r\n\tpublic get isInlineWhitespace(){\r\n\t\treturn this._isInlineWhitespace;\r\n\t}\r\n\tpublic get isNonWhitespace(){\r\n\t\treturn !this.isNewline && !this.isInlineWhitespace;\r\n\t}\r\n\r\n\tpublic Cast(newType: ValueType): Value<any>{\r\n\t\tif (newType == this.valueType) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif (newType == ValueType.Int) {\r\n\r\n\t\t\tlet parsedInt = tryParseInt(this.value);\r\n\t\t\tif (parsedInt.exists) {\r\n\t\t\t\treturn new IntValue(parsedInt.result);\r\n\t\t\t} else {\r\n\t\t\t\tthrow this.BadCastException(newType);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newType == ValueType.Float) {\r\n\t\t\tlet parsedFloat = tryParseFloat(this.value);\r\n\t\t\tif (parsedFloat.exists) {\r\n\t\t\t\treturn new FloatValue(parsedFloat.result);\r\n\t\t\t} else {\r\n\t\t\t\tthrow this.BadCastException(newType);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthrow this.BadCastException(newType);\r\n\t}\r\n}\r\n\r\nexport class DivertTargetValue extends Value<Path>{\r\n\tconstructor(targetPath: Path){\r\n\t\tsuper(targetPath);\r\n\t}\r\n\tpublic get valueType() {\r\n\t\treturn ValueType.DivertTarget;\r\n\t}\r\n\tpublic get targetPath(){\r\n\t\tif (this.value === null) return throwNullException('Value.value');\r\n\t\treturn this.value;\r\n\t}\r\n\tpublic set targetPath(value: Path){\r\n\t\tthis.value = value;\r\n\t}\r\n\tpublic get isTruthy(): never{\r\n\t\tthrow new Error('Shouldn\\'t be checking the truthiness of a divert target');\r\n\t}\r\n\r\n\tpublic Cast(newType: ValueType): Value<any>{\r\n\t\tif (newType == this.valueType)\r\n\t\t\treturn this;\r\n\r\n\t\tthrow this.BadCastException(newType);\r\n\t}\r\n\tpublic toString(){\r\n\t\treturn 'DivertTargetValue(' + this.targetPath + ')';\r\n\t}\r\n}\r\n\r\nexport class VariablePointerValue extends Value<string>{\r\n\tpublic _contextIndex: number;\r\n\r\n\tconstructor(variableName: string, contextIndex: number = -1){\r\n\t\tsuper(variableName);\r\n\r\n\t\tthis._contextIndex = contextIndex;\r\n\t}\r\n\r\n\tpublic get contextIndex(){\r\n\t\treturn this._contextIndex;\r\n\t}\r\n\tpublic set contextIndex(value: number) {\r\n\t\tthis._contextIndex = value;\r\n\t}\r\n\tpublic get variableName(){\r\n\t\tif (this.value === null) return throwNullException('Value.value');\r\n\t\treturn this.value;\r\n\t}\r\n\tpublic set variableName(value: string){\r\n\t\tthis.value = value;\r\n\t}\r\n\tpublic get valueType() {\r\n\t\treturn ValueType.VariablePointer;\r\n\t}\r\n\r\n\tpublic get isTruthy(): never{\r\n\t\tthrow new Error(\"Shouldn't be checking the truthiness of a variable pointer\");\r\n\t}\r\n\r\n\tpublic Cast(newType: ValueType): Value<any>{\r\n\t\tif (newType == this.valueType)\r\n\t\t\treturn this;\r\n\r\n\t\tthrow this.BadCastException(newType);\r\n\t}\r\n\tpublic toString(){\r\n\t\treturn 'VariablePointerValue(' + this.variableName + ')';\r\n\t}\r\n\tpublic Copy(){\r\n\t\treturn new VariablePointerValue(this.variableName, this.contextIndex);\r\n\t}\r\n}\r\n\r\nexport class ListValue extends Value<InkList>{\r\n\tpublic get isTruthy(){\r\n\t\tif (this.value === null) { return throwNullException('this.value'); }\r\n\t\treturn this.value.Count > 0;\r\n\t}\r\n\tpublic get valueType() {\r\n\t\treturn ValueType.List;\r\n\t}\r\n\tpublic Cast(newType: ValueType): Value<any>{\r\n\t\tif (this.value === null) return throwNullException('Value.value');\r\n\r\n\t\tif (newType == ValueType.Int) {\r\n\t\t\tlet max = this.value.maxItem;\r\n\t\t\tif( max.Key.isNull )\r\n\t\t\treturn new IntValue(0);\r\n\t\t\telse\r\n\t\t\treturn new IntValue(max.Value);\r\n\t\t}\r\n\t\telse if (newType == ValueType.Float) {\r\n\t\t\tlet max = this.value.maxItem;\r\n\t\t\tif (max.Key.isNull)\r\n\t\t\treturn new FloatValue(0.0);\r\n\t\t\telse\r\n\t\t\treturn new FloatValue(max.Value);\r\n\t\t}\r\n\t\telse if (newType == ValueType.String) {\r\n\t\t\tlet max = this.value.maxItem;\r\n\t\t\tif (max.Key.isNull)\r\n\t\t\treturn new StringValue('');\r\n\t\t\telse {\r\n\t\t\t\treturn new StringValue(max.Key.toString());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newType == this.valueType) return this;\r\n\r\n\t\tthrow this.BadCastException(newType);\r\n\t}\r\n\tconstructor();\r\n\tconstructor(list: InkList);\r\n\tconstructor(listOrSingleItem: InkListItem, singleValue: number)\r\n\tconstructor(listOrSingleItem?: InkListItem | InkList, singleValue?: number){\r\n\t\tsuper(null);\r\n\r\n\t\tif (!listOrSingleItem && !singleValue) {\r\n\t\t\tthis.value = new InkList();\r\n\t\t}\r\n\t\telse if (listOrSingleItem instanceof InkList) {\r\n\t\t\tthis.value = new InkList(listOrSingleItem);\r\n\t\t}\r\n\t\telse if (listOrSingleItem instanceof InkListItem && typeof singleValue === 'number') {\r\n\t\t\tthis.value = new InkList({\r\n\t\t\t\tKey: listOrSingleItem,\r\n\t\t\t\tValue: singleValue,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tpublic static RetainListOriginsForAssignment(oldValue: InkObject | null, newValue: InkObject){\r\n\t\tlet oldList = asOrNull(oldValue, ListValue);\r\n\t\tlet newList = asOrNull(newValue, ListValue);\r\n\r\n\t\tif (newList && newList.value === null) return throwNullException('newList.value');\r\n\t\tif (oldList && oldList.value === null) return throwNullException('oldList.value');\r\n\r\n\t\t// When assigning the empty list, try to retain any initial origin names\r\n\t\tif (oldList && newList && newList.value!.Count == 0)\r\n\t\t\tnewList.value!.SetInitialOriginNames(oldList.value!.originNames);\r\n\t}\r\n}\r\n\r\nexport enum ValueType {\r\n\tInt = 0,\r\n\tFloat = 1,\r\n\tList = 2,\r\n\tString = 3,\r\n\tDivertTarget = 4,\r\n\tVariablePointer = 5,\r\n}\r\n","import {InkObject} from './Object';\r\nimport {Container} from './Container';\r\n\r\nexport class SearchResult{\r\n\tpublic obj: InkObject | null = null;\r\n\tpublic approximate: boolean = false;\r\n\r\n\tget correctObj(){\r\n\t\treturn this.approximate ? null : this.obj;\r\n\t}\r\n\r\n\tget container(){\r\n\t\treturn (this.obj instanceof Container) ? this.obj : null;\r\n\t}\r\n\r\n\tpublic copy(){\r\n\t\tlet searchResult = new SearchResult();\r\n\t\tsearchResult.obj = this.obj;\r\n\t\tsearchResult.approximate = this.approximate;\r\n\r\n\t\treturn searchResult;\r\n\t}\r\n}\r\n","import {StringValue} from './Value';\r\nimport {throwNullException} from './NullException';\r\nimport {StringBuilder} from './StringBuilder';\r\nimport {INamedContent} from './INamedContent';\r\nimport {InkObject} from './Object';\r\nimport {SearchResult} from './SearchResult';\r\nimport {Path} from './Path';\r\nimport {Debug} from './Debug';\r\nimport {tryGetValueFromMap} from './TryGetResult';\r\nimport {asINamedContentOrNull, asOrNull, asOrThrows} from './TypeAssertion';\r\n\r\nexport class Container extends InkObject implements INamedContent{\r\n\tpublic name: string = '';\r\n\r\n\tpublic _content: InkObject[] = [];\r\n\tpublic namedContent: Map<string, INamedContent> = new Map();\r\n\r\n\tpublic visitsShouldBeCounted: boolean = false;\r\n\tpublic turnIndexShouldBeCounted: boolean = false;\r\n\tpublic countingAtStartOnly: boolean = false;\r\n\r\n\tpublic _pathToFirstLeafContent: Path | null = null;\r\n\r\n\tget hasValidName(){\r\n\t\treturn this.name != null && this.name.length > 0;\r\n\t}\r\n\tget content(){\r\n\t\treturn this._content;\r\n\t}\r\n\tset content(value: InkObject[]){\r\n\t\tthis.AddContent(value);\r\n\t}\r\n\tget namedOnlyContent(){\r\n\t\tlet namedOnlyContentDict: Map<string, InkObject> | null = new Map();\r\n\r\n\t\tfor (let [key, value] of this.namedContent){\r\n\t\t\tlet inkObject = asOrThrows(value, InkObject);\r\n\t\t\tnamedOnlyContentDict.set(key, inkObject);\r\n\t\t}\r\n\r\n\t\tfor (let c of this.content){\r\n\t\t\tlet named = asINamedContentOrNull(c);\r\n\t\t\tif (named != null && named.hasValidName) {\r\n\t\t\t\tnamedOnlyContentDict.delete(named.name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (namedOnlyContentDict.size == 0)\r\n\t\t\tnamedOnlyContentDict = null;\r\n\r\n\t\treturn namedOnlyContentDict;\r\n\t}\r\n\tset namedOnlyContent(value: Map<string, InkObject> | null){\r\n\t\tlet existingNamedOnly = this.namedOnlyContent;\r\n\t\tif (existingNamedOnly != null) {\r\n\t\t\tfor (let [key, val] of existingNamedOnly){\r\n\t\t\t\tthis.namedContent.delete(key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value == null)\r\n\t\t\treturn;\r\n\r\n\t\tfor (let [key, val] of value){\r\n\t\t\tlet named = asINamedContentOrNull(val);\r\n\t\t\tif (named != null)\r\n\t\t\t\tthis.AddToNamedContentOnly(named);\r\n\t\t}\r\n\t}\r\n\tget countFlags(): number{\r\n\t\tlet flags: Container.CountFlags = 0;\r\n\t\tif (this.visitsShouldBeCounted)    flags |= Container.CountFlags.Visits;\r\n\t\tif (this.turnIndexShouldBeCounted) flags |= Container.CountFlags.Turns;\r\n\t\tif (this.countingAtStartOnly)      flags |= Container.CountFlags.CountStartOnly;\r\n\r\n\t\tif (flags == Container.CountFlags.CountStartOnly) {\r\n\t\t\tflags = 0;\r\n\t\t}\r\n\r\n\t\treturn flags;\r\n\t}\r\n\tset countFlags(value: number){\r\n\t\tlet flag: Container.CountFlags = value;\r\n\t\tif ((flag & Container.CountFlags.Visits) > 0) this.visitsShouldBeCounted = true;\r\n\t\tif ((flag & Container.CountFlags.Turns) > 0)  this.turnIndexShouldBeCounted = true;\r\n\t\tif ((flag & Container.CountFlags.CountStartOnly) > 0) this.countingAtStartOnly = true;\r\n\t}\r\n\tget pathToFirstLeafContent(){\r\n\t\tif( this._pathToFirstLeafContent == null )\r\n\t\t\tthis._pathToFirstLeafContent = this.path.PathByAppendingPath(this.internalPathToFirstLeafContent);\r\n\r\n\t\treturn this._pathToFirstLeafContent;\r\n\t}\r\n\tget internalPathToFirstLeafContent(){\r\n\t\tlet components: Path.Component[] = [];\r\n\t\tlet container: Container = this;\r\n\t\twhile (container instanceof Container) {\r\n\t\t\tif (container.content.length > 0) {\r\n\t\t\t\tcomponents.push(new Path.Component(0));\r\n\t\t\t\tcontainer = container.content[0] as Container;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Path(components);\r\n\t}\r\n\r\n\tpublic AddContent(contentObjOrList: InkObject | InkObject[]){\r\n\t\tif (contentObjOrList instanceof Array){\r\n\t\t\tlet contentList = contentObjOrList as InkObject[];\r\n\r\n\t\t\tfor (let c of contentList) {\r\n\t\t\t\tthis.AddContent(c);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tlet contentObj = contentObjOrList as InkObject;\r\n\t\t\tthis._content.push(contentObj);\r\n\r\n\t\t\tif (contentObj.parent) {\r\n\t\t\t\tthrow new Error('content is already in ' + contentObj.parent);\r\n\t\t\t}\r\n\r\n\t\t\tcontentObj.parent = this;\r\n\r\n\t\t\tthis.TryAddNamedContent(contentObj);\r\n\t\t}\r\n\t}\r\n\tpublic TryAddNamedContent(contentObj: InkObject){\r\n\t\tlet namedContentObj = asINamedContentOrNull(contentObj);\r\n\t\tif (namedContentObj != null && namedContentObj.hasValidName){\r\n\t\t\tthis.AddToNamedContentOnly(namedContentObj);\r\n\t\t}\r\n\t}\r\n\tpublic AddToNamedContentOnly(namedContentObj: INamedContent){\r\n\t\tDebug.AssertType(namedContentObj, InkObject, 'Can only add Runtime.Objects to a Runtime.Container');\r\n\t\tlet runtimeObj = asOrThrows(namedContentObj, InkObject);\r\n\t\truntimeObj.parent = this;\r\n\r\n\t\tthis.namedContent.set(namedContentObj.name, namedContentObj);\r\n\t}\r\n\tpublic ContentAtPath(path: Path, partialPathStart: number = 0, partialPathLength: number = -1){\r\n\t\tif (partialPathLength == -1)\r\n\t\t\tpartialPathLength = path.length;\r\n\r\n\t\tlet result = new SearchResult();\r\n\t\tresult.approximate = false;\r\n\r\n\t\tlet currentContainer: Container | null = this;\r\n\t\tlet currentObj: InkObject = this;\r\n\r\n\t\tfor (let i = partialPathStart; i < partialPathLength; ++i) {\r\n\t\t\tlet comp = path.GetComponent(i);\r\n\t\t\tif (currentContainer == null) {\r\n\t\t\t\tresult.approximate = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet foundObj: InkObject | null = currentContainer.ContentWithPathComponent(comp);\r\n\r\n\t\t\tif (foundObj == null) {\r\n\t\t\t\tresult.approximate = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentObj = foundObj;\r\n\t\t\tcurrentContainer = asOrNull(foundObj, Container);\r\n\t\t}\r\n\r\n\t\tresult.obj = currentObj;\r\n\r\n\t\treturn result;\r\n\t}\r\n\tpublic InsertContent(contentObj: InkObject, index: number){\r\n\t\tthis.content[index] = contentObj;\r\n\r\n\t\tif (contentObj.parent) {\r\n\t\t\tthrow new Error('content is already in ' + contentObj.parent);\r\n\t\t}\r\n\r\n\t\tcontentObj.parent = this;\r\n\r\n\t\tthis.TryAddNamedContent(contentObj);\r\n\t}\r\n\tpublic AddContentsOfContainer(otherContainer: Container){\r\n\t\tthis.content = this.content.concat(otherContainer.content);\r\n\r\n\t\tfor (let obj of otherContainer.content) {\r\n\t\t\tobj.parent = this;\r\n\t\t\tthis.TryAddNamedContent(obj);\r\n\t\t}\r\n\t}\r\n\tpublic ContentWithPathComponent(component: Path.Component): InkObject | null{\r\n\t\tif (component.isIndex) {\r\n\r\n\t\t\tif (component.index >= 0 && component.index < this.content.length) {\r\n\t\t\t\treturn this.content[component.index];\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\telse if (component.isParent) {\r\n\t\t\treturn this.parent;\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tif (component.name === null) { return throwNullException('component.name'); }\r\n\t\t\tlet foundContent = tryGetValueFromMap(this.namedContent, component.name, null);\r\n\t\t\tif (foundContent.exists){\r\n\t\t\t\treturn asOrThrows(foundContent.result, InkObject);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic BuildStringOfHierarchy(): string;\r\n\tpublic BuildStringOfHierarchy(sb: StringBuilder, indentation: number, pointedObj: InkObject | null): string;\r\n\tpublic BuildStringOfHierarchy(){\r\n\t\tlet sb: StringBuilder;\r\n\t\tif (arguments.length == 0){\r\n\t\t\tsb = new StringBuilder();\r\n\t\t\tthis.BuildStringOfHierarchy(sb, 0, null);\r\n\t\t\treturn sb.toString();\r\n\t\t}\r\n\r\n\t\tsb = arguments[0] as StringBuilder;\r\n\t\tlet indentation = arguments[1] as number;\r\n\t\tlet pointedObj = arguments[2] as InkObject | null;\r\n\r\n\t\tfunction appendIndentation(){\r\n\t\t\tconst spacesPerIndent = 4; // Truly const in the original code\r\n\t\t\tfor(let i = 0; i < spacesPerIndent*indentation; ++i) {\r\n\t\t\t\tsb.Append(' ');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tappendIndentation();\r\n\t\tsb.Append('[');\r\n\r\n\t\tif (this.hasValidName) {\r\n\t\t\tsb.AppendFormat(' ({0})', this.name);\r\n\t\t}\r\n\r\n\t\tif (this == pointedObj) {\r\n\t\t\tsb.Append('  <---');\r\n\t\t}\r\n\r\n\t\tsb.AppendLine();\r\n\r\n\t\tindentation++;\r\n\r\n\t\tfor (let i = 0; i < this.content.length; ++i) {\r\n\r\n\t\t\tlet obj = this.content[i];\r\n\r\n\t\t\tif (obj instanceof Container) {\r\n\r\n\t\t\t\tlet container = obj as Container;\r\n\r\n\t\t\t\tcontainer.BuildStringOfHierarchy(sb, indentation, pointedObj);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tappendIndentation();\r\n\t\t\t\tif (obj instanceof StringValue) {\r\n\t\t\t\t\tsb.Append('\\\"');\r\n\t\t\t\t\tsb.Append(obj.toString().replace('\\n', '\\\\n'));\r\n\t\t\t\t\tsb.Append('\\\"');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsb.Append(obj.toString());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (i != this.content.length - 1) {\r\n\t\t\t\tsb.Append(',');\r\n\t\t\t}\r\n\r\n\t\t\tif ( !(obj instanceof Container) && obj == pointedObj ) {\r\n\t\t\t\tsb.Append('  <---');\r\n\t\t\t}\r\n\r\n\t\t\tsb.AppendLine();\r\n\t\t}\r\n\r\n\t\tlet onlyNamed: Map<string, INamedContent> = new Map();\r\n\r\n\t\tfor (let [key, value] of this.namedContent){\r\n\t\t\tif (this.content.indexOf(asOrThrows(value, InkObject)) >= 0) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else {\r\n\t\t\t\tonlyNamed.set(key, value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (onlyNamed.size > 0) {\r\n\t\t\tappendIndentation();\r\n\t\t\tsb.AppendLine('-- named: --');\r\n\r\n\t\t\tfor (let [key, value] of onlyNamed){\r\n\t\t\t\tDebug.AssertType(value, Container, 'Can only print out named Containers');\r\n\t\t\t\tlet container = value as Container;\r\n\t\t\t\tcontainer.BuildStringOfHierarchy(sb, indentation, pointedObj);\r\n\t\t\t\tsb.AppendLine();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tindentation--;\r\n\r\n\t\tappendIndentation();\r\n\t\tsb.Append(']');\r\n\t}\r\n}\r\n\r\nexport namespace Container{\r\n\texport enum CountFlags {\r\n\t\tVisits = 1,\r\n\t\tTurns = 2,\r\n\t\tCountStartOnly = 4,\r\n\t}\r\n}\r\n","import {InkObject} from './Object';\r\n\r\nexport class Glue extends InkObject{\r\n\tpublic toString(){\r\n\t\treturn 'Glue';\r\n\t}\r\n}\r\n","import {InkObject} from './Object';\r\n\r\nexport class ControlCommand extends InkObject{\r\n\r\n\tprivate _commandType: ControlCommand.CommandType;\r\n\r\n\tget commandType(): ControlCommand.CommandType{\r\n\t\treturn this._commandType;\r\n\t}\r\n\r\n\tconstructor(commandType: ControlCommand.CommandType = ControlCommand.CommandType.NotSet){\r\n\t\tsuper();\r\n\t\tthis._commandType = commandType;\r\n\t}\r\n\r\n\tpublic Copy(){\r\n\t\treturn new ControlCommand(this.commandType);\r\n\t}\r\n\tpublic static EvalStart(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.EvalStart);\r\n\t}\r\n\tpublic static EvalOutput(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.EvalOutput);\r\n\t}\r\n\tpublic static EvalEnd(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.EvalEnd);\r\n\t}\r\n\tpublic static Duplicate(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.Duplicate);\r\n\t}\r\n\tpublic static PopEvaluatedValue(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.PopEvaluatedValue);\r\n\t}\r\n\tpublic static PopFunction(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.PopFunction);\r\n\t}\r\n\tpublic static PopTunnel(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.PopTunnel);\r\n\t}\r\n\tpublic static BeginString(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.BeginString);\r\n\t}\r\n\tpublic static EndString(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.EndString);\r\n\t}\r\n\tpublic static NoOp(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.NoOp);\r\n\t}\r\n\tpublic static ChoiceCount(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.ChoiceCount);\r\n\t}\r\n\tpublic static Turns(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.Turns);\r\n\t}\r\n\tpublic static TurnsSince(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.TurnsSince);\r\n\t}\r\n\tpublic static ReadCount(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.ReadCount);\r\n\t}\r\n\tpublic static Random(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.Random);\r\n\t}\r\n\tpublic static SeedRandom(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.SeedRandom);\r\n\t}\r\n\tpublic static VisitIndex(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.VisitIndex);\r\n\t}\r\n\tpublic static SequenceShuffleIndex(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.SequenceShuffleIndex);\r\n\t}\r\n\tpublic static StartThread(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.StartThread);\r\n\t}\r\n\tpublic static Done(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.Done);\r\n\t}\r\n\tpublic static End(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.End);\r\n\t}\r\n\tpublic static ListFromInt(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.ListFromInt);\r\n\t}\r\n\tpublic static ListRange(){\r\n\t\treturn new ControlCommand(ControlCommand.CommandType.ListRange);\r\n\t}\r\n\tpublic static ListRandom(){\r\n\t\treturn new ControlCommand (ControlCommand.CommandType.ListRandom);\r\n\t}\r\n\tpublic toString(){\r\n\t\treturn this.commandType.toString();\r\n\t}\r\n}\r\n\r\nexport namespace ControlCommand {\r\n\texport enum CommandType {\r\n\t\tNotSet = -1,\r\n\t\tEvalStart,\r\n\t\tEvalOutput,\r\n\t\tEvalEnd,\r\n\t\tDuplicate,\r\n\t\tPopEvaluatedValue,\r\n\t\tPopFunction,\r\n\t\tPopTunnel,\r\n\t\tBeginString,\r\n\t\tEndString,\r\n\t\tNoOp,\r\n\t\tChoiceCount,\r\n\t\tTurns,\r\n\t\tTurnsSince,\r\n\t\tRandom,\r\n\t\tSeedRandom,\r\n\t\tVisitIndex,\r\n\t\tSequenceShuffleIndex,\r\n\t\tStartThread,\r\n\t\tDone,\r\n\t\tEnd,\r\n\t\tListFromInt,\r\n\t\tListRange,\r\n\t\tListRandom,\r\n\t\tReadCount,\r\n\r\n\t\tTOTAL_VALUES,\r\n\t}\r\n}\r\n","export enum PushPopType {\r\n\tTunnel = 0,\r\n\tFunction = 1,\r\n\tFunctionEvaluationFromGame = 2,\r\n}\r\n","import {Path} from './Path';\r\nimport {Container} from './Container';\r\nimport {InkObject} from './Object';\r\n\r\nexport class Pointer{\r\n  public container: Container | null = null;\r\n  public index: number = -1;\r\n\r\n\tconstructor();\r\n\tconstructor(container: Container | null, index: number)\r\n\tconstructor(){\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tthis.container = arguments[0];\r\n\t\t\tthis.index = arguments[1];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic Resolve(): InkObject | null{\r\n\t\tif (this.index < 0) return this.container;\r\n\t\tif (this.container == null) return null;\r\n\t\tif (this.container.content.length == 0) return this.container;\r\n\t\tif (this.index >= this.container.content.length) return null;\r\n\r\n\t\treturn this.container.content[this.index];\r\n\t}\r\n\r\n\tget isNull(): boolean{\r\n\t\treturn this.container == null;\r\n\t}\r\n\r\n\tget path(): Path | null{\r\n\t\tif (this.isNull) return null;\r\n\r\n\t\tif (this.index >= 0)\r\n\t\t\treturn this.container!.path.PathByAppendingComponent(new Path.Component(this.index));\r\n\t\telse\r\n\t\t\treturn this.container!.path;\r\n\t}\r\n\r\n\tpublic toString(): string{\r\n\t\tif (!this.container)\r\n\t\t\treturn 'Ink Pointer (null)';\r\n\r\n\t\treturn 'Ink Pointer -> ' + this.container.path.toString() + ' -- index ' + this.index;\r\n\t}\r\n\r\n\t// This method does not exist in the original C# code, but is here to maintain the\r\n\t// value semantics of Pointer.\r\n\tpublic copy(): Pointer{\r\n\t\treturn new Pointer(this.container, this.index);\r\n\t}\r\n\r\n\tpublic static StartOf(container: Container | null): Pointer{\r\n\t\treturn new Pointer(container, 0);\r\n\t}\r\n\r\n\tpublic static get Null(): Pointer {\r\n\t\treturn new Pointer(null, -1);\r\n\t}\r\n}\r\n","import {Path} from './Path';\r\nimport {PushPopType} from './PushPop';\r\nimport {StringBuilder} from './StringBuilder';\r\nimport {InkObject} from './Object';\r\nimport {Pointer} from './Pointer';\r\nimport {Container} from './Container';\r\nimport {throwNullException} from './NullException';\r\n\r\nexport class Divert extends InkObject{\r\n\tget targetPath(){\r\n\t\tif (this._targetPath != null && this._targetPath.isRelative) {\r\n\t\t\tlet targetObj = this.targetPointer.Resolve();\r\n\t\t\tif (targetObj) {\r\n\t\t\t\tthis._targetPath = targetObj.path;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._targetPath;\r\n\t}\r\n\tset targetPath(value: Path | null){\r\n\t\tthis._targetPath = value;\r\n\t\tthis._targetPointer = Pointer.Null;\r\n\t}\r\n\r\n\tpublic _targetPath: Path | null = null;\r\n\r\n\tget targetPointer(){\r\n\t\tif (this._targetPointer.isNull) {\r\n\t\t\tlet targetObj = this.ResolvePath(this._targetPath).obj;\r\n\r\n\t\t\tif (this._targetPath === null) return throwNullException('this._targetPath');\r\n\t\t\tif (this._targetPath.lastComponent === null) return throwNullException('this._targetPath.lastComponent');\r\n\r\n\t\t\tif (this._targetPath.lastComponent.isIndex) {\r\n\t\t\t\tif (targetObj === null) return throwNullException('targetObj');\r\n\t\t\t\tthis._targetPointer.container = (targetObj.parent instanceof Container) ? targetObj.parent : null;\r\n\t\t\t\tthis._targetPointer.index = this._targetPath.lastComponent.index;\r\n\t\t\t} else {\r\n\t\t\t\tthis._targetPointer = Pointer.StartOf((targetObj instanceof Container) ? targetObj : null);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._targetPointer.copy();\r\n\t}\r\n\r\n\tpublic _targetPointer: Pointer = Pointer.Null;\r\n\r\n\tget targetPathString(){\r\n\t\tif (this.targetPath == null)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.CompactPathString(this.targetPath);\r\n\t}\r\n\tset targetPathString(value: string | null){\r\n\t\tif (value == null) {\r\n\t\t\tthis.targetPath = null;\r\n\t\t} else {\r\n\t\t\tthis.targetPath = new Path(value);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic variableDivertName: string | null = null;\r\n\tget hasVariableTarget(){\r\n\t\treturn this.variableDivertName != null;\r\n\t}\r\n\r\n\tpublic pushesToStack: boolean = false;\r\n\tpublic stackPushType: PushPopType = 0;\r\n\r\n\tpublic isExternal: boolean = false;\r\n\tpublic externalArgs: number = 0;\r\n\r\n\tpublic isConditional: boolean = false;\r\n\r\n\tconstructor(stackPushType?: PushPopType){\r\n\t\tsuper();\r\n\t\tthis.pushesToStack = false;\r\n\r\n\t\tif (typeof stackPushType !== 'undefined') {\r\n\t\t\tthis.pushesToStack = true;\r\n\t\t\tthis.stackPushType = stackPushType;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic Equals(obj: Divert | null){\r\n\t\tlet otherDivert = obj;\r\n\t\tif (otherDivert instanceof Divert) {\r\n\t\t\tif (this.hasVariableTarget == otherDivert.hasVariableTarget) {\r\n\t\t\t\tif (this.hasVariableTarget) {\r\n\t\t\t\t\treturn this.variableDivertName == otherDivert.variableDivertName;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.targetPath === null) return throwNullException('this.targetPath');\r\n\t\t\t\t\treturn this.targetPath.Equals(otherDivert.targetPath);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic toString(){\r\n\t\tif (this.hasVariableTarget) {\r\n\t\t\treturn 'Divert(variable: ' + this.variableDivertName + ')';\r\n\t\t}\r\n\t\telse if (this.targetPath == null) {\r\n\t\t\treturn 'Divert(null)';\r\n\t\t} else {\r\n\r\n\t\t\tlet sb = new StringBuilder();\r\n\r\n\t\t\tlet targetStr = this.targetPath.toString();\r\n\t\t\t// int? targetLineNum = DebugLineNumberOfPath (targetPath);\r\n\t\t\tlet targetLineNum = null;\r\n\t\t\tif (targetLineNum != null) {\r\n\t\t\t\ttargetStr = 'line ' + targetLineNum;\r\n\t\t\t}\r\n\r\n\t\t\tsb.Append('Divert');\r\n\r\n\t\t\tif (this.isConditional)\r\n\t\t\t\tsb.Append('?');\r\n\r\n\t\t\tif (this.pushesToStack) {\r\n\t\t\t\tif (this.stackPushType == PushPopType.Function) {\r\n\t\t\t\t\tsb.Append(' function');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsb.Append(' tunnel');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsb.Append(' -> ');\r\n\t\t\tsb.Append(this.targetPathString);\r\n\r\n\t\t\tsb.Append(' (');\r\n\t\t\tsb.Append(targetStr);\r\n\t\t\tsb.Append(')');\r\n\r\n\t\t\treturn sb.toString();\r\n\t\t}\r\n\t}\r\n}\r\n","import {InkObject} from './Object';\r\nimport {Path} from './Path';\r\nimport {Container} from './Container';\r\nimport {throwNullException} from './NullException';\r\n\r\nexport class ChoicePoint extends InkObject{\r\n\tpublic _pathOnChoice: Path | null = null;\r\n\tpublic hasCondition: boolean = false;\r\n\tpublic hasStartContent: boolean = false;\r\n\tpublic hasChoiceOnlyContent: boolean = false;\r\n\tpublic isInvisibleDefault: boolean = false;\r\n\tpublic onceOnly: boolean = true;\r\n\r\n\tconstructor(onceOnly: boolean = true){\r\n\t\tsuper();\r\n\t\tthis.onceOnly = onceOnly;\r\n\t}\r\n\tget pathOnChoice(): Path | null{\r\n\t\tif (this._pathOnChoice != null && this._pathOnChoice.isRelative) {\r\n\t\t\tlet choiceTargetObj = this.choiceTarget;\r\n\t\t\tif (choiceTargetObj) {\r\n\t\t\t\tthis._pathOnChoice = choiceTargetObj.path;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._pathOnChoice;\r\n\t}\r\n\tset pathOnChoice(value: Path | null){\r\n\t\tthis._pathOnChoice = value;\r\n\t}\r\n\tget choiceTarget(): Container | null{\r\n\t\tif (this._pathOnChoice === null) return throwNullException('ChoicePoint._pathOnChoice');\r\n\t\treturn this.ResolvePath(this._pathOnChoice).container;\r\n\t}\r\n\tget pathStringOnChoice(): string{\r\n\t\tif (this.pathOnChoice === null) return throwNullException('ChoicePoint.pathOnChoice');\r\n\t\treturn this.CompactPathString(this.pathOnChoice);\r\n\t}\r\n\tset pathStringOnChoice(value: string){\r\n\t\tthis.pathOnChoice = new Path(value);\r\n\t}\r\n\tget flags(): number{\r\n\t\tlet flags = 0;\r\n\t\tif (this.hasCondition)         flags |= 1;\r\n\t\tif (this.hasStartContent)      flags |= 2;\r\n\t\tif (this.hasChoiceOnlyContent) flags |= 4;\r\n\t\tif (this.isInvisibleDefault)   flags |= 8;\r\n\t\tif (this.onceOnly)             flags |= 16;\r\n\t\treturn flags;\r\n\t}\r\n\tset flags(value: number){\r\n\t\tthis.hasCondition = (value & 1) > 0;\r\n\t\tthis.hasStartContent = (value & 2) > 0;\r\n\t\tthis.hasChoiceOnlyContent = (value & 4) > 0;\r\n\t\tthis.isInvisibleDefault = (value & 8) > 0;\r\n\t\tthis.onceOnly = (value & 16) > 0;\r\n\t}\r\n\tpublic toString(): string{\r\n\t\tif (this.pathOnChoice === null) return throwNullException('ChoicePoint.pathOnChoice');\r\n\t\t// int? targetLineNum = DebugLineNumberOfPath (pathOnChoice);\r\n\t\tlet targetLineNum = null;\r\n\t\tlet targetString = this.pathOnChoice.toString();\r\n\r\n\t\tif (targetLineNum != null) {\r\n\t\t\t targetString = ' line ' + targetLineNum + '('+targetString+')';\r\n\t\t}\r\n\r\n\t\treturn 'Choice: -> ' + targetString;\r\n\t}\r\n}\r\n","import {InkObject} from './Object';\r\nimport {Path} from './Path';\r\n\r\nexport class VariableReference extends InkObject{\r\n\r\n\tpublic name: string | null;\r\n\tpublic pathForCount: Path | null = null;\r\n\r\n\tget containerForCount(){\r\n\t\tif (this.pathForCount === null)\r\n\t\t\treturn null;\r\n\t\treturn this.ResolvePath(this.pathForCount).container;\r\n\t}\r\n\tget pathStringForCount(){\r\n\t\tif(this.pathForCount === null)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.CompactPathString(this.pathForCount);\r\n\t}\r\n\tset pathStringForCount(value: string | null){\r\n\t\tif (value === null)\r\n\t\t\tthis.pathForCount = null;\r\n\t\telse\r\n\t\t\tthis.pathForCount = new Path(value);\r\n\t}\r\n\r\n\tconstructor(name: string | null = null){\r\n\t\tsuper();\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tpublic toString(){\r\n\t\tif (this.name != null) {\r\n\t\t\treturn 'var(' + this.name + ')';\r\n\t\t} else {\r\n\t\t\tlet pathStr = this.pathStringForCount;\r\n\t\t\treturn 'read_count(' + pathStr + ')';\r\n\t\t}\r\n\t}\r\n}\r\n","import {InkObject} from './Object';\r\n\r\nexport class VariableAssignment extends InkObject{\r\n\r\n\tpublic readonly variableName: string | null;\r\n\tpublic readonly isNewDeclaration: boolean;\r\n\tpublic isGlobal: boolean;\r\n\r\n\tconstructor(variableName: string | null, isNewDeclaration: boolean){\r\n\t\tsuper();\r\n\t\tthis.variableName = variableName || null;\r\n\t\tthis.isNewDeclaration = !!isNewDeclaration;\r\n\t\tthis.isGlobal = false;\r\n\t}\r\n\r\n\tpublic toString(): string{\r\n\t\treturn 'VarAssign to ' + this.variableName;\r\n\t}\r\n}\r\n","import {InkObject} from './Object';\r\n\r\nexport class Void extends InkObject{}\r\n","import {Value, ValueType, IntValue, ListValue} from './Value';\r\nimport {StoryException} from './StoryException';\r\nimport {Void} from './Void';\r\nimport {Path} from './Path';\r\nimport {InkList, InkListItem} from './InkList';\r\nimport {InkObject} from './Object';\r\nimport {asOrNull, asOrThrows} from './TypeAssertion';\r\nimport {throwNullException} from './NullException';\r\n\r\ntype BinaryOp<T> = (left: T, right: T) => any;\r\ntype UnaryOp<T> = (val: T) => any;\r\n\r\nexport class NativeFunctionCall extends InkObject{\r\n\t// tslint:disable:variable-name\r\n\tpublic static readonly Add: string \t\t= '+';\r\n\tpublic static readonly Subtract: string = '-';\r\n\tpublic static readonly Divide: string   = '/';\r\n\tpublic static readonly Multiply: string = '*';\r\n\tpublic static readonly Mod: string      = '%';\r\n\tpublic static readonly Negate: string   = '_';\r\n\tpublic static readonly Equal: string    = '==';\r\n\tpublic static readonly Greater: string  = '>';\r\n\tpublic static readonly Less: string     = '<';\r\n\tpublic static readonly GreaterThanOrEquals: string = '>=';\r\n\tpublic static readonly LessThanOrEquals: string = '<=';\r\n\tpublic static readonly NotEquals: string   = '!=';\r\n\tpublic static readonly Not: string      = '!';\r\n\tpublic static readonly And: string      = '&&';\r\n\tpublic static readonly Or: string       = '||';\r\n\tpublic static readonly Min: string      = 'MIN';\r\n\tpublic static readonly Max: string      = 'MAX';\r\n\tpublic static readonly Pow: string      = 'POW';\r\n\tpublic static readonly Floor: string    = 'FLOOR';\r\n\tpublic static readonly Ceiling: string  = 'CEILING';\r\n\tpublic static readonly Int: string      = 'INT';\r\n\tpublic static readonly Float: string    = 'FLOAT';\r\n\tpublic static readonly Has: string      = '?';\r\n\tpublic static readonly Hasnt: string    = '!?';\r\n\tpublic static readonly Intersect: string = '^';\r\n\tpublic static readonly ListMin: string   = 'LIST_MIN';\r\n\tpublic static readonly ListMax: string   = 'LIST_MAX';\r\n\tpublic static readonly All: string       = 'LIST_ALL';\r\n\tpublic static readonly Count: string     = 'LIST_COUNT';\r\n\tpublic static readonly ValueOfList: string = 'LIST_VALUE';\r\n\tpublic static readonly Invert: string    = 'LIST_INVERT';\r\n\t// tslint:enable:variable-name\r\n\r\n\tpublic static CallWithName(functionName: string){\r\n\t\treturn new NativeFunctionCall(functionName);\r\n\t}\r\n\r\n\tpublic static CallExistsWithName(functionName: string){\r\n\t\tthis.GenerateNativeFunctionsIfNecessary();\r\n\t\treturn this._nativeFunctions!.get(functionName);\r\n\t}\r\n\r\n\tget name(){\r\n\t\tif (this._name === null) return throwNullException('NativeFunctionCall._name');\r\n\t\treturn this._name;\r\n\t}\r\n\tset name(value: string){\r\n\t\tthis._name = value;\r\n\t\tif( !this._isPrototype ) {\r\n\t\t\tif (NativeFunctionCall._nativeFunctions === null) throwNullException('NativeFunctionCall._nativeFunctions');\r\n\t\t\telse this._prototype = NativeFunctionCall._nativeFunctions.get(this._name) || null;\r\n\t\t}\r\n\t}\r\n\tpublic _name: string | null = null;\r\n\r\n\tget numberOfParameters(){\r\n\t\tif (this._prototype) {\r\n\t\t\treturn this._prototype.numberOfParameters;\r\n\t\t} else {\r\n\t\t\treturn this._numberOfParameters;\r\n\t\t}\r\n\t}\r\n\tset numberOfParameters(value: number){\r\n\t\tthis._numberOfParameters = value;\r\n\t}\r\n\tpublic _numberOfParameters: number = 0;\r\n\r\n\tpublic Call(parameters: InkObject[]): InkObject | null{\r\n\t\tif (this._prototype) {\r\n\t\t\treturn this._prototype.Call(parameters);\r\n\t\t}\r\n\r\n\t\tif (this.numberOfParameters != parameters.length) {\r\n\t\t\tthrow new Error('Unexpected number of parameters');\r\n\t\t}\r\n\r\n\t\tlet hasList  = false;\r\n\t\tfor (let p of parameters) {\r\n\t\t\tif (p instanceof Void) throw new StoryException('Attempting to perform operation on a void value. Did you forget to \"return\" a value from a function you called here?');\r\n\t\t\tif (p instanceof ListValue)\r\n\t\t\t\thasList = true;\r\n\t\t}\r\n\r\n\t\tif (parameters.length == 2 && hasList){\r\n\t\t\treturn this.CallBinaryListOperation(parameters);\r\n\t\t}\r\n\r\n\t\tlet coercedParams = this.CoerceValuesToSingleType(parameters);\r\n\t\tlet coercedType = coercedParams[0].valueType;\r\n\r\n\t\tif (coercedType == ValueType.Int) {\r\n\t\t\treturn this.CallType<number>(coercedParams);\r\n\t\t} else if (coercedType == ValueType.Float) {\r\n\t\t\treturn this.CallType<number>(coercedParams);\r\n\t\t} else if (coercedType == ValueType.String) {\r\n\t\t\treturn this.CallType<string>(coercedParams);\r\n\t\t} else if (coercedType == ValueType.DivertTarget) {\r\n\t\t\treturn this.CallType<Path>(coercedParams);\r\n\t\t} else if (coercedType == ValueType.List) {\r\n\t\t\treturn this.CallType<InkList>(coercedParams);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic CallType<T>(parametersOfSingleType: Array<Value<T>>){\r\n\t\tlet param1 = asOrThrows(parametersOfSingleType[0], Value);\r\n\t\tlet valType = param1.valueType;\r\n\r\n\t\tlet val1 = param1 as Value<T>;\r\n\r\n\t\tlet paramCount = parametersOfSingleType.length;\r\n\r\n\t\tif (paramCount == 2 || paramCount == 1) {\r\n\t\t\tif (this._operationFuncs === null) return throwNullException('NativeFunctionCall._operationFuncs');\r\n\t\t\tlet opForTypeObj = this._operationFuncs.get(valType);\r\n\t\t\tif (!opForTypeObj) {\r\n\t\t\t\tthrow new StoryException('Cannot perform operation '+this.name+' on '+valType);\r\n\t\t\t}\r\n\r\n\t\t\tif (paramCount == 2) {\r\n\t\t\t\tlet param2 = asOrThrows(parametersOfSingleType[1], Value);\r\n\r\n\t\t\t\tlet val2 = param2 as Value<T>;\r\n\r\n\t\t\t\tlet opForType = opForTypeObj as BinaryOp<T>;\r\n\r\n\t\t\t\tif (val1.value === null || val2.value === null) return throwNullException('NativeFunctionCall.Call BinaryOp values');\r\n\t\t\t\tlet resultVal = opForType(val1.value, val2.value);\r\n\r\n\t\t\t\treturn Value.Create(resultVal);\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\r\n\t\t\t\tlet opForType = opForTypeObj as UnaryOp<T>;\r\n\r\n\t\t\t\tif (val1.value === null) return throwNullException('NativeFunctionCall.Call UnaryOp value');\r\n\t\t\t\tlet resultVal = opForType(val1.value);\r\n\r\n\t\t\t\treturn Value.Create(resultVal);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tthrow new Error('Unexpected number of parameters to NativeFunctionCall: ' + parametersOfSingleType.length);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic CallBinaryListOperation(parameters: InkObject[]){\r\n\t\tif ((this.name == '+' || this.name == '-') && parameters[0] instanceof ListValue && parameters[1] instanceof IntValue)\r\n\t\t\treturn this.CallListIncrementOperation(parameters);\r\n\r\n\t\tlet v1 = asOrThrows(parameters[0], Value);\r\n\t\tlet v2 = asOrThrows(parameters[1], Value);\r\n\r\n\t\tif ((this.name == '&&' || this.name == '||') && (v1.valueType != ValueType.List || v2.valueType != ValueType.List)) {\r\n\t\t\tif (this._operationFuncs === null) return throwNullException('NativeFunctionCall._operationFuncs');\r\n\t\t\tlet op = this._operationFuncs.get(ValueType.Int) as BinaryOp<number>;\r\n\t\t\tif (op === null) return throwNullException('NativeFunctionCall.CallBinaryListOperation op');\r\n\t\t\tlet result = op(v1.isTruthy ? 1 : 0, v2.isTruthy ? 1 : 0);\r\n\t\t\treturn new IntValue(result);\r\n\t\t}\r\n\r\n\t\tif (v1.valueType == ValueType.List && v2.valueType == ValueType.List)\r\n\t\t\treturn this.CallType<InkList>([v1, v2]);\r\n\r\n\t\tthrow new StoryException('Can not call use ' + this.name + ' operation on ' + v1.valueType + ' and ' + v2.valueType);\r\n\t}\r\n\r\n\tpublic CallListIncrementOperation(listIntParams: InkObject[]){\r\n\t\tlet listVal = asOrThrows(listIntParams[0], ListValue);\r\n\t\tlet intVal = asOrThrows(listIntParams[1], IntValue);\r\n\r\n\t\tlet resultInkList = new InkList();\r\n\r\n\t\tif (listVal.value === null) return throwNullException('NativeFunctionCall.CallListIncrementOperation listVal.value');\r\n\t\tfor (let [listItemKey, listItemValue] of listVal.value) {\r\n\t\t\tlet listItem = InkListItem.fromSerializedKey(listItemKey);\r\n\r\n\t\t\tif (this._operationFuncs === null) return throwNullException('NativeFunctionCall._operationFuncs');\r\n\t\t\tlet intOp = this._operationFuncs.get(ValueType.Int) as BinaryOp<number>;\r\n\r\n\t\t\tif (intVal.value === null) return throwNullException('NativeFunctionCall.CallListIncrementOperation intVal.value');\r\n\t\t\tlet targetInt = intOp(listItemValue, intVal.value);\r\n\r\n\t\t\tlet itemOrigin = null;\r\n\t\t\tif (listVal.value.origins === null) return throwNullException('NativeFunctionCall.CallListIncrementOperation listVal.value.origins');\r\n\t\t\tfor (let origin of listVal.value.origins) {\r\n\t\t\t\tif (origin.name == listItem.originName) {\r\n\t\t\t\t\titemOrigin = origin;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (itemOrigin != null) {\r\n\t\t\t\tlet incrementedItem = itemOrigin.TryGetItemWithValue(targetInt, InkListItem.Null);\r\n\t\t\t\tif (incrementedItem.exists)\r\n\t\t\t\t\tresultInkList.Add(incrementedItem.result, targetInt);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new ListValue(resultInkList);\r\n\t}\r\n\r\n\tpublic CoerceValuesToSingleType(parametersIn: InkObject[]){\r\n\t\tlet valType = ValueType.Int;\r\n\r\n\t\tlet specialCaseList: null | ListValue = null;\r\n\r\n\t\tfor (let obj of parametersIn) {\r\n\t\t\tlet val = asOrThrows(obj, Value);\r\n\t\t\tif (val.valueType > valType) {\r\n\t\t\t\tvalType = val.valueType;\r\n\t\t\t}\r\n\r\n\t\t\tif (val.valueType == ValueType.List) {\r\n\t\t\t\t specialCaseList = asOrNull(val, ListValue);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet parametersOut = [];\r\n\r\n\t\tif (ValueType[valType] == ValueType[ValueType.List]) {\r\n\t\t\tfor (let inkObjectVal of parametersIn){\r\n\t\t\t\tlet val = asOrThrows(inkObjectVal, Value);\r\n\t\t\t\tif (val.valueType == ValueType.List) {\r\n\t\t\t\t\tparametersOut.push(val);\r\n\t\t\t\t} else if (val.valueType == ValueType.Int) {\r\n\t\t\t\t\tlet intVal = parseInt(val.valueObject);\r\n\r\n\t\t\t\t\tspecialCaseList = asOrThrows(specialCaseList, ListValue);\r\n\t\t\t\t\tif (specialCaseList.value === null) return throwNullException('NativeFunctionCall.CoerceValuesToSingleType specialCaseList.value');\r\n\t\t\t\t\tlet list = specialCaseList.value.originOfMaxItem;\r\n\r\n\t\t\t\t\tif (list === null) return throwNullException('NativeFunctionCall.CoerceValuesToSingleType list');\r\n\t\t\t\t\tlet item = list.TryGetItemWithValue(intVal, InkListItem.Null);\r\n\t\t\t\t\tif (item.exists) {\r\n\t\t\t\t\t\tlet castedValue = new ListValue(item.result, intVal);\r\n\t\t\t\t\t\tparametersOut.push(castedValue);\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthrow new StoryException('Could not find List item with the value ' + intVal + ' in ' + list.name);\r\n\t\t\t\t} else\r\n\t\t\t\t\tthrow new StoryException('Cannot mix Lists and ' + val.valueType + ' values in this operation');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tfor (let inkObjectVal of parametersIn){\r\n\t\t\t\tlet val = asOrThrows(inkObjectVal, Value);\r\n\t\t\t\tlet castedValue = val.Cast(valType);\r\n\t\t\t\tparametersOut.push(castedValue);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn parametersOut;\r\n\t}\r\n\r\n\tconstructor(name: string);\r\n\tconstructor(name: string, numberOfParameters: number);\r\n\tconstructor();\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tNativeFunctionCall.GenerateNativeFunctionsIfNecessary();\r\n\t\t}\r\n\t\telse if (arguments.length === 1) {\r\n\t\t\tlet name = arguments[0];\r\n\t\t\tNativeFunctionCall.GenerateNativeFunctionsIfNecessary();\r\n\t\t\tthis.name = name;\r\n\t\t}\r\n\t\telse if (arguments.length === 2) {\r\n\t\t\tlet name = arguments[0];\r\n\t\t\tlet numberOfParameters = arguments[1];\r\n\r\n\t\t\tthis._isPrototype = true;\r\n\t\t\tthis.name = name;\r\n\t\t\tthis.numberOfParameters = numberOfParameters;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static Identity<T>(t: T): any {\r\n\t\treturn t;\r\n\t}\r\n\r\n\tpublic static GenerateNativeFunctionsIfNecessary(){\r\n\t\tif (this._nativeFunctions == null) {\r\n\t\t\tthis._nativeFunctions = new Map();\r\n\r\n\t\t\t// Int operations\r\n\t\t\tthis.AddIntBinaryOp(this.Add,      (x, y) => x + y);\r\n\t\t\tthis.AddIntBinaryOp(this.Subtract, (x, y) => x - y);\r\n\t\t\tthis.AddIntBinaryOp(this.Multiply, (x, y) => x * y);\r\n\t\t\tthis.AddIntBinaryOp(this.Divide,   (x, y) => Math.round(x / y));\r\n\t\t\tthis.AddIntBinaryOp(this.Mod,      (x, y) => x % y);\r\n\t\t\tthis.AddIntUnaryOp(this.Negate,   (x) => -x);\r\n\r\n\t\t\tthis.AddIntBinaryOp(this.Equal,    (x, y) => x == y ? 1 : 0);\r\n\t\t\tthis.AddIntBinaryOp(this.Greater,  (x, y) => x > y  ? 1 : 0);\r\n\t\t\tthis.AddIntBinaryOp(this.Less,     (x, y) => x < y  ? 1 : 0);\r\n\t\t\tthis.AddIntBinaryOp(this.GreaterThanOrEquals, (x, y) => x >= y ? 1 : 0);\r\n\t\t\tthis.AddIntBinaryOp(this.LessThanOrEquals, (x, y) => x <= y ? 1 : 0);\r\n\t\t\tthis.AddIntBinaryOp(this.NotEquals, (x, y) => x != y ? 1 : 0);\r\n\t\t\tthis.AddIntUnaryOp(this.Not,       (x) => (x == 0) ? 1 : 0);\r\n\r\n\t\t\tthis.AddIntBinaryOp(this.And,      (x, y) => x != 0 && y != 0 ? 1 : 0);\r\n\t\t\tthis.AddIntBinaryOp(this.Or,       (x, y) => x != 0 || y != 0 ? 1 : 0);\r\n\r\n\t\t\tthis.AddIntBinaryOp(this.Max,      (x, y) => Math.max(x, y));\r\n\t\t\tthis.AddIntBinaryOp(this.Min,      (x, y) => Math.min(x, y));\r\n\r\n\t\t\tthis.AddIntBinaryOp(this.Pow,      (x, y) => Math.pow(x, y));\r\n\t\t\tthis.AddIntUnaryOp(this.Floor,     NativeFunctionCall.Identity);\r\n\t\t\tthis.AddIntUnaryOp(this.Ceiling,   NativeFunctionCall.Identity);\r\n\t\t\tthis.AddIntUnaryOp(this.Int,       NativeFunctionCall.Identity);\r\n\t\t\tthis.AddIntUnaryOp(this.Float,     (x) => x);\r\n\r\n\t\t\t// Float operations\r\n\t\t\tthis.AddFloatBinaryOp(this.Add,      (x, y) => x + y);\r\n\t\t\tthis.AddFloatBinaryOp(this.Subtract, (x, y) => x - y);\r\n\t\t\tthis.AddFloatBinaryOp(this.Multiply, (x, y) => x * y);\r\n\t\t\tthis.AddFloatBinaryOp(this.Divide,   (x, y) => x / y);\r\n\t\t\tthis.AddFloatBinaryOp(this.Mod,      (x, y) => x % y);\r\n\t\t\tthis.AddFloatUnaryOp(this.Negate,   (x) => -x);\r\n\r\n\t\t\tthis.AddFloatBinaryOp(this.Equal,    (x, y) => x == y ? 1 : 0);\r\n\t\t\tthis.AddFloatBinaryOp(this.Greater,  (x, y) => x > y  ? 1 : 0);\r\n\t\t\tthis.AddFloatBinaryOp(this.Less,     (x, y) => x < y  ? 1 : 0);\r\n\t\t\tthis.AddFloatBinaryOp(this.GreaterThanOrEquals, (x, y) => x >= y ? 1 : 0);\r\n\t\t\tthis.AddFloatBinaryOp(this.LessThanOrEquals, (x, y) => x <= y ? 1 : 0);\r\n\t\t\tthis.AddFloatBinaryOp(this.NotEquals, (x, y) => x != y ? 1 : 0);\r\n\t\t\tthis.AddFloatUnaryOp(this.Not,       (x) => (x == 0.0) ? 1 : 0);\r\n\r\n\t\t\tthis.AddFloatBinaryOp(this.And,      (x, y) => x != 0.0 && y != 0.0 ? 1 : 0);\r\n\t\t\tthis.AddFloatBinaryOp(this.Or,       (x, y) => x != 0.0 || y != 0.0 ? 1 : 0);\r\n\r\n\t\t\tthis.AddFloatBinaryOp(this.Max,      (x, y) => Math.max(x, y));\r\n\t\t\tthis.AddFloatBinaryOp(this.Min,      (x, y) => Math.min(x, y));\r\n\r\n\t\t\tthis.AddFloatBinaryOp(this.Pow,      (x, y) => Math.pow(x, y));\r\n\t\t\tthis.AddFloatUnaryOp(this.Floor,     (x) => Math.floor(x));\r\n\t\t\tthis.AddFloatUnaryOp(this.Ceiling,   (x) => Math.ceil(x));\r\n\t\t\tthis.AddFloatUnaryOp(this.Int,       (x) => Math.floor(x));\r\n\t\t\tthis.AddFloatUnaryOp(this.Float,     NativeFunctionCall.Identity);\r\n\r\n\t\t\t// String operations\r\n\t\t\tthis.AddStringBinaryOp(this.Add,     \t(x, y) => x + y); // concat\r\n\t\t\tthis.AddStringBinaryOp(this.Equal,   \t(x, y) => x === y ? 1 : 0);\r\n\t\t\tthis.AddStringBinaryOp(this.NotEquals,(x, y) => !(x === y) ? 1 : 0);\r\n\t\t\tthis.AddStringBinaryOp(this.Has,      (x, y) => x.includes(y) ? 1 : 0);\r\n\t\t\tthis.AddStringBinaryOp(this.Hasnt,      (x, y) => x.includes(y) ? 0 : 1);\r\n\r\n\t\t\tthis.AddListBinaryOp(this.Add, \t\t (x, y) => x.Union(y));\r\n\t\t\tthis.AddListBinaryOp(this.Subtract,  (x, y) => x.Without(y));\r\n\t\t\tthis.AddListBinaryOp(this.Has, \t\t (x, y) => x.Contains(y) ? 1 : 0);\r\n\t\t\tthis.AddListBinaryOp(this.Hasnt, \t (x, y) => x.Contains(y) ? 0 : 1);\r\n\t\t\tthis.AddListBinaryOp(this.Intersect, (x, y) => x.Intersect(y));\r\n\r\n\t\t\tthis.AddListBinaryOp(this.Equal, \t\t\t\t(x, y) => x.Equals(y) ? 1 : 0);\r\n\t\t\tthis.AddListBinaryOp(this.Greater, \t\t\t\t(x, y) => x.GreaterThan(y) ? 1 : 0);\r\n\t\t\tthis.AddListBinaryOp(this.Less, \t\t\t\t(x, y) => x.LessThan(y) ? 1 : 0);\r\n\t\t\tthis.AddListBinaryOp(this.GreaterThanOrEquals, \t(x, y) => x.GreaterThanOrEquals(y) ? 1 : 0);\r\n\t\t\tthis.AddListBinaryOp(this.LessThanOrEquals, \t(x, y) => x.LessThanOrEquals(y) ? 1 : 0);\r\n\t\t\tthis.AddListBinaryOp(this.NotEquals, \t\t\t(x, y) => !x.Equals(y) ? 1 : 0);\r\n\r\n\t\t\tthis.AddListBinaryOp (this.And, \t\t\t\t(x, y) => x.Count > 0 && y.Count > 0 ? 1 : 0);\r\n\t\t\tthis.AddListBinaryOp (this.Or,  \t\t\t\t(x, y) => x.Count > 0 || y.Count > 0 ? 1 : 0);\r\n\r\n\t\t\tthis.AddListUnaryOp(this.Not, (x) => x.Count == 0 ? 1 : 0);\r\n\r\n\t\t\tthis.AddListUnaryOp(this.Invert, (x) => x.inverse);\r\n\t\t\tthis.AddListUnaryOp(this.All, (x) => x.all);\r\n\t\t\tthis.AddListUnaryOp(this.ListMin, (x) => x.MinAsList());\r\n\t\t\tthis.AddListUnaryOp(this.ListMax, (x) => x.MaxAsList());\r\n\t\t\tthis.AddListUnaryOp(this.Count,  (x) => x.Count);\r\n\t\t\tthis.AddListUnaryOp(this.ValueOfList,  (x) => x.maxItem.Value);\r\n\r\n\t\t\tlet divertTargetsEqual = (d1: Path, d2: Path) => {\r\n\t\t\t\treturn d1.Equals(d2) ? 1 : 0;\r\n\t\t\t};\r\n\t\t\tlet divertTargetsNotEqual = (d1: Path, d2: Path) => {\r\n\t\t\t\treturn d1.Equals (d2) ? 0 : 1;\r\n\t\t\t};\r\n\t\t\tthis.AddOpToNativeFunc(this.Equal, 2, ValueType.DivertTarget, divertTargetsEqual);\r\n\t\t\tthis.AddOpToNativeFunc(this.NotEquals, 2, ValueType.DivertTarget, divertTargetsNotEqual);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic AddOpFuncForType(valType: ValueType, op: UnaryOp<number | InkList> | BinaryOp<number | string | InkList | Path>): void{\r\n\t\tif (this._operationFuncs == null) {\r\n\t\t\tthis._operationFuncs = new Map();\r\n\t\t}\r\n\r\n\t\tthis._operationFuncs.set(valType, op);\r\n\t}\r\n\r\n\tpublic static AddOpToNativeFunc(name: string, args: number, valType: ValueType, op: UnaryOp<any> | BinaryOp<any>): void{\r\n\t\tif (this._nativeFunctions === null) return throwNullException('NativeFunctionCall._nativeFunctions');\r\n\t\tlet nativeFunc = this._nativeFunctions.get(name);\r\n\t\tif (!nativeFunc) {\r\n\t\t\tnativeFunc = new NativeFunctionCall(name, args);\r\n\t\t\tthis._nativeFunctions.set(name, nativeFunc);\r\n\t\t}\r\n\r\n\t\tnativeFunc.AddOpFuncForType(valType, op);\r\n\t}\r\n\r\n\tpublic static AddIntBinaryOp(name: string, op: BinaryOp<number>){\r\n\t\tthis.AddOpToNativeFunc(name, 2, ValueType.Int, op);\r\n\t}\r\n\tpublic static AddIntUnaryOp(name: string, op: UnaryOp<number>){\r\n\t\tthis.AddOpToNativeFunc(name, 1, ValueType.Int, op);\r\n\t}\r\n\r\n\tpublic static AddFloatBinaryOp(name: string, op: BinaryOp<number>){\r\n\t\tthis.AddOpToNativeFunc(name, 2, ValueType.Float, op);\r\n\t}\r\n\tpublic static AddFloatUnaryOp(name: string, op: UnaryOp<number>){\r\n\t\tthis.AddOpToNativeFunc(name, 1, ValueType.Float, op);\r\n\t}\r\n\r\n\tpublic static AddStringBinaryOp(name: string, op: BinaryOp<string>){\r\n\t\tthis.AddOpToNativeFunc(name, 2, ValueType.String, op);\r\n\t}\r\n\r\n\tpublic static AddListBinaryOp(name: string, op: BinaryOp<InkList>){\r\n\t\tthis.AddOpToNativeFunc(name, 2, ValueType.List, op);\r\n\t}\r\n\tpublic static AddListUnaryOp(name: string, op: UnaryOp<InkList>){\r\n\t\tthis.AddOpToNativeFunc(name, 1, ValueType.List, op);\r\n\t}\r\n\r\n\tpublic toString(){\r\n\t\treturn 'Native \"' + this.name + '\"';\r\n\t}\r\n\r\n\tpublic _prototype: NativeFunctionCall | null = null;\r\n\tpublic _isPrototype: boolean = false;\r\n\tpublic _operationFuncs: Map<ValueType, BinaryOp<any> | UnaryOp<any>> | null = null;\r\n\tpublic static _nativeFunctions: Map<string, NativeFunctionCall> | null = null;\r\n\r\n}\r\n","import {InkObject} from './Object';\r\n\r\nexport class Tag extends InkObject{\r\n\r\n\tpublic readonly text: string;\r\n\r\n\tconstructor(tagText: string){\r\n\t\tsuper();\r\n\t\tthis.text = tagText.toString() || '';\r\n\t}\r\n\r\n\tpublic toString(): string{\r\n\t\treturn '# ' + this.text;\r\n\t}\r\n}\r\n","import {Path} from './Path';\r\nimport {CallStack} from './CallStack';\r\nimport {throwNullException} from './NullException';\r\nimport {InkObject} from './Object';\r\n\r\nexport class Choice extends InkObject{\r\n\tpublic text: string = '';\r\n\tpublic index: number = 0;\r\n\tpublic threadAtGeneration: CallStack.Thread | null = null;\r\n\tpublic sourcePath: string = '';\r\n\tpublic targetPath: Path | null = null;\r\n\tpublic isInvisibleDefault: boolean = false;\r\n\tpublic originalThreadIndex: number = 0;\r\n\r\n\tget pathStringOnChoice(): string{\r\n\t\tif (this.targetPath === null) return throwNullException('Choice.targetPath');\r\n\t\treturn this.targetPath.toString();\r\n\t}\r\n\tset pathStringOnChoice(value: string){\r\n\t\tthis.targetPath = new Path(value);\r\n\t}\r\n}\r\n","import {InkList, InkListItem, SerializedInkListItem} from './InkList';\r\nimport {ListValue} from './Value';\r\nimport {TryGetResult} from './TryGetResult';\r\n\r\nexport class ListDefinition{\r\n\tpublic _name: string;\r\n\tpublic _items: Map<SerializedInkListItem, number> | null;\r\n\tpublic _itemNameToValues: Map<string, number>;\r\n\r\n\tconstructor(name: string, items: Map<string, number> | null){\r\n\t\tthis._name = name || '';\r\n\t\tthis._items = null;\r\n\t\tthis._itemNameToValues = items || new Map();\r\n\t}\r\n\tget name(){\r\n\t\treturn this._name;\r\n\t}\r\n\tget items(){\r\n\t\tif (this._items == null){\r\n\t\t\tthis._items = new Map();\r\n\t\t\tfor (let [key, value] of this._itemNameToValues){\r\n\t\t\t\tlet item = new InkListItem(this.name, key);\r\n\t\t\t\tthis._items.set(item.serialized(), value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._items;\r\n\t}\r\n\r\n\tpublic ValueForItem(item: InkListItem){\r\n\t\tif (!item.itemName) return 0;\r\n\r\n\t\tlet intVal = this._itemNameToValues.get(item.itemName);\r\n\t\tif (typeof intVal !== 'undefined')\r\n\t\t\treturn intVal;\r\n\t\telse\r\n\t\t\treturn 0;\r\n\t}\r\n\tpublic ContainsItem(item: InkListItem){\r\n\t\tif (!item.itemName) return false;\r\n\t\tif (item.originName != this.name) return false;\r\n\r\n\t\treturn this._itemNameToValues.has(item.itemName);\r\n\t}\r\n\tpublic ContainsItemWithName(itemName: string){\r\n\t\treturn this._itemNameToValues.has(itemName);\r\n\t}\r\n\tpublic TryGetItemWithValue(val: number, /* out */ item: InkListItem): TryGetResult<InkListItem>{\r\n\t\tfor (let [key, value] of this._itemNameToValues){\r\n\t\t\tif (value == val) {\r\n\t\t\t\titem = new InkListItem(this.name, key);\r\n\t\t\t\treturn { result: item, exists: true };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\titem = InkListItem.Null;\r\n\t\treturn { result: item, exists: false };\r\n\t}\r\n\tpublic TryGetValueForItem(item: InkListItem, /* out */ intVal: number): TryGetResult<number>{\r\n\t\tif (!item.itemName) return { result: 0, exists: false };\r\n\t\tlet value = this._itemNameToValues.get(item.itemName);\r\n\r\n\t\tif (!value) return { result: 0, exists: false };\r\n\t\treturn { result: value, exists: true };\r\n\t}\r\n}\r\n","import {InkListItem} from './InkList';\r\nimport {ListValue} from './Value';\r\nimport {ListDefinition} from './ListDefinition';\r\nimport {TryGetResult} from './TryGetResult';\r\nimport {throwNullException} from './NullException';\r\n\r\nexport class ListDefinitionsOrigin{\r\n\tprotected _lists: Map<string, ListDefinition>;\r\n\tprotected _allUnambiguousListValueCache: Map<string, ListValue>;\r\n\r\n\tconstructor(lists: ListDefinition[]){\r\n\t\tthis._lists = new Map();\r\n\t\tthis._allUnambiguousListValueCache = new Map();\r\n\r\n\t\tfor (let list of lists){\r\n\t\t\tthis._lists.set(list.name, list);\r\n\r\n\t\t\tfor (let [key, val] of list.items){\r\n\t\t\t\tlet item = InkListItem.fromSerializedKey(key);\r\n\t\t\t\tlet listValue = new ListValue(item, val);\r\n\r\n\t\t\t\tif (!item.itemName) { throw new Error('item.itemName is null or undefined.'); }\r\n\r\n\t\t\t\tthis._allUnambiguousListValueCache.set(item.itemName, listValue);\r\n\t\t\t\tthis._allUnambiguousListValueCache.set(item.fullName, listValue);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget lists(): ListDefinition[]{\r\n\t\tlet listOfLists: ListDefinition[] = [];\r\n\r\n\t\tfor (let [key, value] of this._lists){\r\n\t\t\tlistOfLists.push(value);\r\n\t\t}\r\n\r\n\t\treturn listOfLists;\r\n\t}\r\n\tpublic TryListGetDefinition(name: string | null, /* out */ def: ListDefinition | null): TryGetResult<ListDefinition | null>{\r\n\t\tif (name === null) { return {result: def, exists: false}; }\r\n\t\t// initially, this function returns a boolean and the second parameter is an out.\r\n\t\tlet definition = this._lists.get(name);\r\n\t\tif (!definition) return { result: def, exists: false };\r\n\r\n\t\treturn { result: definition, exists: true };\r\n\t}\r\n\tpublic FindSingleItemListWithName(name: string | null){\r\n\t\tif (name === null) { return throwNullException('name'); }\r\n\t\tlet val = this._allUnambiguousListValueCache.get(name);\r\n\r\n\t\tif (typeof val !== 'undefined'){\r\n\t\t\treturn val;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n","import {Container} from './Container';\r\nimport {Value, IntValue, FloatValue, StringValue, DivertTargetValue, VariablePointerValue, ListValue} from './Value';\r\nimport {Glue} from './Glue';\r\nimport {ControlCommand} from './ControlCommand';\r\nimport {PushPopType} from './PushPop';\r\nimport {Divert} from './Divert';\r\nimport {ChoicePoint} from './ChoicePoint';\r\nimport {VariableReference} from './VariableReference';\r\nimport {VariableAssignment} from './VariableAssignment';\r\nimport {NativeFunctionCall} from './NativeFunctionCall';\r\nimport {Void} from './Void';\r\nimport {Tag} from './Tag';\r\nimport {Path} from './Path';\r\nimport {Choice} from './Choice';\r\nimport {ListDefinition} from './ListDefinition';\r\nimport {ListDefinitionsOrigin} from './ListDefinitionsOrigin';\r\nimport {InkListItem, InkList} from './InkList';\r\nimport {InkObject} from './Object';\r\nimport {JObject} from './JObject';\r\nimport {asOrNull, asNumberOrThrows} from './TypeAssertion';\r\nimport {throwNullException} from './NullException';\r\n\r\n// tslint:disable no-conditional-assignment\r\n\r\nexport class JsonSerialisation{\r\n\tpublic static ListToJArray(serialisables: InkObject[]){\r\n\t\tlet jArray: any[] = [];\r\n\t\tfor (let s of serialisables) {\r\n\t\t\tjArray.push(this.RuntimeObjectToJToken(s));\r\n\t\t}\r\n\t\treturn jArray;\r\n\t}\r\n\r\n\tpublic static JArrayToRuntimeObjList(jArray: any[], skipLast: boolean = false){\r\n\t\tlet count = jArray.length;\r\n\t\tif (skipLast)\r\n\t\t\tcount--;\r\n\r\n\t\tlet list: InkObject[] = [];\r\n\r\n\t\tfor (let i = 0; i < count; i++){\r\n\t\t\tlet jTok = jArray[i];\r\n\t\t\tlet runtimeObj = this.JTokenToRuntimeObject(jTok);\r\n\t\t\tif (runtimeObj === null) { return throwNullException('runtimeObj'); }\r\n\t\t\tlist.push(runtimeObj);\r\n\t\t}\r\n\r\n\t\treturn list;\r\n\t}\r\n\r\n\tpublic static DictionaryRuntimeObjsToJObject(dictionary: Map<string, InkObject>){\r\n\t\tlet jsonObj: JObject = {};\r\n\r\n\t\tfor (let [key, value] of dictionary){\r\n\t\t\tlet runtimeObj = asOrNull(value, InkObject);\r\n\t\t\tif (runtimeObj != null)\r\n\t\t\t\tjsonObj[key] = this.RuntimeObjectToJToken(runtimeObj);\r\n\t\t}\r\n\r\n\t\treturn jsonObj;\r\n\t}\r\n\r\n\tpublic static JObjectToDictionaryRuntimeObjs(jObject: JObject){\r\n\t\tlet dict: Map<string, InkObject> = new Map();\r\n\r\n\t\tfor (let key in jObject){\r\n\t\t\tif (jObject.hasOwnProperty(key)) {\r\n\t\t\t\tlet inkObject = this.JTokenToRuntimeObject(jObject[key]);\r\n\t\t\t\tif (inkObject === null) { return throwNullException('inkObject'); }\r\n\t\t\t\tdict.set(key, inkObject);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dict;\r\n\t}\r\n\r\n\tpublic static JObjectToIntDictionary(jObject: JObject){\r\n\t\tlet dict: Map<string, number> = new Map();\r\n\t\tfor (let key in jObject){\r\n\t\t\tif (jObject.hasOwnProperty(key)) {\r\n\t\t\t\tdict.set(key, parseInt(jObject[key]));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dict;\r\n\t}\r\n\tpublic static IntDictionaryToJObject(dict: Map<string, number>){\r\n\t\tlet jObj: JObject = {};\r\n\t\tfor (let [key, value] of dict){\r\n\t\t\tjObj[key] = asNumberOrThrows(value);\r\n\t\t}\r\n\t\treturn jObj;\r\n\t}\r\n\tpublic static JTokenToRuntimeObject(token: any): InkObject | null {\r\n\t\tif (typeof token === 'number' && !isNaN(token)){\r\n\t\t\treturn Value.Create(token);\r\n\t\t}\r\n\r\n\t\tif (typeof token === 'string'){\r\n\t\t\tlet str = token.toString();\r\n\r\n\t\t\t// String value\r\n\t\t\tlet firstChar = str[0];\r\n\t\t\tif (firstChar == '^')\r\n\t\t\t\treturn new StringValue(str.substring(1));\r\n\t\t\telse if(firstChar == '\\n' && str.length == 1)\r\n\t\t\t\treturn new StringValue('\\n');\r\n\r\n\t\t\t// Glue\r\n\t\t\tif (str == '<>') return new Glue();\r\n\r\n\t\t\t// Control commands (would looking up in a hash set be faster?)\r\n\t\t\tfor (let i = 0; i < JsonSerialisation._controlCommandNames.length; ++i) {\r\n\t\t\t\tlet cmdName = JsonSerialisation._controlCommandNames[i];\r\n\t\t\t\tif (str == cmdName) {\r\n\t\t\t\t\treturn new ControlCommand(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Native functions\r\n\t\t\tif (str == 'L^') str = '^';\r\n\t\t\tif( NativeFunctionCall.CallExistsWithName(str) )\r\n\t\t\t\treturn NativeFunctionCall.CallWithName(str);\r\n\r\n\t\t\t// Pop\r\n\t\t\tif (str == '->->')\r\n\t\t\t\treturn ControlCommand.PopTunnel();\r\n\t\t\telse if (str == '~ret')\r\n\t\t\t\treturn ControlCommand.PopFunction();\r\n\r\n\t\t\t// Void\r\n\t\t\tif (str == 'void')\r\n\t\t\t\treturn new Void ();\r\n\t\t}\r\n\r\n\t\tif (typeof token === 'object' && !Array.isArray(token)){\r\n\t\t\tlet obj: JObject = token;\r\n\t\t\tlet propValue;\r\n\r\n\t\t\t// Divert target value to path\r\n\t\t\tif (obj['^->']){\r\n\t\t\t\tpropValue = obj['^->'];\r\n\t\t\t\treturn new DivertTargetValue(new Path(propValue.toString()));\r\n\t\t\t}\r\n\r\n\t\t\t// VariablePointerValue\r\n\t\t\tif (obj['^var']) {\r\n\t\t\t\tpropValue = obj['^var'];\r\n\t\t\t\tlet varPtr = new VariablePointerValue(propValue.toString());\r\n\t\t\t\tif ('ci' in obj){\r\n\t\t\t\t\tpropValue = obj['ci'];\r\n\t\t\t\t\tvarPtr.contextIndex = parseInt(propValue);\r\n\t\t\t\t}\r\n\t\t\t\treturn varPtr;\r\n\t\t\t}\r\n\r\n\t\t\t// Divert\r\n\t\t\tlet isDivert = false;\r\n\t\t\tlet pushesToStack = false;\r\n\t\t\tlet divPushType = PushPopType.Function;\r\n\t\t\tlet external = false;\r\n\t\t\tif (propValue = obj['->']) {\r\n\t\t\t\tisDivert = true;\r\n\t\t\t}\r\n\t\t\telse if (propValue = obj['f()']) {\r\n\t\t\t\tisDivert = true;\r\n\t\t\t\tpushesToStack = true;\r\n\t\t\t\tdivPushType = PushPopType.Function;\r\n\t\t\t}\r\n\t\t\telse if (propValue = obj['->t->']) {\r\n\t\t\t\tisDivert = true;\r\n\t\t\t\tpushesToStack = true;\r\n\t\t\t\tdivPushType = PushPopType.Tunnel;\r\n\t\t\t}\r\n\t\t\telse if (propValue = obj['x()']) {\r\n\t\t\t\tisDivert = true;\r\n\t\t\t\texternal = true;\r\n\t\t\t\tpushesToStack = false;\r\n\t\t\t\tdivPushType = PushPopType.Function;\r\n\t\t\t}\r\n\r\n\t\t\tif (isDivert) {\r\n\t\t\t\tlet divert = new Divert();\r\n\t\t\t\tdivert.pushesToStack = pushesToStack;\r\n\t\t\t\tdivert.stackPushType = divPushType;\r\n\t\t\t\tdivert.isExternal = external;\r\n\r\n\t\t\t\tlet target = propValue.toString();\r\n\r\n\t\t\t\tif (propValue = obj['var'])\r\n\t\t\t\t\tdivert.variableDivertName = target;\r\n\t\t\t\telse\r\n\t\t\t\t\tdivert.targetPathString = target;\r\n\r\n\t\t\t\tdivert.isConditional = !!obj['c'];\r\n\r\n\t\t\t\tif (external) {\r\n\t\t\t\t\tif (propValue = obj['exArgs'])\r\n\t\t\t\t\t\tdivert.externalArgs = parseInt(propValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn divert;\r\n\t\t\t}\r\n\r\n\t\t\t// Choice\r\n\t\t\tif (propValue = obj['*']) {\r\n\t\t\t\tlet choice = new ChoicePoint();\r\n\t\t\t\tchoice.pathStringOnChoice = propValue.toString();\r\n\r\n\t\t\t\tif (propValue = obj['flg'])\r\n\t\t\t\t\tchoice.flags = parseInt(propValue);\r\n\r\n\t\t\t\treturn choice;\r\n\t\t\t}\r\n\r\n\t\t\t// Variable reference\r\n\t\t\tif (propValue = obj['VAR?']) {\r\n\t\t\t\treturn new VariableReference(propValue.toString());\r\n\t\t\t} else if (propValue = obj['CNT?']) {\r\n\t\t\t\tlet readCountVarRef = new VariableReference();\r\n\t\t\t\treadCountVarRef.pathStringForCount = propValue.toString();\r\n\t\t\t\treturn readCountVarRef;\r\n\t\t\t}\r\n\r\n\t\t\t// Variable assignment\r\n\t\t\tlet isVarAss = false;\r\n\t\t\tlet isGlobalVar = false;\r\n\t\t\tif (propValue = obj['VAR=']) {\r\n\t\t\t\tisVarAss = true;\r\n\t\t\t\tisGlobalVar = true;\r\n\t\t\t} else if (propValue = obj['temp=']) {\r\n\t\t\t\tisVarAss = true;\r\n\t\t\t\tisGlobalVar = false;\r\n\t\t\t}\r\n\t\t\tif (isVarAss) {\r\n\t\t\t\tlet varName = propValue.toString();\r\n\t\t\t\tlet isNewDecl = !obj['re'];\r\n\t\t\t\tlet varAss = new VariableAssignment(varName, isNewDecl);\r\n\t\t\t\tvarAss.isGlobal = isGlobalVar;\r\n\t\t\t\treturn varAss;\r\n\t\t\t}\r\n\t\t\tif (obj['#'] !== undefined){\r\n\t\t\t\tpropValue = obj['#'];\r\n\t\t\t\treturn new Tag(propValue.toString());\r\n\t\t\t}\r\n\r\n\t\t\t// List value\r\n\t\t\tif (propValue = obj['list']) {\r\n\t\t\t\t// var listContent = (Dictionary<string, object>)propValue;\r\n\t\t\t\tlet listContent: JObject = propValue;\r\n\t\t\t\tlet rawList = new InkList();\r\n\t\t\t\tif (propValue = obj['origins']) {\r\n\t\t\t\t\t// var namesAsObjs = (List<object>)propValue;\r\n\t\t\t\t\tlet namesAsObjs = propValue as string[];\r\n\t\t\t\t\t// rawList.SetInitialOriginNames(namesAsObjs.Cast<string>().ToList());\r\n\t\t\t\t\trawList.SetInitialOriginNames(namesAsObjs);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let key in listContent){\r\n\t\t\t\t\tif (listContent.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tlet nameToVal = listContent[key];\r\n\t\t\t\t\t\tlet item = new InkListItem(key);\r\n\t\t\t\t\t\tlet val = parseInt(nameToVal);\r\n\t\t\t\t\t\trawList.Add(item, val);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new ListValue(rawList);\r\n\t\t\t}\r\n\r\n\t\t\tif (obj['originalChoicePath'] != null)\r\n\t\t\t\treturn this.JObjectToChoice(obj);\r\n\t\t}\r\n\r\n\t\t// Array is always a Runtime.Container\r\n\t\tif (Array.isArray(token)){\r\n\t\t\treturn this.JArrayToContainer(token);\r\n\t\t}\r\n\r\n\t\tif (token === null || token === undefined)\r\n\t\t\treturn null;\r\n\r\n\t\tthrow new Error('Failed to convert token to runtime object: ' + JSON.stringify(token));\r\n\t}\r\n\r\n\tpublic static RuntimeObjectToJToken(obj: InkObject){\r\n\t\t// var container = obj as Container;\r\n\t\tlet container = asOrNull(obj, Container);\r\n\t\tif (container) {\r\n\t\t\treturn this.ContainerToJArray(container);\r\n\t\t}\r\n\r\n\t\t// var divert = obj as Divert;\r\n\t\tlet divert = asOrNull(obj, Divert);\r\n\t\tif (divert) {\r\n\t\t\tlet divTypeKey = '->';\r\n\t\t\tif (divert.isExternal)\r\n\t\t\t\tdivTypeKey = 'x()';\r\n\t\t\telse if (divert.pushesToStack) {\r\n\t\t\t\tif (divert.stackPushType == PushPopType.Function)\r\n\t\t\t\t\tdivTypeKey = 'f()';\r\n\t\t\t\telse if (divert.stackPushType == PushPopType.Tunnel)\r\n\t\t\t\t\tdivTypeKey = '->t->';\r\n\t\t\t}\r\n\r\n\t\t\tlet targetStr;\r\n\t\t\tif (divert.hasVariableTarget)\r\n\t\t\t\ttargetStr = divert.variableDivertName;\r\n\t\t\telse\r\n\t\t\t\ttargetStr = divert.targetPathString;\r\n\r\n\t\t\tlet jObj: JObject = {};\r\n\t\t\tjObj[divTypeKey] = targetStr;\r\n\r\n\t\t\tif (divert.hasVariableTarget)\r\n\t\t\t\tjObj['var'] = true;\r\n\r\n\t\t\tif (divert.isConditional)\r\n\t\t\t\tjObj['c'] = true;\r\n\r\n\t\t\tif (divert.externalArgs > 0)\r\n\t\t\t\tjObj['exArgs'] = divert.externalArgs;\r\n\r\n\t\t\treturn jObj;\r\n\t\t}\r\n\r\n\t\t// var choicePoint = obj as ChoicePoint;\r\n\t\tlet choicePoint = asOrNull(obj, ChoicePoint);\r\n\t\tif (choicePoint) {\r\n\t\t\tlet jObj: JObject = {};\r\n\t\t\tjObj['*'] = choicePoint.pathStringOnChoice;\r\n\t\t\tjObj['flg'] = choicePoint.flags;\r\n\t\t\treturn jObj;\r\n\t\t}\r\n\r\n\t\t// var intVal = obj as IntValue;\r\n\t\tlet intVal = asOrNull(obj, IntValue);\r\n\t\tif (intVal)\r\n\t\t\treturn intVal.value;\r\n\r\n\t\t// var floatVal = obj as FloatValue;\r\n\t\tlet floatVal = asOrNull(obj, FloatValue);\r\n\t\tif (floatVal)\r\n\t\t\treturn floatVal.value;\r\n\r\n\t\t// var strVal = obj as StringValue;\r\n\t\tlet strVal = asOrNull(obj, StringValue);\r\n\t\tif (strVal) {\r\n\t\t\tif (strVal.isNewline)\r\n\t\t\t\treturn '\\n';\r\n\t\t\telse\r\n\t\t\t\treturn '^' + strVal.value;\r\n\t\t}\r\n\r\n\t\t// var listVal = obj as ListValue;\r\n\t\tlet listVal = asOrNull(obj, ListValue);\r\n\t\tif (listVal) {\r\n\t\t\treturn this.InkListToJObject(listVal);\r\n\t\t}\r\n\r\n\t\t// var divTargetVal = obj as DivertTargetValue;\r\n\t\tlet divTargetVal = asOrNull(obj, DivertTargetValue);\r\n\t\tif (divTargetVal) {\r\n\t\t\tlet divTargetJsonObj: JObject = {};\r\n\t\t\tif (divTargetVal.value === null) { return throwNullException('divTargetVal.value'); }\r\n\t\t\tdivTargetJsonObj['^->'] = divTargetVal.value.componentsString;\r\n\t\t\treturn divTargetJsonObj;\r\n\t\t}\r\n\r\n\t\t// var varPtrVal = obj as VariablePointerValue;\r\n\t\tlet varPtrVal = asOrNull(obj, VariablePointerValue);\r\n\t\tif (varPtrVal) {\r\n\t\t\tlet varPtrJsonObj: JObject = {};\r\n\t\t\tvarPtrJsonObj['^var'] = varPtrVal.value;\r\n\t\t\tvarPtrJsonObj['ci'] = varPtrVal.contextIndex;\r\n\t\t\treturn varPtrJsonObj;\r\n\t\t}\r\n\r\n\t\t// var glue = obj as Runtime.Glue;\r\n\t\tlet glue = asOrNull(obj, Glue);\r\n\t\tif (glue) return '<>';\r\n\r\n\t\t// var controlCmd = obj as ControlCommand;\r\n\t\tlet controlCmd = asOrNull(obj, ControlCommand);\r\n\t\tif (controlCmd) {\r\n\t\t\treturn JsonSerialisation._controlCommandNames[controlCmd.commandType];\r\n\t\t}\r\n\r\n\t\t// var nativeFunc = obj as Runtime.NativeFunctionCall;\r\n\t\tlet nativeFunc = asOrNull(obj, NativeFunctionCall);\r\n\t\tif (nativeFunc) {\r\n\t\t\tlet name = nativeFunc.name;\r\n\r\n\t\t\tif (name == '^') name = 'L^';\r\n\t\t\treturn name;\r\n\t\t}\r\n\r\n\t\t// Variable reference\r\n\t\t// var varRef = obj as VariableReference;\r\n\t\tlet varRef = asOrNull(obj, VariableReference);\r\n\t\tif (varRef) {\r\n\t\t\tlet jObj: JObject = {};\r\n\t\t\tlet readCountPath = varRef.pathStringForCount;\r\n\t\t\tif (readCountPath != null) {\r\n\t\t\t\tjObj['CNT?'] = readCountPath;\r\n\t\t\t} else {\r\n\t\t\t\tjObj['VAR?'] = varRef.name;\r\n\t\t\t}\r\n\r\n\t\t\treturn jObj;\r\n\t\t}\r\n\r\n\t\t// Variable assignment\r\n\t\t// var varAss = obj as VariableAssignment;\r\n\t\tlet varAss = asOrNull(obj, VariableAssignment);\r\n\t\tif (varAss) {\r\n\t\t\tlet key = varAss.isGlobal ? 'VAR=' : 'temp=';\r\n\t\t\tlet jObj: JObject = {};\r\n\t\t\tjObj[key] = varAss.variableName;\r\n\r\n\t\t\t// Reassignment?\r\n\t\t\tif (!varAss.isNewDeclaration)\r\n\t\t\t\tjObj['re'] = true;\r\n\r\n\t\t\treturn jObj;\r\n\t\t}\r\n\r\n\t\t// var voidObj = obj as Void;\r\n\t\tlet voidObj = asOrNull(obj, Void);\r\n\t\tif (voidObj)\r\n\t\t\treturn 'void';\r\n\r\n\t\t// var tag = obj as Tag;\r\n\t\tlet tag = asOrNull(obj, Tag);\r\n\t\tif (tag) {\r\n\t\t\tlet jObj: JObject = {};\r\n\t\t\tjObj['#'] = tag.text;\r\n\t\t\treturn jObj;\r\n\t\t}\r\n\r\n\t\t// Used when serialising save state only\r\n\t\t// var choice = obj as Choice;\r\n\t\tlet choice = asOrNull(obj, Choice);\r\n\t\tif (choice)\r\n\t\t\treturn this.ChoiceToJObject(choice);\r\n\r\n\t\tthrow new Error('Failed to convert runtime object to Json token: ' + obj);\r\n\t}\r\n\r\n\tpublic static ContainerToJArray(container: Container){\r\n\t\tlet jArray = this.ListToJArray(container.content);\r\n\r\n\t\tlet namedOnlyContent = container.namedOnlyContent;\r\n\t\tlet countFlags = container.countFlags;\r\n\t\tif (namedOnlyContent != null && namedOnlyContent.size > 0 || countFlags > 0 || container.name != null) {\r\n\r\n\t\t\tlet terminatingObj;\r\n\t\t\tif (namedOnlyContent != null) {\r\n\t\t\t\tterminatingObj = this.DictionaryRuntimeObjsToJObject(namedOnlyContent);\r\n\r\n\t\t\t\tfor (let key in terminatingObj){\r\n\t\t\t\t\tif (terminatingObj.hasOwnProperty(key)) {\r\n\t\t\t\t\t\t// var subContainerJArray = namedContentObj.Value as JArray;\r\n\t\t\t\t\t\tlet subContainerJArray = terminatingObj[key];\r\n\t\t\t\t\t\tif (subContainerJArray != null) {\r\n\t\t\t\t\t\t\t// var attrJObj = subContainerJArray [subContainerJArray.Count - 1] as JObject;\r\n\t\t\t\t\t\t\tlet attrJObj = subContainerJArray[subContainerJArray.length - 1] as JObject;\r\n\t\t\t\t\t\t\tif (attrJObj != null) {\r\n\t\t\t\t\t\t\t\tdelete attrJObj['#n'];\r\n\t\t\t\t\t\t\t\tif (Object.keys(attrJObj).length == 0)\r\n\t\t\t\t\t\t\t\t\tsubContainerJArray[subContainerJArray.length - 1] = null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} else\r\n\t\t\t\tterminatingObj = {};\r\n\r\n\t\t\tif( countFlags > 0 )\r\n\t\t\t\tterminatingObj['#f'] = countFlags;\r\n\r\n\t\t\tif( container.name != null )\r\n\t\t\t\tterminatingObj['#n'] = container.name;\r\n\r\n\t\t\tjArray.push(terminatingObj);\r\n\t\t}\r\n\r\n\t\t// Add null terminator to indicate that there's no dictionary\r\n\t\telse {\r\n\t\t\tjArray.push(null);\r\n\t\t}\r\n\r\n\t\treturn jArray;\r\n\t}\r\n\r\n\tpublic static JArrayToContainer(jArray: any[]){\r\n\t\tlet container = new Container();\r\n\t\tcontainer.content = this.JArrayToRuntimeObjList(jArray, true);\r\n\r\n\t\tlet terminatingObj = jArray[jArray.length - 1] as JObject;\r\n\t\tif (terminatingObj != null) {\r\n\r\n\t\t\tlet namedOnlyContent = new Map();\r\n\r\n\t\t\tfor (let key in terminatingObj){\r\n\t\t\t\tif (key == '#f') {\r\n\t\t\t\t\tcontainer.countFlags = parseInt(terminatingObj[key]);\r\n\t\t\t\t} else if (key == '#n') {\r\n\t\t\t\t\tcontainer.name = terminatingObj[key].toString();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet namedContentItem = this.JTokenToRuntimeObject(terminatingObj[key]);\r\n\t\t\t\t\t// var namedSubContainer = namedContentItem as Container;\r\n\t\t\t\t\tlet namedSubContainer = asOrNull(namedContentItem, Container);\r\n\t\t\t\t\tif (namedSubContainer)\r\n\t\t\t\t\t\tnamedSubContainer.name = key;\r\n\t\t\t\t\tnamedOnlyContent.set(key, namedContentItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcontainer.namedOnlyContent = namedOnlyContent;\r\n\t\t}\r\n\r\n\t\treturn container;\r\n\t}\r\n\r\n\tpublic static JObjectToChoice(jObj: JObject){\r\n\t\tlet choice = new Choice();\r\n\t\tchoice.text = jObj['text'].toString();\r\n\t\tchoice.index = parseInt(jObj['index']);\r\n\t\tchoice.sourcePath = jObj['originalChoicePath'].toString();\r\n\t\tchoice.originalThreadIndex = parseInt(jObj['originalThreadIndex']);\r\n\t\tchoice.pathStringOnChoice = jObj['targetPath'].toString();\r\n\t\treturn choice;\r\n\t}\r\n\r\n\tpublic static ChoiceToJObject(choice: Choice){\r\n\t\tlet jObj: JObject = {};\r\n\t\tjObj['text'] = choice.text;\r\n\t\tjObj['index'] = choice.index;\r\n\t\tjObj['originalChoicePath'] = choice.sourcePath;\r\n\t\tjObj['originalThreadIndex'] = choice.originalThreadIndex;\r\n\t\tjObj['targetPath'] = choice.pathStringOnChoice;\r\n\t\treturn jObj;\r\n\t}\r\n\r\n\tpublic static InkListToJObject(listVal: ListValue){\r\n\t\tlet rawList = listVal.value;\r\n\t\tif (rawList === null) { return throwNullException('rawList'); }\r\n\r\n\t\tlet dict: JObject = {};\r\n\r\n\t\tlet content: JObject = {};\r\n\r\n\t\tfor (let [key, val] of rawList) {\r\n\t\t\tlet item = InkListItem.fromSerializedKey(key);\r\n\t\t\tcontent[item.toString()] = val;\r\n\t\t}\r\n\r\n\t\tdict['list'] = content;\r\n\r\n\t\tif (rawList.Count == 0 && rawList.originNames != null && rawList.originNames.length > 0) {\r\n\t\t\t// dict[\"origins\"] = rawList.originNames.Cast<object> ().ToList ();\r\n\t\t\tdict['origins'] = rawList.originNames;\r\n\t\t}\r\n\r\n\t\treturn dict;\r\n\t}\r\n\r\n\tpublic static ListDefinitionsToJToken(origin: ListDefinitionsOrigin){\r\n\t\tlet result: JObject = {};\r\n\r\n\t\tfor (let def of origin.lists) {\r\n\t\t\tlet listDefJson: JObject = {};\r\n\r\n\t\t\tfor (let [key, val] of def.items) {\r\n\t\t\t\tlet item = InkListItem.fromSerializedKey(key);\r\n\t\t\t\tif (item.itemName === null) { return throwNullException('item.itemName'); }\r\n\t\t\t\tlistDefJson[item.itemName] = val;\r\n\t\t\t}\r\n\r\n\t\t\tresult[def.name] = listDefJson;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static JTokenToListDefinitions(obj: JObject){\r\n\t\t// var defsObj = (Dictionary<string, object>)obj;\r\n\t\tlet defsObj = obj;\r\n\r\n\t\tlet allDefs: ListDefinition[] = [];\r\n\r\n\t\tfor (let key in defsObj){\r\n\t\t\tif (defsObj.hasOwnProperty(key)) {\r\n\t\t\t\tlet name = key.toString();\r\n\t\t\t\t// var listDefJson = (Dictionary<string, object>)kv.Value;\r\n\t\t\t\tlet listDefJson: JObject = defsObj[key];\r\n\r\n\t\t\t\t// Cast (string, object) to (string, int) for items\r\n\t\t\t\tlet items: Map<string, number> = new Map();\r\n\r\n\t\t\t\tfor (let nameValueKey in listDefJson){\r\n\t\t\t\t\tif (defsObj.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tlet nameValue = listDefJson[nameValueKey];\r\n\t\t\t\t\t\titems.set(nameValueKey, parseInt(nameValue));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet def = new ListDefinition(name, items);\r\n\t\t\t\tallDefs.push(def);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new ListDefinitionsOrigin(allDefs);\r\n\t}\r\n\r\n\tprivate static _controlCommandNames = (() => {\r\n\t\tlet _controlCommandNames: string[] = [];\r\n\r\n\t\t_controlCommandNames[ControlCommand.CommandType.EvalStart] = 'ev';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.EvalOutput] = 'out';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.EvalEnd] = '/ev';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.Duplicate] = 'du';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.PopEvaluatedValue] = 'pop';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.PopFunction] = '~ret';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.PopTunnel] = '->->';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.BeginString] = 'str';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.EndString] = '/str';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.NoOp] = 'nop';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.ChoiceCount] = 'choiceCnt';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.Turns] = 'turn';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.TurnsSince] = 'turns';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.ReadCount] = 'readc';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.Random] = 'rnd';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.SeedRandom] = 'srnd';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.VisitIndex] = 'visit';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.SequenceShuffleIndex] = 'seq';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.StartThread] = 'thread';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.Done] = 'done';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.End] = 'end';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.ListFromInt] = 'listInt';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.ListRange] = 'range';\r\n\t\t_controlCommandNames[ControlCommand.CommandType.ListRandom] = 'lrnd';\r\n\r\n\t\tfor (let i = 0; i < ControlCommand.CommandType.TOTAL_VALUES; ++i) {\r\n\t\t\tif (_controlCommandNames[i] == null)\r\n\t\t\t\tthrow new Error('Control command not accounted for in serialisation');\r\n\t\t}\r\n\r\n\t\treturn _controlCommandNames;\r\n\t})();\r\n}\r\n","// Taken from https://gist.github.com/blixt/f17b47c62508be59987b\r\n// Ink uses a seedable PRNG of which there is none in native javascript.\r\nexport class PRNG{\r\n\r\n\tprivate seed: number;\r\n\r\n\tconstructor(seed: number){\r\n\t\tthis.seed = seed % 2147483647;\r\n\t\tif (this.seed <= 0) this.seed += 2147483646;\r\n\t}\r\n\tpublic next(): number{\r\n\t\treturn this.seed = this.seed * 16807 % 2147483647;\r\n\t}\r\n\tpublic nextFloat(): number{\r\n\t\treturn (this.next() - 1) / 2147483646;\r\n\t}\r\n}\r\n","// This is simple replacement of the Stopwatch class from the .NET Framework.\r\n// The original class can count time with much more accuracy than the Javascript version.\r\n// It might be worth considering using `window.performance` in the browser\r\n// or `process.hrtime()` in node.\r\nexport class Stopwatch {\r\n\r\n\tprivate startTime: number | undefined;\r\n\r\n\tconstructor(){\r\n\t\tthis.startTime = undefined;\r\n\t}\r\n\r\n\tget ElapsedMilliseconds(): number{\r\n\t\tif (typeof this.startTime === 'undefined'){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn (new Date().getTime()) - this.startTime;\r\n\t}\r\n\r\n\tpublic Start(){\r\n\t\tthis.startTime = new Date().getTime();\r\n\t}\r\n\tpublic Stop(){\r\n\t\tthis.startTime = undefined;\r\n\t}\r\n}\r\n","import {Container} from './Container';\r\nimport {InkObject} from './Object';\r\nimport {JsonSerialisation} from './JsonSerialisation';\r\nimport {StoryState} from './StoryState';\r\nimport {ControlCommand} from './ControlCommand';\r\nimport {PushPopType} from './PushPop';\r\nimport {ChoicePoint} from './ChoicePoint';\r\nimport {Choice} from './Choice';\r\nimport {Divert} from './Divert';\r\nimport {Value, StringValue, IntValue, DivertTargetValue, VariablePointerValue, ListValue} from './Value';\r\nimport {Path} from './Path';\r\nimport {Void} from './Void';\r\nimport {Tag} from './Tag';\r\nimport {VariableAssignment} from './VariableAssignment';\r\nimport {VariableReference} from './VariableReference';\r\nimport {NativeFunctionCall} from './NativeFunctionCall';\r\nimport {StoryException} from './StoryException';\r\nimport {PRNG} from './PRNG';\r\nimport {StringBuilder} from './StringBuilder';\r\nimport {ListDefinitionsOrigin} from './ListDefinitionsOrigin';\r\nimport {ListDefinition} from './ListDefinition';\r\nimport {Stopwatch} from './StopWatch';\r\nimport {Pointer} from './Pointer';\r\nimport {InkList, InkListItem, KeyValuePair} from './InkList';\r\nimport {JObject} from './JObject';\r\nimport {asOrNull, asOrThrows} from './TypeAssertion';\r\nimport {DebugMetadata} from './DebugMetadata';\r\nimport {throwNullException} from './NullException';\r\n\r\nexport {InkList} from './InkList';\r\n\r\n// tslint:disable no-conditional-assignment\r\n\r\nif (!Number.isInteger) {\r\n\tNumber.isInteger = function isInteger(nVal: any) {\r\n\t\treturn typeof nVal === 'number' && isFinite(nVal) && nVal > -9007199254740992 && nVal < 9007199254740992 && Math.floor(nVal) === nVal;\r\n\t};\r\n}\r\n\r\nexport class Story extends InkObject{\r\n\r\n\tpublic inkVersionCurrent = 19;\r\n\r\n\tpublic inkVersionMinimumCompatible = 18;\r\n\r\n\tget currentChoices(){\r\n\t\tlet choices: Choice[] = [];\r\n\r\n\t\tif (this._state === null) { return throwNullException('this._state'); }\r\n\t\tfor(let c of this._state.currentChoices) {\r\n\t\t\tif (!c.isInvisibleDefault) {\r\n\t\t\t\tc.index = choices.length;\r\n\t\t\t\tchoices.push(c);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn choices;\r\n\t}\r\n\r\n\tget currentText(){\r\n\t\tthis.IfAsyncWeCant(\"call currentText since it's a work in progress\");\r\n\t\treturn this.state.currentText;\r\n\t}\r\n\r\n\tget currentTags(){\r\n\t\tthis.IfAsyncWeCant(\"call currentTags since it's a work in progress\");\r\n\t\treturn this.state.currentTags;\r\n\t}\r\n\r\n\tget currentErrors(){\r\n\t\treturn this.state.currentErrors;\r\n\t}\r\n\r\n\tget currentWarnings(){\r\n\t\treturn this.state.currentWarnings;\r\n\t}\r\n\r\n\tget hasError(){\r\n\t\treturn this.state.hasError;\r\n\t}\r\n\r\n\tget hasWarning(){\r\n\t\treturn this.state.hasWarning;\r\n\t}\r\n\r\n\tget variablesState(){\r\n\t\treturn this.state.variablesState;\r\n\t}\r\n\r\n\tget listDefinitions(){\r\n\t\treturn this._listDefinitions;\r\n\t}\r\n\r\n\tget state(){\r\n\t\treturn this._state;\r\n\t}\r\n\r\n\t// TODO: Implement Profiler\r\n\tpublic StartProfiling(){ /* */ }\r\n\tpublic EndProfiling(){ /* */ }\r\n\r\n\tconstructor(contentContainer: Container, lists: ListDefinition[] | null);\r\n\tconstructor(jsonString: string);\r\n\tconstructor(json: JObject);\r\n\tconstructor(){\r\n\t\tsuper();\r\n\r\n\t\t// Discrimination between constructors\r\n\t\tlet contentContainer: Container;\r\n\t\tlet lists: ListDefinition[] | null = null;\r\n\t\tlet json: JObject | null = null;\r\n\r\n\t\tif (arguments[0] instanceof Container) {\r\n\t\t\tcontentContainer = arguments[0] as Container;\r\n\r\n\t\t\tif (typeof arguments[1] !== 'undefined') {\r\n\t\t\t\tlists = arguments[1] as ListDefinition[];\r\n\t\t\t}\r\n\r\n\t\t\t// ------ Story (Container contentContainer, List<Runtime.ListDefinition> lists = null)\r\n\t\t\tthis._mainContentContainer = contentContainer;\r\n\t\t\t// ------\r\n\t\t} else {\r\n\t\t\tif (typeof arguments[0] === 'string') {\r\n\t\t\t\tlet jsonString = arguments[0] as string;\r\n\t\t\t\tjson = JSON.parse(jsonString);\r\n\t\t\t} else {\r\n\t\t\t\tjson = arguments[0] as JObject;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ------ Story (Container contentContainer, List<Runtime.ListDefinition> lists = null)\r\n\t\tif (lists != null)\r\n\t\t\tthis._listDefinitions = new ListDefinitionsOrigin(lists);\r\n\r\n\t\tthis._externals = new Map();\r\n\t\t// ------\r\n\r\n\t\t// ------ Story(string jsonString) : this((Container)null)\r\n\t\tif (json !== null) {\r\n\t\t\tlet rootObject: JObject = json;\r\n\r\n\t\t\tlet versionObj = rootObject['inkVersion'];\r\n\t\t\tif (versionObj == null)\r\n\t\t\t\tthrow new Error(\"ink version number not found. Are you sure it's a valid .ink.json file?\");\r\n\r\n\t\t\tlet formatFromFile = parseInt(versionObj);\r\n\t\t\tif (formatFromFile > this.inkVersionCurrent){\r\n\t\t\t\tthrow new Error('Version of ink used to build story was newer than the current version of the engine');\r\n\t\t\t}\r\n\t\t\telse if (formatFromFile < this.inkVersionMinimumCompatible){\r\n\t\t\t\tthrow new Error('Version of ink used to build story is too old to be loaded by this version of the engine');\r\n\t\t\t}\r\n\t\t\telse if (formatFromFile != this.inkVersionCurrent){\r\n\t\t\t\tconsole.warn(\"WARNING: Version of ink used to build story doesn't match current version of engine. Non-critical, but recommend synchronising.\");\r\n\t\t\t}\r\n\r\n\t\t\tlet rootToken = rootObject['root'];\r\n\t\t\tif (rootToken == null)\r\n\t\t\t\tthrow new Error(\"Root node for ink not found. Are you sure it's a valid .ink.json file?\");\r\n\r\n\t\t\tlet listDefsObj;\r\n\t\t\tif (listDefsObj = rootObject['listDefs']) {\r\n\t\t\t\tthis._listDefinitions = JsonSerialisation.JTokenToListDefinitions(listDefsObj);\r\n\t\t\t}\r\n\r\n\t\t\tthis._mainContentContainer = asOrThrows(JsonSerialisation.JTokenToRuntimeObject(rootToken), Container);\r\n\r\n\t\t\tthis.ResetState();\r\n\t\t}\r\n\t\t// ------\r\n\t}\r\n\r\n\tpublic ToJsonString(){\r\n\t\tlet rootContainerJsonList = JsonSerialisation.RuntimeObjectToJToken(this._mainContentContainer);\r\n\r\n\t\tlet  rootObject: JObject = {};\r\n\t\trootObject['inkVersion'] = this.inkVersionCurrent;\r\n\t\trootObject['root'] = rootContainerJsonList;\r\n\r\n\t\tif (this._listDefinitions != null)\r\n\t\t\trootObject['listDefs'] = JsonSerialisation.ListDefinitionsToJToken(this._listDefinitions);\r\n\r\n\t\treturn JSON.stringify(rootObject);\r\n\t}\r\n\r\n\tpublic ResetState(){\r\n\t\tthis.IfAsyncWeCant('ResetState');\r\n\r\n\t\tthis._state = new StoryState(this);\r\n\t\tthis._state.variablesState.ObserveVariableChange(this.VariableStateDidChangeEvent.bind(this));\r\n\r\n\t\tthis.ResetGlobals();\r\n\t}\r\n\r\n\tpublic ResetErrors(){\r\n\t\tif (this._state === null) { return throwNullException('this._state'); }\r\n\t\tthis._state.ResetErrors();\r\n\t}\r\n\r\n\tpublic ResetCallstack(){\r\n\t\tthis.IfAsyncWeCant('ResetCallstack');\r\n\t\tif (this._state === null) { return throwNullException('this._state'); }\r\n\t\tthis._state.ForceEnd();\r\n\t}\r\n\r\n\tpublic ResetGlobals(){\r\n\t\tif (this._mainContentContainer.namedContent.get('global decl')){\r\n\t\t\tlet originalPointer = this.state.currentPointer.copy();\r\n\r\n\t\t\tthis.ChoosePath(new Path('global decl'), false);\r\n\r\n\t\t\tthis.ContinueInternal();\r\n\r\n\t\t\tthis.state.currentPointer = originalPointer;\r\n\t\t}\r\n\r\n\t\tthis.state.variablesState.SnapshotDefaultGlobals();\r\n\t}\r\n\r\n\tpublic Continue(){\r\n\t\tthis.ContinueAsync(0);\r\n\t\treturn this.currentText;\r\n\t}\r\n\r\n\tget canContinue(){\r\n\t\treturn this.state.canContinue;\r\n\t}\r\n\r\n\tget asyncContinueComplete(){\r\n\t\treturn !this._asyncContinueActive;\r\n\t}\r\n\r\n\tpublic ContinueAsync(millisecsLimitAsync: number){\r\n\t\tif (!this._hasValidatedExternals)\r\n\t\t\tthis.ValidateExternalBindings();\r\n\r\n\t\tthis.ContinueInternal(millisecsLimitAsync);\r\n\t}\r\n\r\n\tpublic ContinueInternal(millisecsLimitAsync = 0){\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PreContinue();\r\n\r\n\t\tlet isAsyncTimeLimited = millisecsLimitAsync > 0;\r\n\t\tthis._recursiveContinueCount++;\r\n\r\n\t\tif (!this._asyncContinueActive) {\r\n\t\t\tthis._asyncContinueActive = isAsyncTimeLimited;\r\n\r\n\t\t\tif (!this.canContinue) {\r\n\t\t\t\tthrow new StoryException(\"Can't continue - should check canContinue before calling Continue\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._state.didSafeExit = false;\r\n\t\t\tthis._state.ResetOutput();\r\n\r\n\t\t\tif (this._recursiveContinueCount == 1)\r\n\t\t\t\tthis._state.variablesState.batchObservingVariableChanges = true;\r\n\t\t}\r\n\r\n\t\tlet durationStopwatch = new Stopwatch();\r\n\t\tdurationStopwatch.Start();\r\n\r\n\t\tlet outputStreamEndsInNewline = false;\r\n\t\tdo {\r\n\t\t\ttry {\r\n\t\t\t\toutputStreamEndsInNewline = this.ContinueSingleStep();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!(e instanceof StoryException)) throw e;\r\n\r\n\t\t\t\tthis.AddError(e.message, undefined, e.useEndLineNumber);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (outputStreamEndsInNewline)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (this._asyncContinueActive && durationStopwatch.ElapsedMilliseconds > millisecsLimitAsync) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t} while(this.canContinue);\r\n\r\n\t\tdurationStopwatch.Stop();\r\n\r\n\t\tif (outputStreamEndsInNewline || !this.canContinue) {\r\n\t\t\tif (this._stateAtLastNewline != null) {\r\n\t\t\t\tthis.RestoreStateSnapshot(this._stateAtLastNewline);\r\n\t\t\t\tthis._stateAtLastNewline = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.canContinue) {\r\n\t\t\t\tif (this.state.callStack.canPopThread)\r\n\t\t\t\t\tthis.AddError('Thread available to pop, threads should always be flat by the end of evaluation?');\r\n\r\n\t\t\t\tif (this.state.generatedChoices.length == 0 && !this.state.didSafeExit && this._temporaryEvaluationContainer == null) {\r\n\t\t\t\t\tif (this.state.callStack.CanPop(PushPopType.Tunnel))\r\n\t\t\t\t\t\tthis.AddError (\"unexpectedly reached end of content. Do you need a '->->' to return from a tunnel?\");\r\n\t\t\t\t\telse if (this.state.callStack.CanPop(PushPopType.Function))\r\n\t\t\t\t\t\tthis.AddError (\"unexpectedly reached end of content. Do you need a '~ return'?\");\r\n\t\t\t\t\telse if (!this.state.callStack.canPop)\r\n\t\t\t\t\t\tthis.AddError (\"ran out of content. Do you need a '-> DONE' or '-> END'?\");\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis.AddError ('unexpectedly reached end of content for unknown reason. Please debug compiler!');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state.didSafeExit = false;\r\n\r\n\t\t\tif (this._recursiveContinueCount == 1)\r\n\t\t\t\tthis._state.variablesState.batchObservingVariableChanges = false;\r\n\r\n\t\t\tthis._asyncContinueActive = false;\r\n\t\t}\r\n\r\n\t\tthis._recursiveContinueCount--;\r\n\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PostContinue();\r\n\t}\r\n\r\n\tpublic ContinueSingleStep(){\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PreStep();\r\n\r\n\t\tthis.Step();\r\n\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PostStep();\r\n\r\n\t\tif (!this.canContinue && !this.state.callStack.elementIsEvaluateFromGame) {\r\n\t\t\tthis.TryFollowDefaultInvisibleChoice();\r\n\t\t}\r\n\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PreSnapshot();\r\n\r\n\t\tif (!this.state.inStringEvaluation) {\r\n\r\n\t\t\tif (this._stateAtLastNewline != null) {\r\n\r\n\t\t\t\tif (this._stateAtLastNewline.currentTags === null) { return throwNullException('this._stateAtLastNewline.currentTags'); }\r\n\t\t\t\tif (this.state.currentTags === null) { return throwNullException('this.state.currentTags'); }\r\n\r\n\t\t\t\tlet change = this.CalculateNewlineOutputStateChange (\r\n\t\t\t\t\tthis._stateAtLastNewline.currentText, this.state.currentText,\r\n\t\t\t\t\tthis._stateAtLastNewline.currentTags.length, this.state.currentTags.length,\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (change == Story.OutputStateChange.ExtendedBeyondNewline) {\r\n\r\n\t\t\t\t\tthis.RestoreStateSnapshot(this._stateAtLastNewline);\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (change == Story.OutputStateChange.NewlineRemoved) {\r\n\t\t\t\t\tthis._stateAtLastNewline = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.outputStreamEndsInNewline) {\r\n\t\t\t\tif (this.canContinue) {\r\n\t\t\t\t\tif (this._stateAtLastNewline == null)\r\n\t\t\t\t\t\tthis._stateAtLastNewline = this.StateSnapshot();\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._stateAtLastNewline = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PostSnapshot();\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic CalculateNewlineOutputStateChange(prevText: string | null, currText: string | null, prevTagCount: number, currTagCount: number){\r\n\t\tif (prevText === null) { return throwNullException('prevText'); }\r\n\t\tif (currText === null) { return throwNullException('currText'); }\r\n\r\n\t\tlet newlineStillExists = currText.length >= prevText.length && currText.charAt(prevText.length - 1) == '\\n';\r\n\t\tif (prevTagCount == currTagCount && prevText.length == currText.length && newlineStillExists)\r\n\t\t\treturn Story.OutputStateChange.NoChange;\r\n\r\n\t\tif (!newlineStillExists) {\r\n\t\t\treturn Story.OutputStateChange.NewlineRemoved;\r\n\t\t}\r\n\r\n\t\tif (currTagCount > prevTagCount)\r\n\t\t\treturn Story.OutputStateChange.ExtendedBeyondNewline;\r\n\r\n\t\tfor (let i = prevText.length; i < currText.length; i++) {\r\n\t\t\tlet c = currText.charAt(i);\r\n\t\t\tif (c != ' ' && c != '\\t') {\r\n\t\t\t\treturn Story.OutputStateChange.ExtendedBeyondNewline;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Story.OutputStateChange.NoChange;\r\n\t}\r\n\r\n\tpublic ContinueMaximally(){\r\n\t\tthis.IfAsyncWeCant('ContinueMaximally');\r\n\r\n\t\tlet sb = new StringBuilder();\r\n\r\n\t\twhile (this.canContinue) {\r\n\t\t\tsb.Append(this.Continue());\r\n\t\t}\r\n\r\n\t\treturn sb.toString();\r\n\t}\r\n\r\n\tpublic ContentAtPath(path: Path){\r\n\t\treturn this.mainContentContainer.ContentAtPath(path);\r\n\t}\r\n\r\n\tpublic KnotContainerWithName(name: string){\r\n\t\tlet namedContainer = this.mainContentContainer.namedContent.get(name);\r\n\t\tif (namedContainer instanceof Container)\r\n\t\t\treturn namedContainer;\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tpublic PointerAtPath(path: Path) {\r\n\t\tif (path.length == 0)\r\n\t\t\treturn Pointer.Null;\r\n\r\n\t\tlet p = new Pointer();\r\n\r\n\t\tlet pathLengthToUse = path.length;\r\n\r\n\t\tlet result = null;\r\n\t\tif (path.lastComponent === null) { return throwNullException('path.lastComponent'); }\r\n\r\n\t\tif (path.lastComponent.isIndex) {\r\n\t\t\tpathLengthToUse = path.length - 1;\r\n\t\t\tresult = this.mainContentContainer.ContentAtPath(path, undefined, pathLengthToUse);\r\n\t\t\tp.container = result.container;\r\n\t\t\tp.index = path.lastComponent.index;\r\n\t\t} else {\r\n\t\t\tresult = this.mainContentContainer.ContentAtPath(path);\r\n\t\t\tp.container = result.container;\r\n\t\t\tp.index = -1;\r\n\t\t}\r\n\r\n\t\tif (result.obj == null || result.obj == this.mainContentContainer && pathLengthToUse > 0) {\r\n\t\t\tthis.Error(\"Failed to find content at path '\" + path + \"', and no approximation of it was possible.\");\r\n\t\t} else if (result.approximate)\r\n\t\t\tthis.Warning(\"Failed to find content at path '\" + path + \"', so it was approximated to: '\"+result.obj.path+\"'.\");\r\n\r\n\t\treturn p;\r\n\t}\r\n\r\n\tpublic StateSnapshot(){\r\n\t\treturn this.state.Copy();\r\n\t}\r\n\r\n\tpublic RestoreStateSnapshot(state: StoryState){\r\n\t\tthis._state = state;\r\n\t}\r\n\r\n\tpublic Step(){\r\n\r\n\t\tlet shouldAddToStream = true;\r\n\r\n\t\tlet pointer = this.state.currentPointer.copy();\r\n\t\tif (pointer.isNull) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Container containerToEnter = pointer.Resolve () as Container;\r\n\t\tlet containerToEnter = asOrNull(pointer.Resolve(), Container);\r\n\r\n\t\twhile(containerToEnter) {\r\n\r\n\t\t\tthis.VisitContainer(containerToEnter, true);\r\n\r\n\t\t\t// No content? the most we can do is step past it\r\n\t\t\tif (containerToEnter.content.length == 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tpointer = Pointer.StartOf(containerToEnter);\r\n\t\t\t// containerToEnter = pointer.Resolve() as Container;\r\n\t\t\tcontainerToEnter = asOrNull(pointer.Resolve(), Container);\r\n\t\t}\r\n\r\n\t\tthis.state.currentPointer = pointer.copy();\r\n\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.Step(this.state.callStack);\r\n\r\n\t\t// Is the current content object:\r\n\t\t//  - Normal content\r\n\t\t//  - Or a logic/flow statement - if so, do it\r\n\t\t// Stop flow if we hit a stack pop when we're unable to pop (e.g. return/done statement in knot\r\n\t\t// that was diverted to rather than called as a function)\r\n\t\tlet currentContentObj = pointer.Resolve();\r\n\t\tlet isLogicOrFlowControl = this.PerformLogicAndFlowControl(currentContentObj);\r\n\r\n\t\t// Has flow been forced to end by flow control above?\r\n\t\tif (this.state.currentPointer.isNull) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (isLogicOrFlowControl) {\r\n\t\t\tshouldAddToStream = false;\r\n\t\t}\r\n\r\n\t\t// Choice with condition?\r\n\t\t// var choicePoint = currentContentObj as ChoicePoint;\r\n\t\tlet choicePoint = asOrNull(currentContentObj, ChoicePoint);\r\n\t\tif (choicePoint) {\r\n\t\t\tlet choice = this.ProcessChoice(choicePoint);\r\n\t\t\tif (choice) {\r\n\t\t\t\tthis.state.generatedChoices.push(choice);\r\n\t\t\t}\r\n\r\n\t\t\tcurrentContentObj = null;\r\n\t\t\tshouldAddToStream = false;\r\n\t\t}\r\n\r\n\t\t// If the container has no content, then it will be\r\n\t\t// the \"content\" itself, but we skip over it.\r\n\t\tif (currentContentObj instanceof Container) {\r\n\t\t\tshouldAddToStream = false;\r\n\t\t}\r\n\r\n\t\t// Content to add to evaluation stack or the output stream\r\n\t\tif (shouldAddToStream) {\r\n\r\n\t\t\t// If we're pushing a variable pointer onto the evaluation stack, ensure that it's specific\r\n\t\t\t// to our current (possibly temporary) context index. And make a copy of the pointer\r\n\t\t\t// so that we're not editing the original runtime object.\r\n\t\t\t// var varPointer = currentContentObj as VariablePointerValue;\r\n\t\t\tlet varPointer = asOrNull(currentContentObj, VariablePointerValue);\r\n\t\t\tif (varPointer && varPointer.contextIndex == -1) {\r\n\r\n\t\t\t\t// Create new object so we're not overwriting the story's own data\r\n\t\t\t\tlet contextIdx = this.state.callStack.ContextForVariableNamed(varPointer.variableName);\r\n\t\t\t\tcurrentContentObj = new VariablePointerValue(varPointer.variableName, contextIdx);\r\n\t\t\t}\r\n\r\n\t\t\t// Expression evaluation content\r\n\t\t\tif (this.state.inExpressionEvaluation) {\r\n\t\t\t\tthis.state.PushEvaluationStack(currentContentObj);\r\n\t\t\t}\r\n\t\t\t// Output stream content (i.e. not expression evaluation)\r\n\t\t\telse {\r\n\t\t\t\tthis.state.PushToOutputStream(currentContentObj);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Increment the content pointer, following diverts if necessary\r\n\t\tthis.NextContent();\r\n\r\n\t\t// Starting a thread should be done after the increment to the content pointer,\r\n\t\t// so that when returning from the thread, it returns to the content after this instruction.\r\n\t\t// var controlCmd = currentContentObj as ;\r\n\t\tlet controlCmd = asOrNull(currentContentObj, ControlCommand);\r\n\t\tif (controlCmd && controlCmd.commandType == ControlCommand.CommandType.StartThread) {\r\n\t\t\tthis.state.callStack.PushThread();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic VisitContainer(container: Container, atStart: boolean){\r\n\t\tif (!container.countingAtStartOnly || atStart) {\r\n\t\t\tif (container.visitsShouldBeCounted)\r\n\t\t\t\tthis.IncrementVisitCountForContainer(container);\r\n\r\n\t\t\tif (container.turnIndexShouldBeCounted)\r\n\t\t\t\tthis.RecordTurnIndexVisitToContainer(container);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _prevContainers: Container[] = [];\r\n\tpublic VisitChangedContainersDueToDivert(){\r\n\t\tlet previousPointer = this.state.previousPointer.copy();\r\n\t\tlet pointer = this.state.currentPointer.copy();\r\n\r\n\t\tif (pointer.isNull || pointer.index == -1)\r\n\t\t\treturn;\r\n\r\n\t\tthis._prevContainers.length = 0;\r\n\t\tif (!previousPointer.isNull) {\r\n\t\t\t// Container prevAncestor = previousPointer.Resolve() as Container ?? previousPointer.container as Container;\r\n\t\t\tlet resolvedPreviousAncestor = previousPointer.Resolve();\r\n\t\t\tlet prevAncestor = asOrNull(resolvedPreviousAncestor, Container) || asOrNull(previousPointer.container, Container);\r\n\t\t\twhile (prevAncestor) {\r\n\t\t\t\tthis._prevContainers.push(prevAncestor);\r\n\t\t\t\t// prevAncestor = prevAncestor.parent as Container;\r\n\t\t\t\tprevAncestor = asOrNull(prevAncestor.parent, Container);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet currentChildOfContainer = pointer.Resolve();\r\n\r\n\t\tif (currentChildOfContainer == null) return;\r\n\r\n\t\t// Container currentContainerAncestor = currentChildOfContainer.parent as Container;\r\n\t\tlet currentContainerAncestor = asOrNull(currentChildOfContainer.parent, Container);\r\n\t\twhile (currentContainerAncestor && (this._prevContainers.indexOf(currentContainerAncestor) < 0 || currentContainerAncestor.countingAtStartOnly)) {\r\n\r\n\t\t\t// Check whether this ancestor container is being entered at the start,\r\n\t\t\t// by checking whether the child object is the first.\r\n\t\t\tlet enteringAtStart = currentContainerAncestor.content.length > 0\r\n\t\t\t\t&& currentChildOfContainer == currentContainerAncestor.content[0];\r\n\r\n\t\t\t// Mark a visit to this container\r\n\t\t\tthis.VisitContainer(currentContainerAncestor, enteringAtStart);\r\n\r\n\t\t\tcurrentChildOfContainer = currentContainerAncestor;\r\n\t\t\t// currentContainerAncestor = currentContainerAncestor.parent as Container;\r\n\t\t\tcurrentContainerAncestor = asOrNull(currentContainerAncestor.parent, Container);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ProcessChoice(choicePoint: ChoicePoint){\r\n\t\tlet showChoice = true;\r\n\r\n\t\t// Don't create choice if choice point doesn't pass conditional\r\n\t\tif (choicePoint.hasCondition) {\r\n\t\t\tlet conditionValue = this.state.PopEvaluationStack();\r\n\t\t\tif (!this.IsTruthy(conditionValue)) {\r\n\t\t\t\tshowChoice = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet startText = '';\r\n\t\tlet choiceOnlyText = '';\r\n\r\n\t\tif (choicePoint.hasChoiceOnlyContent) {\r\n\t\t\t// var choiceOnlyStrVal = state.PopEvaluationStack () as StringValue;\r\n\t\t\tlet choiceOnlyStrVal = asOrThrows(this.state.PopEvaluationStack(), StringValue);\r\n\t\t\tchoiceOnlyText = choiceOnlyStrVal.value || '';\r\n\t\t}\r\n\r\n\t\tif (choicePoint.hasStartContent) {\r\n\t\t\t// var startStrVal = state.PopEvaluationStack () as StringValue;\r\n\t\t\tlet startStrVal = asOrThrows(this.state.PopEvaluationStack(), StringValue);\r\n\t\t\tstartText = startStrVal.value || '';\r\n\t\t}\r\n\r\n\t\t// Don't create choice if player has already read this content\r\n\t\tif (choicePoint.onceOnly) {\r\n\t\t\tlet visitCount = this.VisitCountForContainer(choicePoint.choiceTarget);\r\n\t\t\tif (visitCount > 0) {\r\n\t\t\t\tshowChoice = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// We go through the full process of creating the choice above so\r\n\t\t// that we consume the content for it, since otherwise it'll\r\n\t\t// be shown on the output stream.\r\n\t\tif (!showChoice) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet choice = new Choice();\r\n\t\tchoice.targetPath = choicePoint.pathOnChoice;\r\n\t\tchoice.sourcePath = choicePoint.path.toString();\r\n\t\tchoice.isInvisibleDefault = choicePoint.isInvisibleDefault;\r\n\t\tchoice.threadAtGeneration = this.state.callStack.ForkThread();\r\n\r\n\t\tchoice.text = (startText + choiceOnlyText).replace(/^[ \\t]+|[ \\t]+$/g, '');\r\n\r\n\t\treturn choice;\r\n\t}\r\n\r\n\tpublic IsTruthy(obj: InkObject){\r\n\t\tlet truthy = false;\r\n\t\tif (obj instanceof Value) {\r\n\t\t\tlet val = obj;\r\n\r\n\t\t\tif (val instanceof DivertTargetValue) {\r\n\t\t\t\tlet divTarget = val;\r\n\t\t\t\tthis.Error(\"Shouldn't use a divert target (to \" + divTarget.targetPath + \") as a conditional value. Did you intend a function call 'likeThis()' or a read count check 'likeThis'? (no arrows)\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn val.isTruthy;\r\n\t\t}\r\n\t\treturn truthy;\r\n\t}\r\n\r\n\tpublic PerformLogicAndFlowControl(contentObj: InkObject | null){\r\n\t\tif( contentObj == null ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Divert\r\n\t\tif (contentObj instanceof Divert) {\r\n\t\t\tlet currentDivert = contentObj;\r\n\r\n\t\t\tif (currentDivert.isConditional) {\r\n\t\t\t\tlet conditionValue = this.state.PopEvaluationStack();\r\n\r\n\t\t\t\t// False conditional? Cancel divert\r\n\t\t\t\tif (!this.IsTruthy(conditionValue))\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (currentDivert.hasVariableTarget) {\r\n\t\t\t\tlet varName = currentDivert.variableDivertName;\r\n\r\n\t\t\t\tlet varContents = this.state.variablesState.GetVariableWithName(varName);\r\n\r\n\t\t\t\tif (varContents == null) {\r\n\t\t\t\t\tthis.Error('Tried to divert using a target from a variable that could not be found (' + varName + ')');\r\n\t\t\t\t}\r\n\t\t\t\telse if (!(varContents instanceof DivertTargetValue)) {\r\n\r\n\t\t\t\t\t// var intContent = varContents as IntValue;\r\n\t\t\t\t\tlet intContent = asOrNull(varContents, IntValue);\r\n\r\n\t\t\t\t\tlet errorMessage = 'Tried to divert to a target from a variable, but the variable (' + varName + \") didn't contain a divert target, it \";\r\n\t\t\t\t\tif (intContent instanceof IntValue && intContent.value == 0) {\r\n\t\t\t\t\t\terrorMessage += 'was empty/null (the value 0).';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\terrorMessage += \"contained '\" + varContents + \"'.\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.Error(errorMessage);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet target = asOrThrows(varContents, DivertTargetValue);\r\n\t\t\t\tthis.state.divertedPointer = this.PointerAtPath(target.targetPath);\r\n\r\n\t\t\t} else if (currentDivert.isExternal) {\r\n\t\t\t\tthis.CallExternalFunction(currentDivert.targetPathString, currentDivert.externalArgs);\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.state.divertedPointer = currentDivert.targetPointer.copy();\r\n\t\t\t}\r\n\r\n\t\t\tif (currentDivert.pushesToStack) {\r\n\t\t\t\tthis.state.callStack.Push(\r\n\t\t\t\t\tcurrentDivert.stackPushType,\r\n\t\t\t\t\tundefined,\r\n\t\t\t\t\tthis.state.outputStream.length,\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.divertedPointer.isNull && !currentDivert.isExternal) {\r\n\r\n\t\t\t\tif (currentDivert && currentDivert.debugMetadata && currentDivert.debugMetadata.sourceName != null) {\r\n\t\t\t\t\tthis.Error(\"Divert target doesn't exist: \" + currentDivert.debugMetadata.sourceName);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.Error('Divert resolution failed: ' + currentDivert);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Start/end an expression evaluation? Or print out the result?\r\n\t\telse if( contentObj instanceof ControlCommand ) {\r\n\t\t\tlet evalCommand = contentObj;\r\n\r\n\t\t\tswitch (evalCommand.commandType) {\r\n\r\n\t\t\tcase ControlCommand.CommandType.EvalStart:\r\n\t\t\t\tthis.Assert(this.state.inExpressionEvaluation === false, 'Already in expression evaluation?');\r\n\t\t\t\tthis.state.inExpressionEvaluation = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.EvalEnd:\r\n\t\t\t\tthis.Assert(this.state.inExpressionEvaluation === true, 'Not in expression evaluation mode');\r\n\t\t\t\tthis.state.inExpressionEvaluation = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.EvalOutput:\r\n\r\n\t\t\t\t// If the expression turned out to be empty, there may not be anything on the stack\r\n\t\t\t\tif (this.state.evaluationStack.length > 0) {\r\n\r\n\t\t\t\t\tlet output = this.state.PopEvaluationStack();\r\n\r\n\t\t\t\t\t// Functions may evaluate to Void, in which case we skip output\r\n\t\t\t\t\tif (!(output instanceof Void)) {\r\n\t\t\t\t\t\t// TODO: Should we really always blanket convert to string?\r\n\t\t\t\t\t\t// It would be okay to have numbers in the output stream the\r\n\t\t\t\t\t\t// only problem is when exporting text for viewing, it skips over numbers etc.\r\n\t\t\t\t\t\tlet text = new StringValue(output.toString());\r\n\r\n\t\t\t\t\t\tthis.state.PushToOutputStream(text);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.NoOp:\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.Duplicate:\r\n\t\t\t\tthis.state.PushEvaluationStack(this.state.PeekEvaluationStack());\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.PopEvaluatedValue:\r\n\t\t\t\tthis.state.PopEvaluationStack();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.PopFunction:\r\n\t\t\tcase ControlCommand.CommandType.PopTunnel:\r\n\r\n\t\t\t\tlet popType = evalCommand.commandType == ControlCommand.CommandType.PopFunction ?\r\n\t\t\t\t\tPushPopType.Function : PushPopType.Tunnel;\r\n\r\n\t\t\t\tlet overrideTunnelReturnTarget: DivertTargetValue | null = null;\r\n\t\t\t\tif (popType == PushPopType.Tunnel) {\r\n\t\t\t\t\tlet popped = this.state.PopEvaluationStack();\r\n\t\t\t\t\t// overrideTunnelReturnTarget = popped as DivertTargetValue;\r\n\t\t\t\t\toverrideTunnelReturnTarget = asOrNull(popped, DivertTargetValue);\r\n\t\t\t\t\tif (overrideTunnelReturnTarget === null) {\r\n\t\t\t\t\t\tthis.Assert(popped instanceof Void, \"Expected void if ->-> doesn't override target\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.state.TryExitFunctionEvaluationFromGame()){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.state.callStack.currentElement.type != popType || !this.state.callStack.canPop) {\r\n\r\n\t\t\t\t\tlet names: Map<PushPopType, string> = new Map();\r\n\t\t\t\t\tnames.set(PushPopType.Function, 'function return statement (~ return)');\r\n\t\t\t\t\tnames.set(PushPopType.Tunnel, 'tunnel onwards statement (->->)');\r\n\r\n\t\t\t\t\tlet expected = names.get(this.state.callStack.currentElement.type);\r\n\t\t\t\t\tif (!this.state.callStack.canPop) {\r\n\t\t\t\t\t\texpected = 'end of flow (-> END or choice)';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet errorMsg = 'Found ' + names.get(popType) + ', when expected ' + expected;\r\n\r\n\t\t\t\t\tthis.Error(errorMsg);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.PopCallStack();\r\n\r\n\t\t\t\t\tif (overrideTunnelReturnTarget)\r\n\t\t\t\t\t\tthis.state.divertedPointer = this.PointerAtPath(overrideTunnelReturnTarget.targetPath);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.BeginString:\r\n\t\t\t\tthis.state.PushToOutputStream(evalCommand);\r\n\r\n\t\t\t\tthis.Assert(this.state.inExpressionEvaluation === true, 'Expected to be in an expression when evaluating a string');\r\n\t\t\t\tthis.state.inExpressionEvaluation = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.EndString:\r\n\r\n\t\t\t\tlet contentStackForString: InkObject[] = [];\r\n\r\n\t\t\t\tlet outputCountConsumed = 0;\r\n\t\t\t\tfor (let i = this.state.outputStream.length - 1; i >= 0; --i) {\r\n\t\t\t\t\tlet obj = this.state.outputStream[i];\r\n\r\n\t\t\t\t\toutputCountConsumed++;\r\n\r\n\t\t\t\t\t// var command = obj as ControlCommand;\r\n\t\t\t\t\tlet command = asOrNull(obj, ControlCommand);\r\n\t\t\t\t\tif (command && command.commandType == ControlCommand.CommandType.BeginString) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( obj instanceof StringValue ) {\r\n\t\t\t\t\t\tcontentStackForString.push(obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Consume the content that was produced for this string\r\n\t\t\t\tthis.state.PopFromOutputStream(outputCountConsumed);\r\n\r\n\t\t\t\t// The C# version uses a Stack for contentStackForString, but we're\r\n\t\t\t\t// using a simple array, so we need to reverse it before using it\r\n\t\t\t\tcontentStackForString = contentStackForString.reverse();\r\n\r\n\t\t\t\t// Build string out of the content we collected\r\n\t\t\t\tlet sb = new StringBuilder();\r\n\t\t\t\tfor (let c of contentStackForString) {\r\n\t\t\t\t\tsb.Append(c.toString());\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return to expression evaluation (from content mode)\r\n\t\t\t\tthis.state.inExpressionEvaluation = true;\r\n\t\t\t\tthis.state.PushEvaluationStack(new StringValue(sb.toString()));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.ChoiceCount:\r\n\t\t\t\tlet choiceCount = this.state.generatedChoices.length;\r\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(choiceCount));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.Turns:\r\n\t\t\t\tthis.state.PushEvaluationStack (new IntValue (this.state.currentTurnIndex+1));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.TurnsSince:\r\n\t\t\tcase ControlCommand.CommandType.ReadCount:\r\n\t\t\t\tlet target = this.state.PopEvaluationStack();\r\n\t\t\t\tif( !(target instanceof DivertTargetValue) ) {\r\n\t\t\t\t\tlet extraNote = '';\r\n\t\t\t\t\tif( target instanceof IntValue )\r\n\t\t\t\t\t\textraNote = \". Did you accidentally pass a read count ('knot_name') instead of a target ('-> knot_name')?\";\r\n\t\t\t\t\tthis.Error('TURNS_SINCE / READ_COUNT expected a divert target (knot, stitch, label name), but saw '+target+extraNote);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// var divertTarget = target as DivertTargetValue;\r\n\t\t\t\tlet divertTarget = asOrThrows(target, DivertTargetValue);\r\n\t\t\t\t// var container = ContentAtPath (divertTarget.targetPath).correctObj as Container;\r\n\t\t\t\tlet container = asOrNull(this.ContentAtPath(divertTarget.targetPath).correctObj, Container);\r\n\r\n\t\t\t\tlet eitherCount;\r\n\t\t\t\tif (container != null) {\r\n\t\t\t\t\tif (evalCommand.commandType == ControlCommand.CommandType.TurnsSince)\r\n\t\t\t\t\t\teitherCount = this.TurnsSinceForContainer(container);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\teitherCount = this.VisitCountForContainer(container);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (evalCommand.commandType == ControlCommand.CommandType.TurnsSince)\r\n\t\t\t\t\t\teitherCount = -1;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\teitherCount = 0;\r\n\r\n\t\t\t\t\tthis.Warning('Failed to find container for ' + evalCommand.toString() + ' lookup at ' + divertTarget.targetPath.toString());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(eitherCount));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.Random: {\r\n\t\t\t\tlet maxInt = asOrNull(this.state.PopEvaluationStack(), IntValue);\r\n\t\t\t\tlet minInt = asOrNull(this.state.PopEvaluationStack(), IntValue);\r\n\r\n\t\t\t\tif (minInt == null || minInt instanceof IntValue === false)\r\n\t\t\t\t\treturn this.Error('Invalid value for minimum parameter of RANDOM(min, max)');\r\n\r\n\t\t\t\tif (maxInt == null || minInt instanceof IntValue === false)\r\n\t\t\t\t\treturn this.Error('Invalid value for maximum parameter of RANDOM(min, max)');\r\n\r\n\t\t\t\t// Originally a primitive type, but here, can be null.\r\n\t\t\t\t// TODO: Replace by default value?\r\n\t\t\t\tif (maxInt.value === null) { return throwNullException('maxInt.value'); }\r\n\t\t\t\tif (minInt.value === null) { return throwNullException('minInt.value'); }\r\n\r\n\t\t\t\tlet randomRange = maxInt.value - minInt.value + 1;\r\n\t\t\t\tif (randomRange <= 0)\r\n\t\t\t\t\tthis.Error('RANDOM was called with minimum as ' + minInt.value + ' and maximum as ' + maxInt.value + '. The maximum must be larger');\r\n\r\n\t\t\t\tlet resultSeed = this.state.storySeed + this.state.previousRandom;\r\n\t\t\t\tlet random = new PRNG(resultSeed);\r\n\r\n\t\t\t\tlet nextRandom = random.next();\r\n\t\t\t\tlet chosenValue = (nextRandom % randomRange) + minInt.value;\r\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(chosenValue));\r\n\r\n\t\t\t\t// Next random number (rather than keeping the Random object around)\r\n\t\t\t\tthis.state.previousRandom = nextRandom;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase ControlCommand.CommandType.SeedRandom:\r\n\t\t\t\tlet seed = asOrNull(this.state.PopEvaluationStack(), IntValue);\r\n\t\t\t\tif (seed == null || seed instanceof IntValue === false)\r\n\t\t\t\t\treturn this.Error('Invalid value passed to SEED_RANDOM');\r\n\r\n\t\t\t\t// Originally a primitive type, but here, can be null.\r\n\t\t\t\t// TODO: Replace by default value?\r\n\t\t\t\tif (seed.value === null) { return throwNullException('minInt.value'); }\r\n\r\n\t\t\t\tthis.state.storySeed = seed.value;\r\n\t\t\t\tthis.state.previousRandom = 0;\r\n\r\n\t\t\t\tthis.state.PushEvaluationStack(new Void());\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.VisitIndex:\r\n\t\t\t\tlet count = this.VisitCountForContainer(this.state.currentPointer.container) - 1; // index not count\r\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(count));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.SequenceShuffleIndex:\r\n\t\t\t\tlet shuffleIndex = this.NextSequenceShuffleIndex();\r\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(shuffleIndex));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.StartThread:\r\n\t\t\t\t// Handled in main step function\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.Done:\r\n\t\t\t\t// We may exist in the context of the initial\r\n\t\t\t\t// act of creating the thread, or in the context of\r\n\t\t\t\t// evaluating the content.\r\n\t\t\t\tif (this.state.callStack.canPopThread) {\r\n\t\t\t\t\tthis.state.callStack.PopThread();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// In normal flow - allow safe exit without warning\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.didSafeExit = true;\r\n\r\n\t\t\t\t\t// Stop flow in current thread\r\n\t\t\t\t\tthis.state.currentPointer = Pointer.Null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// Force flow to end completely\r\n\t\t\tcase ControlCommand.CommandType.End:\r\n\t\t\t\tthis.state.ForceEnd();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.ListFromInt:\r\n\t\t\t\t// var intVal = state.PopEvaluationStack () as IntValue;\r\n\t\t\t\tlet intVal = asOrNull(this.state.PopEvaluationStack(), IntValue);\r\n\t\t\t\t// var listNameVal = state.PopEvaluationStack () as StringValue;\r\n\t\t\t\tlet listNameVal = asOrThrows(this.state.PopEvaluationStack(), StringValue);\r\n\r\n\t\t\t\tif (intVal === null) {\r\n\t\t\t\t\tthrow new StoryException('Passed non-integer when creating a list element from a numerical value.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet generatedListValue = null;\r\n\r\n\t\t\t\tif (this.listDefinitions === null) { return throwNullException('this.listDefinitions'); }\r\n\t\t\t\tlet foundListDef = this.listDefinitions.TryListGetDefinition(listNameVal.value, null);\r\n\t\t\t\tif (foundListDef.exists) {\r\n\t\t\t\t\t// Originally a primitive type, but here, can be null.\r\n\t\t\t\t\t// TODO: Replace by default value?\r\n\t\t\t\t\tif (intVal.value === null) { return throwNullException('minInt.value'); }\r\n\r\n\t\t\t\t\tlet foundItem = foundListDef.result!.TryGetItemWithValue(intVal.value, InkListItem.Null);\r\n\t\t\t\t\tif (foundItem.exists) {\r\n\t\t\t\t\t\tgeneratedListValue = new ListValue(foundItem.result!, intVal.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new StoryException('Failed to find LIST called ' + listNameVal.value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (generatedListValue == null)\r\n\t\t\t\t\tgeneratedListValue = new ListValue();\r\n\r\n\t\t\t\tthis.state.PushEvaluationStack(generatedListValue);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.ListRange:\r\n\t\t\t\tlet max = asOrNull(this.state.PopEvaluationStack(), Value);\r\n\t\t\t\tlet min = asOrNull(this.state.PopEvaluationStack(), Value);\r\n\r\n\t\t\t\t// var targetList = state.PopEvaluationStack () as ListValue;\r\n\t\t\t\tlet targetList = asOrNull(this.state.PopEvaluationStack(), ListValue);\r\n\r\n\t\t\t\tif (targetList === null || min === null || max === null)\r\n\t\t\t\t\tthrow new StoryException('Expected list, minimum and maximum for LIST_RANGE');\r\n\r\n\t\t\t\tif (targetList.value === null) { return throwNullException('targetList.value'); }\r\n\t\t\t\tlet result = targetList.value.ListWithSubRange(min.valueObject, max.valueObject);\r\n\r\n\t\t\t\tthis.state.PushEvaluationStack (new ListValue(result));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.ListRandom: {\r\n\t\t\t\tlet listVal = this.state.PopEvaluationStack() as ListValue;\r\n\t\t\t\tif (listVal === null)\r\n\t\t\t\t\tthrow new StoryException('Expected list for LIST_RANDOM');\r\n\r\n\t\t\t\tlet list = listVal.value;\r\n\r\n\t\t\t\tlet newList: InkList | null = null;\r\n\r\n\t\t\t\tif (list === null) { throw throwNullException('list'); }\r\n\t\t\t\tif (list.Count == 0) {\r\n\t\t\t\t\tnewList = new InkList();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Generate a random index for the element to take\r\n\t\t\t\t\tlet resultSeed = this.state.storySeed + this.state.previousRandom;\r\n\t\t\t\t\tlet random = new PRNG(resultSeed);\r\n\r\n\t\t\t\t\tlet nextRandom = random.next();\r\n\t\t\t\t\tlet listItemIndex = nextRandom % list.Count;\r\n\r\n\t\t\t\t\t// This bit is a little different from the original\r\n\t\t\t\t\t// C# code, since iterators do not work in the same way.\r\n\t\t\t\t\t// First, we iterate listItemIndex - 1 times, calling next().\r\n\t\t\t\t\t// The listItemIndex-th time is made outside of the loop,\r\n\t\t\t\t\t// in order to retrieve the value.\r\n\t\t\t\t\tlet listEnumerator = list.entries();\r\n\t\t\t\t\tfor (let i = 0; i <= listItemIndex - 1; i++) {\r\n\t\t\t\t\t\tlistEnumerator.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet value = listEnumerator.next().value;\r\n\t\t\t\t\tlet randomItem: KeyValuePair<InkListItem, number> = {\r\n\t\t\t\t\t\tKey: InkListItem.fromSerializedKey(value[0]),\r\n\t\t\t\t\t\tValue: value[1],\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Origin list is simply the origin of the one element\r\n\t\t\t\t\tif (randomItem.Key.originName === null) { return throwNullException('randomItem.Key.originName'); }\r\n\t\t\t\t\tnewList = new InkList(randomItem.Key.originName, this);\r\n\t\t\t\t\tnewList.Add(randomItem.Key, randomItem.Value);\r\n\r\n\t\t\t\t\tthis.state.previousRandom = nextRandom;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state.PushEvaluationStack(new ListValue(newList));\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis.Error('unhandled ControlCommand: ' + evalCommand);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Variable assignment\r\n\t\telse if( contentObj instanceof VariableAssignment ) {\r\n\t\t\tlet varAss = contentObj;\r\n\t\t\tlet assignedVal = this.state.PopEvaluationStack();\r\n\r\n\t\t\tthis.state.variablesState.Assign(varAss, assignedVal);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Variable reference\r\n\t\telse if( contentObj instanceof VariableReference ) {\r\n\t\t\tlet varRef = contentObj;\r\n\t\t\tlet foundValue = null;\r\n\r\n\t\t\t// Explicit read count value\r\n\t\t\tif (varRef.pathForCount != null) {\r\n\r\n\t\t\t\tlet container = varRef.containerForCount;\r\n\t\t\t\tlet count = this.VisitCountForContainer(container);\r\n\t\t\t\tfoundValue = new IntValue(count);\r\n\t\t\t}\r\n\r\n\t\t\t// Normal variable reference\r\n\t\t\telse {\r\n\r\n\t\t\t\tfoundValue = this.state.variablesState.GetVariableWithName(varRef.name);\r\n\r\n\t\t\t\tif (foundValue == null) {\r\n\t\t\t\t\tlet defaultVal = this.state.variablesState.TryGetDefaultVariableValue (varRef.name);\r\n\t\t\t\t\tif (defaultVal != null) {\r\n\t\t\t\t\t\tthis.Warning(\"Variable not found in save state: '\" + varRef.name + \"', but seems to have been newly created. Assigning value from latest ink's declaration: \" + defaultVal);\r\n\t\t\t\t\t\tfoundValue = defaultVal;\r\n\r\n\t\t\t\t\t\t// Save for future usage, preventing future errors\r\n\t\t\t\t\t\t// Only do this for variables that are known to be globals, not those that may be missing temps.\r\n\t\t\t\t\t\tthis.state.variablesState.SetGlobal(varRef.name, foundValue);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.Warning (\"Variable not found: '\" + varRef.name + \"'. Using default value of 0 (false). This can happen with temporary variables if the declaration hasn't yet been hit.\");\r\n\t\t\t\t\t\tfoundValue = new IntValue(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state.PushEvaluationStack(foundValue);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Native function call\r\n\t\telse if (contentObj instanceof NativeFunctionCall) {\r\n\t\t\tlet func = contentObj;\r\n\t\t\tlet funcParams = this.state.PopEvaluationStack(func.numberOfParameters);\r\n\t\t\tlet result = func.Call(funcParams);\r\n\t\t\tthis.state.PushEvaluationStack(result);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// No control content, must be ordinary content\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic ChoosePathString(path: string, resetCallstack = true, args: any[] = []){\r\n\t\tthis.IfAsyncWeCant ('call ChoosePathString right now');\r\n\r\n\t\tif (resetCallstack) {\r\n\t\t\tthis.ResetCallstack();\r\n\t\t} else {\r\n\t\t\tif (this.state.callStack.currentElement.type == PushPopType.Function) {\r\n\t\t\t\tlet funcDetail = '';\r\n\t\t\t\tlet container = this.state.callStack.currentElement.currentPointer.container;\r\n\t\t\t\tif (container != null) {\r\n\t\t\t\t\tfuncDetail = '('+container.path.toString ()+') ';\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('Story was running a function '+funcDetail+'when you called ChoosePathString('+path+') - this is almost certainly not not what you want! Full stack trace: \\n'+this.state.callStack.callStackTrace);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.state.PassArgumentsToEvaluationStack(args);\r\n\t\tthis.ChoosePath(new Path(path));\r\n\t}\r\n\r\n\tpublic IfAsyncWeCant(activityStr: string)\r\n\t{\r\n\t\tif (this._asyncContinueActive)\r\n\t\t\tthrow new Error(\"Can't \" + activityStr + '. Story is in the middle of a ContinueAsync(). Make more ContinueAsync() calls or a single Continue() call beforehand.');\r\n\t}\r\n\r\n\tpublic ChoosePath(p: Path, incrementingTurnIndex: boolean = true){\r\n\t\tthis.state.SetChosenPath(p, incrementingTurnIndex);\r\n\r\n\t\t// Take a note of newly visited containers for read counts etc\r\n\t\tthis.VisitChangedContainersDueToDivert();\r\n\t}\r\n\r\n\tpublic ChooseChoiceIndex(choiceIdx: number){\r\n\t\tchoiceIdx = choiceIdx;\r\n\t\tlet choices = this.currentChoices;\r\n\t\tthis.Assert(choiceIdx >= 0 && choiceIdx < choices.length, 'choice out of range');\r\n\r\n\t\tlet choiceToChoose = choices[choiceIdx];\r\n\t\tif (choiceToChoose.threadAtGeneration === null) { return throwNullException('choiceToChoose.threadAtGeneration'); }\r\n\t\tif (choiceToChoose.targetPath === null) { return throwNullException('choiceToChoose.targetPath'); }\r\n\r\n\t\tthis.state.callStack.currentThread = choiceToChoose.threadAtGeneration;\r\n\r\n\t\tthis.ChoosePath(choiceToChoose.targetPath);\r\n\t}\r\n\r\n\tpublic HasFunction(functionName: string){\r\n\t\ttry {\r\n\t\t\treturn this.KnotContainerWithName(functionName) != null;\r\n\t\t} catch(e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic EvaluateFunction(functionName: string, args: any[] = [], returnTextOutput: boolean = false): Story.EvaluateFunctionTextOutput | any{\r\n\t\t// EvaluateFunction behaves slightly differently than the C# version.\r\n\t\t// In C#, you can pass a (second) parameter `out textOutput` to get the\r\n\t\t// text outputted by the function. This is not possible in js. Instead,\r\n\t\t// we maintain the regular signature (functionName, args), plus an\r\n\t\t// optional third parameter returnTextOutput. If set to true, we will\r\n\t\t// return both the textOutput and the returned value, as an object.\r\n\r\n\t\tthis.IfAsyncWeCant('evaluate a function');\r\n\r\n\t\tif (functionName == null) {\r\n\t\t\tthrow new Error('Function is null');\r\n\t\t}\r\n\t\telse if (functionName == '' || functionName.trim() == '') {\r\n\t\t\tthrow new Error('Function is empty or white space.');\r\n\t\t}\r\n\r\n\t\tlet funcContainer = this.KnotContainerWithName(functionName);\r\n\t\tif (funcContainer == null) {\r\n\t\t\tthrow new Error(\"Function doesn't exist: '\" + functionName + \"'\");\r\n\t\t}\r\n\r\n\t\tlet outputStreamBefore: InkObject[] = [];\r\n\t\toutputStreamBefore.push.apply(outputStreamBefore, this.state.outputStream);\r\n\t\tthis._state.ResetOutput();\r\n\r\n\t\tthis.state.StartFunctionEvaluationFromGame(funcContainer, args);\r\n\r\n\t\t// Evaluate the function, and collect the string output\r\n\t\tlet stringOutput = new StringBuilder();\r\n\t\twhile (this.canContinue) {\r\n\t\t\tstringOutput.Append(this.Continue());\r\n\t\t}\r\n\t\tlet textOutput = stringOutput.toString();\r\n\r\n\t\tthis._state.ResetOutput(outputStreamBefore);\r\n\r\n\t\tlet result = this.state.CompleteFunctionEvaluationFromGame();\r\n\r\n\t\treturn (returnTextOutput) ? {returned: result, output: textOutput} : result;\r\n\t}\r\n\r\n\tpublic EvaluateExpression(exprContainer: Container){\r\n\t\tlet startCallStackHeight = this.state.callStack.elements.length;\r\n\r\n\t\tthis.state.callStack.Push(PushPopType.Tunnel);\r\n\r\n\t\tthis._temporaryEvaluationContainer = exprContainer;\r\n\r\n\t\tthis.state.GoToStart();\r\n\r\n\t\tlet evalStackHeight = this.state.evaluationStack.length;\r\n\r\n\t\tthis.Continue();\r\n\r\n\t\tthis._temporaryEvaluationContainer = null;\r\n\r\n\t\t// Should have fallen off the end of the Container, which should\r\n\t\t// have auto-popped, but just in case we didn't for some reason,\r\n\t\t// manually pop to restore the state (including currentPath).\r\n\t\tif (this.state.callStack.elements.length > startCallStackHeight) {\r\n\t\t\tthis.state.PopCallStack();\r\n\t\t}\r\n\r\n\t\tlet endStackHeight = this.state.evaluationStack.length;\r\n\t\tif (endStackHeight > evalStackHeight) {\r\n\t\t\treturn this.state.PopEvaluationStack();\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic allowExternalFunctionFallbacks: boolean = false;\r\n\r\n\tpublic CallExternalFunction(funcName: string | null, numberOfArguments: number){\r\n\t\tif (funcName === null) { return throwNullException('funcName'); }\r\n\t\tlet func = this._externals.get(funcName);\r\n\t\tlet fallbackFunctionContainer = null;\r\n\r\n\t\tlet foundExternal = typeof func !== 'undefined';\r\n\r\n\t\t// Try to use fallback function?\r\n\t\tif (!foundExternal) {\r\n\t\t\tif (this.allowExternalFunctionFallbacks) {\r\n\t\t\t\tfallbackFunctionContainer = this.KnotContainerWithName(funcName);\r\n\t\t\t\tthis.Assert(fallbackFunctionContainer !== null, \"Trying to call EXTERNAL function '\" + funcName + \"' which has not been bound, and fallback ink function could not be found.\");\r\n\r\n\t\t\t\t// Divert direct into fallback function and we're done\r\n\t\t\t\tthis.state.callStack.Push(\r\n\t\t\t\t\tPushPopType.Function,\r\n\t\t\t\t\tundefined,\r\n\t\t\t\t\tthis.state.outputStream.length,\r\n\t\t\t\t);\r\n\t\t\t\tthis.state.divertedPointer = Pointer.StartOf(fallbackFunctionContainer);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis.Assert(false, \"Trying to call EXTERNAL function '\" + funcName + \"' which has not been bound (and ink fallbacks disabled).\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Pop arguments\r\n\t\tlet args: any[] = [];\r\n\t\tfor (let i = 0; i < numberOfArguments; ++i) {\r\n\t\t\t// var poppedObj = state.PopEvaluationStack () as Value;\r\n\t\t\tlet poppedObj = asOrThrows(this.state.PopEvaluationStack(), Value);\r\n\t\t\tlet valueObj = poppedObj.valueObject;\r\n\t\t\targs.push(valueObj);\r\n\t\t}\r\n\r\n\t\t// Reverse arguments from the order they were popped,\r\n\t\t// so they're the right way round again.\r\n\t\targs.reverse();\r\n\r\n\t\t// Run the function!\r\n\t\tlet funcResult = func!(args);\r\n\r\n\t\t// Convert return value (if any) to the a type that the ink engine can use\r\n\t\tlet returnObj = null;\r\n\t\tif (funcResult != null) {\r\n\t\t\treturnObj = Value.Create(funcResult);\r\n\t\t\tthis.Assert(returnObj !== null, 'Could not create ink value from returned object of type ' + (typeof funcResult));\r\n\t\t} else {\r\n\t\t\treturnObj = new Void();\r\n\t\t}\r\n\r\n\t\tthis.state.PushEvaluationStack(returnObj);\r\n\t}\r\n\r\n\tpublic BindExternalFunctionGeneral(funcName: string, func: Story.ExternalFunction){\r\n\t\tthis.IfAsyncWeCant('bind an external function');\r\n\t\tthis.Assert(!this._externals.has(funcName), \"Function '\" + funcName + \"' has already been bound.\");\r\n\t\tthis._externals.set(funcName, func);\r\n\t}\r\n\r\n\tpublic TryCoerce(value: any){\r\n\t\t// We're skipping type coercition in this implementation. First of, js\r\n\t\t// is loosely typed, so it's not that important. Secondly, there is no\r\n\t\t// clean way (AFAIK) for the user to describe what type of parameters\r\n\t\t// they expect.\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic BindExternalFunction(funcName: string, func: Story.ExternalFunction){\r\n\t\tthis.Assert(func != null, \"Can't bind a null function\");\r\n\r\n\t\tthis.BindExternalFunctionGeneral(funcName, (args: any) => {\r\n\t\t\tthis.Assert(args.length >= func.length, 'External function expected ' + func.length + ' arguments');\r\n\r\n\t\t\tlet coercedArgs = [];\r\n\t\t\tfor (let i = 0, l = args.length; i < l; i++){\r\n\t\t\t\tcoercedArgs[i] = this.TryCoerce(args[i]);\r\n\t\t\t}\r\n\t\t\treturn func.apply(null, coercedArgs);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic UnbindExternalFunction(funcName: string){\r\n\t\tthis.IfAsyncWeCant('unbind an external a function');\r\n\t\tthis.Assert(this._externals.has(funcName), \"Function '\" + funcName + \"' has not been bound.\");\r\n\t\tthis._externals.delete(funcName);\r\n\t}\r\n\r\n\tpublic ValidateExternalBindings(): void;\r\n\tpublic ValidateExternalBindings(c: Container | null, missingExternals: Set<string>): void;\r\n\tpublic ValidateExternalBindings(o: InkObject | null, missingExternals: Set<string>): void;\r\n\tpublic ValidateExternalBindings(){\r\n\r\n\t\tlet c: Container | null = null;\r\n\t\tlet o: InkObject | null = null;\r\n\t\tlet missingExternals: Set<string> = arguments[1] || new Set();\r\n\r\n\t\tif (arguments[0] instanceof Container) {\r\n\t\t\tc = arguments[0];\r\n\t\t}\r\n\r\n\t\tif (arguments[0] instanceof InkObject) {\r\n\t\t\to = arguments[0];\r\n\t\t}\r\n\r\n\t\tif (c === null && o === null) {\r\n\t\t\tthis.ValidateExternalBindings(this._mainContentContainer, missingExternals);\r\n\t\t\tthis._hasValidatedExternals = true;\r\n\r\n\t\t\t// No problem! Validation complete\r\n\t\t\tif( missingExternals.size == 0 ) {\r\n\t\t\t\tthis._hasValidatedExternals = true;\r\n\t\t\t} else {\r\n\t\t\t\tlet message = 'Error: Missing function binding for external';\r\n\t\t\t\tmessage += (missingExternals.size > 1) ? 's' : '';\r\n\t\t\t\tmessage += \": '\";\r\n\t\t\t\tmessage += Array.from(missingExternals).join(\"', '\");\r\n\t\t\t\tmessage += \"' \";\r\n\t\t\t\tmessage += (this.allowExternalFunctionFallbacks) ? ', and no fallback ink function found.' : ' (ink fallbacks disabled)';\r\n\r\n\t\t\t\tthis.Error(message);\r\n\t\t\t}\r\n\t\t} else if (c != null) {\r\n\t\t\tfor (let innerContent of c.content) {\r\n\t\t\t\tlet container = innerContent as Container;\r\n\t\t\t\tif (container == null || !container.hasValidName)\r\n\t\t\t\t\tthis.ValidateExternalBindings (innerContent, missingExternals);\r\n\t\t\t}\r\n\t\t\tfor (let [key, value] of c.namedContent) {\r\n\t\t\t\tthis.ValidateExternalBindings (asOrNull(value, InkObject), missingExternals);\r\n\t\t\t}\r\n\t\t} else if (o != null) {\r\n\t\t\tlet divert = asOrNull(o, Divert);\r\n\t\t\tif (divert && divert.isExternal) {\r\n\t\t\t\tlet name = divert.targetPathString;\r\n\t\t\t\tif (name === null) { return throwNullException('name'); }\r\n\t\t\t\tif (!this._externals.has(name)) {\r\n\t\t\t\t\tif (this.allowExternalFunctionFallbacks) {\r\n\t\t\t\t\t\tlet fallbackFound = this.mainContentContainer.namedContent.has(name);\r\n\t\t\t\t\t\tif (!fallbackFound) {\r\n\t\t\t\t\t\t\tmissingExternals.add(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmissingExternals.add(name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ObserveVariable(variableName: string, observer: Story.VariableObserver){\r\n\t\tthis.IfAsyncWeCant('observe a new variable');\r\n\r\n\t\tif (this._variableObservers === null)\r\n\t\t\tthis._variableObservers = new Map();\r\n\r\n\t\tif(!this.state.variablesState.GlobalVariableExistsWithName(variableName))\r\n\t\t\tthrow new StoryException(\"Cannot observe variable '\"+variableName+\"' because it wasn't declared in the ink story.\");\r\n\r\n\t\tif (this._variableObservers.has(variableName)) {\r\n\t\t\tthis._variableObservers.get(variableName)!.push(observer);\r\n\t\t} else {\r\n\t\t\tthis._variableObservers.set(variableName, [observer]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ObserveVariables(variableNames: string[], observers: Story.VariableObserver[]){\r\n\t\tfor (let i = 0, l = variableNames.length; i < l; i++){\r\n\t\t\tthis.ObserveVariable(variableNames[i], observers[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic RemoveVariableObserver(observer: Story.VariableObserver, specificVariableName: string){\r\n\t\tthis.IfAsyncWeCant('remove a variable observer');\r\n\r\n\t\tif (this._variableObservers === null)\r\n\t\t\treturn;\r\n\r\n\t\tif (typeof specificVariableName !== 'undefined') {\r\n\t\t\tif (this._variableObservers.has(specificVariableName)) {\r\n\t\t\t\tlet observers = this._variableObservers.get(specificVariableName)!;\r\n\t\t\t\tobservers.splice(observers.indexOf(observer), 1);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet keys = this._variableObservers.keys();\r\n\r\n\t\t\tfor (let varName of keys){\r\n\t\t\t\tlet observers = this._variableObservers.get(varName)!;\r\n\t\t\t\tobservers.splice(observers.indexOf(observer), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic VariableStateDidChangeEvent(variableName: string, newValueObj: InkObject){\r\n\t\tif (this._variableObservers === null)\r\n\t\t\treturn;\r\n\r\n\t\tlet observers = this._variableObservers.get(variableName);\r\n\t\tif (typeof observers !== 'undefined') {\r\n\t\t\tif (!(newValueObj instanceof Value)) {\r\n\t\t\t\tthrow new Error(\"Tried to get the value of a variable that isn't a standard type\");\r\n\t\t\t}\r\n\t\t\t// var val = newValueObj as Value;\r\n\t\t\tlet val = asOrThrows(newValueObj, Value);\r\n\r\n\t\t\tfor (let observer of observers) {\r\n\t\t\t\tobserver(variableName, val.valueObject);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget globalTags(){\r\n\t\treturn this.TagsAtStartOfFlowContainerWithPathString('');\r\n\t}\r\n\r\n\tpublic TagsForContentAtPath(path: string){\r\n\t\treturn this.TagsAtStartOfFlowContainerWithPathString(path);\r\n\t}\r\n\r\n\tpublic TagsAtStartOfFlowContainerWithPathString(pathString: string){\r\n\t\tlet path = new Path(pathString);\r\n\r\n\t\tlet flowContainer = this.ContentAtPath(path).container;\r\n\t\tif (flowContainer === null) { return throwNullException('flowContainer'); }\r\n\t\twhile(true) {\r\n\t\t\tlet firstContent: InkObject = flowContainer.content[0];\r\n\t\t\tif (firstContent instanceof Container)\r\n\t\t\t\tflowContainer = firstContent;\r\n\t\t\telse break;\r\n\t\t}\r\n\r\n\t\tlet tags: string[] | null = null;\r\n\r\n\t\tfor(let c of flowContainer.content) {\r\n\t\t\t// var tag = c as Runtime.Tag;\r\n\t\t\tlet tag = asOrNull(c, Tag);\r\n\t\t\tif (tag) {\r\n\t\t\t\tif (tags == null) tags = [];\r\n\t\t\t\ttags.push(tag.text);\r\n\t\t\t} else break;\r\n\t\t}\r\n\r\n\t\treturn tags;\r\n\t}\r\n\r\n\tpublic BuildStringOfHierarchy(){\r\n\t\tlet sb = new StringBuilder();\r\n\r\n\t\tthis.mainContentContainer.BuildStringOfHierarchy(sb, 0, this.state.currentPointer.Resolve());\r\n\r\n\t\treturn sb.toString();\r\n\t}\r\n\r\n\tpublic BuildStringOfContainer(container: Container){\r\n\t\tlet sb = new StringBuilder();\r\n\t\tcontainer.BuildStringOfHierarchy(sb, 0, this.state.currentPointer.Resolve());\r\n\t\treturn sb.toString();\r\n\t}\r\n\r\n\tpublic NextContent(){\r\n\t\tthis.state.previousPointer = this.state.currentPointer.copy();\r\n\r\n\t\tif (!this.state.divertedPointer.isNull) {\r\n\r\n\t\t\tthis.state.currentPointer = this.state.divertedPointer.copy();\r\n\t\t\tthis.state.divertedPointer = Pointer.Null;\r\n\r\n\t\t\tthis.VisitChangedContainersDueToDivert();\r\n\r\n\t\t\tif (!this.state.currentPointer.isNull) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet successfulPointerIncrement = this.IncrementContentPointer();\r\n\r\n\t\tif (!successfulPointerIncrement) {\r\n\r\n\t\t\tlet didPop = false;\r\n\r\n\t\t\tif (this.state.callStack.CanPop(PushPopType.Function)) {\r\n\r\n\t\t\t\tthis.state.PopCallStack(PushPopType.Function);\r\n\r\n\t\t\t\tif (this.state.inExpressionEvaluation) {\r\n\t\t\t\t\tthis.state.PushEvaluationStack(new Void());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdidPop = true;\r\n\t\t\t} else if (this.state.callStack.canPopThread) {\r\n\t\t\t\tthis.state.callStack.PopThread();\r\n\r\n\t\t\t\tdidPop = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.state.TryExitFunctionEvaluationFromGame();\r\n\t\t\t}\r\n\r\n\t\t\tif (didPop && !this.state.currentPointer.isNull) {\r\n\t\t\t\tthis.NextContent();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic IncrementContentPointer(){\r\n\t\tlet successfulIncrement = true;\r\n\r\n\t\tlet pointer = this.state.callStack.currentElement.currentPointer.copy();\r\n\t\tpointer.index++;\r\n\r\n\t\tif (pointer.container === null) { return throwNullException('pointer.container'); }\r\n\t\twhile (pointer.index >= pointer.container.content.length) {\r\n\r\n\t\t\tsuccessfulIncrement = false;\r\n\r\n\t\t\t// Container nextAncestor = pointer.container.parent as Container;\r\n\t\t\tlet nextAncestor = asOrNull(pointer.container.parent, Container);\r\n\t\t\tif (nextAncestor instanceof Container === false) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet indexInAncestor = nextAncestor!.content.indexOf(pointer.container);\r\n\t\t\tif (indexInAncestor == -1) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tpointer = new Pointer(nextAncestor, indexInAncestor);\r\n\r\n\t\t\tpointer.index++;\r\n\r\n\t\t\tsuccessfulIncrement = true;\r\n\t\t\tif (pointer.container === null) { return throwNullException('pointer.container'); }\r\n\t\t}\r\n\r\n\t\tif (!successfulIncrement) pointer = Pointer.Null;\r\n\r\n\t\tthis.state.callStack.currentElement.currentPointer = pointer.copy();\r\n\r\n\t\treturn successfulIncrement;\r\n\t}\r\n\r\n\tpublic TryFollowDefaultInvisibleChoice(){\r\n\t\tlet allChoices = this._state.currentChoices;\r\n\r\n\t\tlet invisibleChoices = allChoices.filter((c) => {\r\n\t\t\treturn c.isInvisibleDefault;\r\n\t\t});\r\n\r\n\t\tif (invisibleChoices.length == 0 || allChoices.length > invisibleChoices.length)\r\n\t\t\treturn false;\r\n\r\n\t\tlet choice = invisibleChoices[0];\r\n\r\n\t\tif (choice.targetPath === null) { return throwNullException('choice.targetPath'); }\r\n\r\n\t\tif (choice.threadAtGeneration === null) { return throwNullException('choice.threadAtGeneration'); }\r\n\r\n\t\tthis.state.callStack.currentThread = choice.threadAtGeneration;\r\n\r\n\t\tthis.ChoosePath(choice.targetPath, false);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic VisitCountForContainer(container: Container | null){\r\n\t\tif (container === null) { return throwNullException('container'); }\r\n\t\tif( !container.visitsShouldBeCounted ) {\r\n\t\t\tconsole.warn('Read count for target ('+container.name+' - on '+container.debugMetadata+') unknown. The story may need to be compiled with countAllVisits flag (-c).');\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tlet count = 0;\r\n\t\tlet containerPathStr = container.path.toString();\r\n\t\tcount = this.state.visitCounts.get(containerPathStr) || count;\r\n\t\treturn count;\r\n\t}\r\n\r\n\tpublic IncrementVisitCountForContainer(container: Container){\r\n\t\tlet count = 0;\r\n\t\tlet containerPathStr = container.path.toString();\r\n\t\tif (this.state.visitCounts.has(containerPathStr)) count = this.state.visitCounts.get(containerPathStr)!;\r\n\t\tcount++;\r\n\t\tthis.state.visitCounts.set(containerPathStr, count);\r\n\t}\r\n\r\n\tpublic RecordTurnIndexVisitToContainer(container: Container){\r\n\t\tlet containerPathStr = container.path.toString();\r\n\t\tthis.state.turnIndices.set(containerPathStr, this.state.currentTurnIndex);\r\n\t}\r\n\r\n\tpublic TurnsSinceForContainer(container: Container){\r\n\t\tif( !container.turnIndexShouldBeCounted ) {\r\n\t\t\tthis.Error('TURNS_SINCE() for target ('+container.name+' - on '+container.debugMetadata+') unknown. The story may need to be compiled with countAllVisits flag (-c).');\r\n\t\t}\r\n\r\n\t\tlet containerPathStr = container.path.toString();\r\n\t\tlet index = this.state.turnIndices.get(containerPathStr);\r\n\t\tif (typeof index !== 'undefined') {\r\n\t\t\treturn this.state.currentTurnIndex - index;\r\n\t\t} else {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic NextSequenceShuffleIndex(){\r\n\t\t// var numElementsIntVal = state.PopEvaluationStack () as IntValue;\r\n\t\tlet numElementsIntVal = asOrNull(this.state.PopEvaluationStack(), IntValue);\r\n\t\tif (!(numElementsIntVal instanceof IntValue)) {\r\n\t\t\tthis.Error('expected number of elements in sequence for shuffle index');\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tlet seqContainer = this.state.currentPointer.container;\r\n\t\tif (seqContainer === null) { return throwNullException('seqContainer'); }\r\n\r\n\t\t// Originally a primitive type, but here, can be null.\r\n\t\t// TODO: Replace by default value?\r\n\t\tif (numElementsIntVal.value === null) { return throwNullException('numElementsIntVal.value'); }\r\n\t\tlet numElements = numElementsIntVal.value;\r\n\r\n\t\t// var seqCountVal = state.PopEvaluationStack () as IntValue;\r\n\t\tlet seqCountVal = asOrThrows(this.state.PopEvaluationStack(), IntValue);\r\n\t\tlet seqCount = seqCountVal.value;\r\n\r\n\t\t// Originally a primitive type, but here, can be null.\r\n\t\t// TODO: Replace by default value?\r\n\t\tif (seqCount === null) { return throwNullException('seqCount'); }\r\n\r\n\t\tlet loopIndex = seqCount / numElements;\r\n\t\tlet iterationIndex = seqCount % numElements;\r\n\r\n\t\tlet seqPathStr = seqContainer.path.toString();\r\n\t\tlet sequenceHash = 0;\r\n\t\tfor (let i = 0, l = seqPathStr.length; i < l; i++){\r\n\t\t\tsequenceHash += seqPathStr.charCodeAt(i) || 0;\r\n\t\t}\r\n\t\tlet randomSeed = sequenceHash + loopIndex + this.state.storySeed;\r\n\t\tlet random = new PRNG(Math.floor(randomSeed));\r\n\r\n\t\tlet unpickedIndices = [];\r\n\t\tfor (let i = 0; i < numElements; ++i) {\r\n\t\t\tunpickedIndices.push(i);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i <= iterationIndex; ++i) {\r\n\t\t\tlet chosen = random.next() % unpickedIndices.length;\r\n\t\t\tlet chosenIndex = unpickedIndices[chosen];\r\n\t\t\tunpickedIndices.splice(chosen, 1);\r\n\r\n\t\t\tif (i == iterationIndex) {\r\n\t\t\t\treturn chosenIndex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthrow new Error('Should never reach here');\r\n\t}\r\n\r\n\tpublic Error(message: string, useEndLineNumber = false): never{\r\n\t\tlet e = new StoryException(message);\r\n\t\te.useEndLineNumber = useEndLineNumber;\r\n\t\tthrow e;\r\n\t}\r\n\r\n\tpublic Warning(message: string){\r\n\t\tthis.AddError(message, true);\r\n\t}\r\n\r\n\tpublic AddError(message: string, isWarning = false, useEndLineNumber = false){\r\n\t\tlet dm = this.currentDebugMetadata;\r\n\r\n\t\tlet errorTypeStr = isWarning ? 'WARNING' : 'ERROR';\r\n\r\n\t\tif (dm != null) {\r\n\t\t\tlet lineNum = useEndLineNumber ? dm.endLineNumber : dm.startLineNumber;\r\n\t\t\tmessage = 'RUNTIME ' + errorTypeStr + \": '\" + dm.fileName + \"' line \" + lineNum + ': ' + message;\r\n\t\t}\r\n\t\telse if(!this.state.currentPointer.isNull) {\r\n\t\t\tmessage = 'RUNTIME ' + errorTypeStr + ': (' + this.state.currentPointer + '): ' + message;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmessage = 'RUNTIME ' + errorTypeStr + ': ' + message;\r\n\t\t}\r\n\r\n\t\tthis.state.AddError(message, isWarning);\r\n\r\n\t\t// In a broken state don't need to know about any other errors.\r\n\t\tif (!isWarning)\r\n\t\t\tthis.state.ForceEnd();\r\n\t}\r\n\r\n\tpublic Assert(condition: boolean, message: string | null = null) {\r\n\t\tif (condition == false) {\r\n\t\t\tif (message == null) {\r\n\t\t\t\tmessage = 'Story assert';\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(message + ' ' + this.currentDebugMetadata);\r\n\t\t}\r\n\t}\r\n\r\n\tget currentDebugMetadata(): DebugMetadata | null {\r\n\t\tlet dm: DebugMetadata | null;\r\n\r\n\t\tlet pointer = this.state.currentPointer;\r\n\t\tif (!pointer.isNull && pointer.Resolve() !== null) {\r\n\t\t\tdm = pointer.Resolve()!.debugMetadata;\r\n\t\t\tif (dm !== null) {\r\n\t\t\t\treturn dm;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = this.state.callStack.elements.length - 1; i >= 0; --i) {\r\n\t\t\tpointer = this.state.callStack.elements [i].currentPointer;\r\n\t\t\tif (!pointer.isNull && pointer.Resolve() !== null) {\r\n\t\t\t\tdm = pointer.Resolve()!.debugMetadata;\r\n\t\t\t\tif (dm !== null) {\r\n\t\t\t\t\treturn dm;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = this.state.outputStream.length - 1; i >= 0; --i) {\r\n\t\t\tlet outputObj = this.state.outputStream [i];\r\n\t\t\tdm = outputObj.debugMetadata;\r\n\t\t\tif (dm !== null) {\r\n\t\t\t\treturn dm;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tget mainContentContainer(){\r\n\t\tif (this._temporaryEvaluationContainer) {\r\n\t\t\treturn this._temporaryEvaluationContainer;\r\n\t\t} else {\r\n\t\t\treturn this._mainContentContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * `_mainContentContainer` is almost guaranteed to be set in the\r\n\t * constructor, unless the json is malformed.\r\n\t */\r\n\tprivate _mainContentContainer!: Container;\r\n\tprivate _listDefinitions: ListDefinitionsOrigin | null = null;\r\n\r\n\tprivate _externals: Map<string, Story.ExternalFunction>;\r\n\tprivate _variableObservers: Map<string, Story.VariableObserver[]> | null = null;\r\n\tprivate _hasValidatedExternals: boolean = false;\r\n\r\n\tprivate _temporaryEvaluationContainer: Container | null = null;\r\n\r\n\t/**\r\n\t * `state` is almost guaranteed to be set in the constructor, unless\r\n\t * using the compiler-specific constructor which will likely not be used in\r\n\t * the real world.\r\n\t */\r\n\tprivate _state!: StoryState;\r\n\r\n\tprivate _asyncContinueActive: boolean = false;\r\n\tprivate _stateAtLastNewline: StoryState | null = null;\r\n\r\n\tprivate _recursiveContinueCount: number = 0;\r\n\r\n\tprivate _profiler: any | null = null; // TODO: Profiler\r\n}\r\n\r\nexport namespace Story{\r\n\texport enum OutputStateChange {\r\n\t\tNoChange = 0,\r\n\t\tExtendedBeyondNewline = 1,\r\n\t\tNewlineRemoved = 2,\r\n\t}\r\n\r\n\texport interface EvaluateFunctionTextOutput {\r\n\t\treturned: any;\r\n\t\toutput: string;\r\n\t}\r\n\r\n\texport type VariableObserver = (variableName: string, newValue: any) => void;\r\n\texport type ExternalFunction = (...args: any) => any;\r\n}\r\n","import {PushPopType} from './PushPop';\r\nimport {Path} from './Path';\r\nimport {Story} from './Story';\r\nimport {StoryException} from './StoryException';\r\nimport {JsonSerialisation} from './JsonSerialisation';\r\nimport {ListValue} from './Value';\r\nimport {StringBuilder} from './StringBuilder';\r\nimport {Pointer} from './Pointer';\r\nimport {InkObject} from './Object';\r\nimport {Container} from './Container';\r\nimport {Debug} from './Debug';\r\nimport {tryGetValueFromMap} from './TryGetResult';\r\nimport {throwNullException} from './NullException';\r\n\r\nexport class CallStack{\r\n\tget elements(){\r\n\t\treturn this.callStack;\r\n\t}\r\n\r\n\tget depth(){\r\n\t\treturn this.elements.length;\r\n\t}\r\n\r\n\tget currentElement(){\r\n\t\tlet thread = this._threads[this._threads.length - 1];\r\n\t\tlet cs = thread.callstack;\r\n\t\treturn cs[cs.length - 1];\r\n\t}\r\n\r\n\tget currentElementIndex(){\r\n\t\treturn this.callStack.length - 1;\r\n\t}\r\n\r\n\tget currentThread(): CallStack.Thread {\r\n\t\treturn this._threads[this._threads.length - 1];\r\n\t}\r\n\tset currentThread(value: CallStack.Thread){\r\n\t\tDebug.Assert(this._threads.length == 1, \"Shouldn't be directly setting the current thread when we have a stack of them\");\r\n\r\n\t\tthis._threads.length = 0;\r\n\t\tthis._threads.push(value);\r\n\t}\r\n\r\n\tget canPop(){\r\n\t\treturn this.callStack.length > 1;\r\n\t}\r\n\r\n\tconstructor(storyContext: Story)\r\n\tconstructor(toCopy: CallStack)\r\n\tconstructor(){\r\n\t\tif (arguments[0] instanceof Story) {\r\n\t\t\tlet storyContext = arguments[0] as Story;\r\n\r\n\t\t\tthis._startOfRoot = Pointer.StartOf(storyContext.rootContentContainer);\r\n\t\t\tthis.Reset();\r\n\t\t} else {\r\n\t\t\tlet toCopy = arguments[0] as CallStack;\r\n\r\n\t\t\tthis._threads = [];\r\n\t\t\tfor (let otherThread of toCopy._threads) {\r\n\t\t\t\tthis._threads.push(otherThread.Copy());\r\n\t\t\t}\r\n\t\t\tthis._startOfRoot = toCopy._startOfRoot;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic Reset() {\r\n\t\tthis._threads = [];\r\n\t\tthis._threads.push(new CallStack.Thread());\r\n\r\n\t\tthis._threads[0].callstack.push(new CallStack.Element(PushPopType.Tunnel, this._startOfRoot));\r\n\t}\r\n\r\n\tpublic SetJsonToken(jObject: any, storyContext: Story){\r\n\t\tthis._threads.length = 0;\r\n\r\n\t\t// TODO: (List<object>) jObject [\"threads\"];\r\n\t\tlet jThreads: any[] = jObject['threads'];\r\n\r\n\t\tfor (let jThreadTok of jThreads) {\r\n\t\t\t// TODO: var jThreadObj = (Dictionary<string, object>)jThreadTok;\r\n\t\t\tlet jThreadObj = jThreadTok;\r\n\t\t\tlet thread = new CallStack.Thread(jThreadObj, storyContext);\r\n\t\t\tthis._threads.push(thread);\r\n\t\t}\r\n\r\n\t\t// TODO: (int)jObject [\"threadCounter\"];\r\n\t\tthis._threadCounter = parseInt(jObject['threadCounter']);\r\n\t\tthis._startOfRoot = Pointer.StartOf(storyContext.rootContentContainer);\r\n\t}\r\n\tpublic GetJsonToken(){\r\n\t\tlet jObject: any = {};\r\n\r\n\t\tlet jThreads: any[] = [];\r\n\r\n\t\tfor (let thread of this._threads) {\r\n\t\t\tjThreads.push(thread.jsonToken);\r\n\t\t}\r\n\r\n\t\tjObject['threads'] = jThreads;\r\n\t\tjObject['threadCounter'] = this._threadCounter;\r\n\r\n\t\treturn jObject;\r\n\t}\r\n\r\n\tpublic PushThread(){\r\n\t\tlet newThread = this.currentThread.Copy();\r\n\t\tthis._threadCounter++;\r\n\t\tnewThread.threadIndex = this._threadCounter;\r\n\t\tthis._threads.push(newThread);\r\n\t}\r\n\r\n\tpublic ForkThread(){\r\n\t\tlet forkedThread = this.currentThread.Copy();\r\n\t\tthis._threadCounter++;\r\n\t\tforkedThread.threadIndex = this._threadCounter;\r\n\t\treturn forkedThread;\r\n\t}\r\n\r\n\tpublic PopThread(){\r\n\t\tif (this.canPopThread) {\r\n\t\t\tthis._threads.splice(this._threads.indexOf(this.currentThread), 1);// should be equivalent to a pop()\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Can't pop thread\");\r\n\t\t}\r\n\t}\r\n\r\n\tget canPopThread(){\r\n\t\treturn this._threads.length > 1 && !this.elementIsEvaluateFromGame;\r\n\t}\r\n\r\n\tget elementIsEvaluateFromGame(){\r\n\t\treturn this.currentElement.type == PushPopType.FunctionEvaluationFromGame;\r\n\t}\r\n\r\n\tpublic Push(type: PushPopType, externalEvaluationStackHeight: number = 0, outputStreamLengthWithPushed: number = 0){\r\n\t\tlet element = new CallStack.Element(\r\n\t\t\ttype,\r\n\t\t\tthis.currentElement.currentPointer,\r\n\t\t\tfalse,\r\n\t\t);\r\n\r\n\t\telement.evaluationStackHeightWhenPushed = externalEvaluationStackHeight;\r\n\t\telement.functionStartInOutputStream = outputStreamLengthWithPushed;\r\n\r\n\t\tthis.callStack.push (element);\r\n\t}\r\n\r\n\tpublic CanPop(type: PushPopType | null = null){\r\n\t\tif (!this.canPop)\r\n\t\t\treturn false;\r\n\r\n\t\tif (type == null)\r\n\t\t\treturn true;\r\n\r\n\t\treturn this.currentElement.type == type;\r\n\t}\r\n\r\n\tpublic Pop(type: PushPopType | null = null){\r\n\t\tif (this.CanPop(type)) {\r\n\t\t\tthis.callStack.pop();\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tthrow new Error('Mismatched push/pop in Callstack');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic GetTemporaryVariableWithName(name: string | null, contextIndex: number = -1){\r\n\r\n\t\tif (contextIndex == -1)\r\n\t\t\tcontextIndex = this.currentElementIndex + 1;\r\n\r\n\t\tlet contextElement = this.callStack[contextIndex - 1];\r\n\r\n\t\tlet varValue = tryGetValueFromMap(contextElement.temporaryVariables, name, null);\r\n\t\tif (varValue.exists) {\r\n\t\t\treturn varValue.result;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic SetTemporaryVariable(name: string, value: any, declareNew: boolean, contextIndex: number = -1){\r\n\r\n\t\tif (contextIndex == -1)\r\n\t\t\tcontextIndex = this.currentElementIndex + 1;\r\n\r\n\t\tlet contextElement = this.callStack[contextIndex - 1];\r\n\r\n\t\tif (!declareNew && !contextElement.temporaryVariables.get(name)) {\r\n\t\t\tthrow new StoryException('Could not find temporary variable to set: ' + name);\r\n\t\t}\r\n\r\n\t\tlet oldValue = tryGetValueFromMap(contextElement.temporaryVariables, name, null);\r\n\t\tif (oldValue.exists)\r\n\t\t\tListValue.RetainListOriginsForAssignment(oldValue.result, value);\r\n\r\n\t\tcontextElement.temporaryVariables.set(name, value);\r\n\t}\r\n\r\n\tpublic ContextForVariableNamed(name: string){\r\n\r\n\t\tif (this.currentElement.temporaryVariables.get(name)) {\r\n\t\t\treturn this.currentElementIndex + 1;\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ThreadWithIndex(index: number){\r\n\t\tlet filtered = this._threads.filter((t) => {\r\n\t\t\tif (t.threadIndex == index) return t;\r\n\t\t});\r\n\r\n\t\treturn filtered[0];\r\n\t}\r\n\r\n\tget callStack(){\r\n\t\treturn this.currentThread.callstack;\r\n\t}\r\n\r\n\tget callStackTrace(){\r\n\t\tlet sb = new StringBuilder();\r\n\r\n\t\tfor (let t = 0; t < this._threads.length; t++) {\r\n\t\t\tlet thread = this._threads[t];\r\n\t\t\tlet isCurrent = (t == this._threads.length - 1);\r\n\t\t\tsb.AppendFormat('=== THREAD {0}/{1} {2}===\\n', (t+1), this._threads.length, (isCurrent ? '(current) ' : ''));\r\n\r\n\t\t\tfor (let i = 0; i < thread.callstack.length; i++) {\r\n\r\n\t\t\t\tif (thread.callstack[i].type == PushPopType.Function)\r\n\t\t\t\t\tsb.Append('  [FUNCTION] ');\r\n\t\t\t\telse\r\n\t\t\t\t\tsb.Append('  [TUNNEL] ');\r\n\r\n\t\t\t\tlet pointer = thread.callstack[i].currentPointer;\r\n\t\t\t\tif(!pointer.isNull) {\r\n\t\t\t\t\tsb.Append('<SOMEWHERE IN ');\r\n\t\t\t\t\tif (pointer.container === null) { return throwNullException('pointer.container'); }\r\n\t\t\t\t\tsb.Append(pointer.container.path.toString());\r\n\t\t\t\t\tsb.AppendLine('>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn sb.toString();\r\n\t}\r\n\r\n\tpublic _threads!: CallStack.Thread[]; // Banged because it's initialized in Reset().\r\n\tpublic _threadCounter: number = 0;\r\n\tpublic _startOfRoot: Pointer = Pointer.Null;\r\n}\r\n\r\nexport namespace CallStack {\r\n\texport class Element{\r\n\t\tpublic currentPointer: Pointer;\r\n\t\tpublic inExpressionEvaluation: boolean;\r\n\t\tpublic temporaryVariables: Map<string, InkObject>;\r\n\t\tpublic type: PushPopType;\r\n\r\n\t\tpublic evaluationStackHeightWhenPushed: number = 0;\r\n\t\tpublic functionStartInOutputStream: number = 0;\r\n\r\n\t\tconstructor(type: PushPopType, pointer: Pointer, inExpressionEvaluation: boolean = false){\r\n\t\t\tthis.currentPointer = pointer.copy();\r\n\t\t\tthis.inExpressionEvaluation = inExpressionEvaluation;\r\n\t\t\tthis.temporaryVariables = new Map();\r\n\t\t\tthis.type = type;\r\n\t\t}\r\n\r\n\t\tpublic Copy(){\r\n\t\t\tlet copy = new Element(this.type, this.currentPointer, this.inExpressionEvaluation);\r\n\t\t\tcopy.temporaryVariables = new Map(this.temporaryVariables);\r\n\t\t\tcopy.evaluationStackHeightWhenPushed = this.evaluationStackHeightWhenPushed;\r\n\t\t\tcopy.functionStartInOutputStream = this.functionStartInOutputStream;\r\n\t\t\treturn copy;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Thread{\r\n\t\tpublic callstack: Element[];\r\n\t\tpublic threadIndex: number = 0;\r\n\t\tpublic previousPointer: Pointer = Pointer.Null;\r\n\r\n\t\tconstructor();\r\n\t\tconstructor(jThreadObj: any, storyContext: Story);\r\n\t\tconstructor(){\r\n\t\t\tthis.callstack = [];\r\n\r\n\t\t\tif (arguments[0] && arguments[1]){\r\n\t\t\t\tlet jThreadObj = arguments[0];\r\n\t\t\t\tlet storyContext = arguments[1];\r\n\r\n\t\t\t\t// TODO: (int) jThreadObj['threadIndex'] can raise;\r\n\t\t\t\tthis.threadIndex = parseInt(jThreadObj['threadIndex']);\r\n\r\n\t\t\t\tlet jThreadCallstack = jThreadObj['callstack'];\r\n\r\n\t\t\t\tfor (let jElTok of jThreadCallstack) {\r\n\t\t\t\t\tlet jElementObj = jElTok;\r\n\r\n\t\t\t\t\t// TODO: (int) jElementObj['type'] can raise;\r\n\t\t\t\t\tlet pushPopType: PushPopType = parseInt(jElementObj['type']);\r\n\r\n\t\t\t\t\tlet pointer = Pointer.Null;\r\n\r\n\t\t\t\t\tlet currentContainerPathStr: string;\r\n\t\t\t\t\t// TODO: jElementObj.TryGetValue (\"cPath\", out currentContainerPathStrToken);\r\n\t\t\t\t\tlet currentContainerPathStrToken = jElementObj['cPath'];\r\n\t\t\t\t\tif (typeof currentContainerPathStrToken !== 'undefined') {\r\n\t\t\t\t\t\tcurrentContainerPathStr = currentContainerPathStrToken.toString();\r\n\r\n\t\t\t\t\t\tlet threadPointerResult = storyContext.ContentAtPath(new Path(currentContainerPathStr));\r\n\t\t\t\t\t\tpointer.container = threadPointerResult.container;\r\n\t\t\t\t\t\tpointer.index = parseInt(jElementObj['idx']);\r\n\r\n\t\t\t\t\t\tif (threadPointerResult.obj == null)\r\n\t\t\t\t\t\t\tthrow new Error('When loading state, internal story location couldn\\'t be found: ' + currentContainerPathStr + '. Has the story changed since this save data was created?');\r\n\t\t\t\t\t\telse if (threadPointerResult.approximate) {\r\n\t\t\t\t\t\t\tif (pointer.container === null) { return throwNullException('pointer.container'); }\r\n\t\t\t\t\t\t\tstoryContext.Warning(\"When loading state, exact internal story location couldn't be found: '\" + currentContainerPathStr + \"', so it was approximated to '\"+pointer.container.path.toString()+\"' to recover. Has the story changed since this save data was created?\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet inExpressionEvaluation = !!jElementObj['exp'];\r\n\r\n\t\t\t\t\tlet el = new Element(pushPopType, pointer, inExpressionEvaluation);\r\n\r\n\t\t\t\t\tlet jObjTemps = jElementObj['temp'];\r\n\t\t\t\t\tel.temporaryVariables = JsonSerialisation.JObjectToDictionaryRuntimeObjs(jObjTemps);\r\n\r\n\t\t\t\t\tthis.callstack.push(el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet prevContentObjPath = jThreadObj['previousContentObject'];\r\n\t\t\t\tif(typeof prevContentObjPath !== 'undefined') {\r\n\t\t\t\t\tlet prevPath = new Path(prevContentObjPath.toString());\r\n\t\t\t\t\tthis.previousPointer = storyContext.PointerAtPath(prevPath);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic Copy(){\r\n\t\t\tlet copy = new Thread();\r\n\t\t\tcopy.threadIndex = this.threadIndex;\r\n\t\t\tfor (let e of this.callstack) {\r\n\t\t\t\tcopy.callstack.push(e.Copy());\r\n\t\t\t}\r\n\t\t\tcopy.previousPointer = this.previousPointer.copy();\r\n\t\t\treturn copy;\r\n\t\t}\r\n\r\n\t\tget jsonToken(){\r\n\t\t\tlet threadJObj: any = {};\r\n\r\n\t\t\tlet jThreadCallstack: any[] = [];\r\n\t\t\tfor (let el of this.callstack) {\r\n\t\t\t\tlet jObj: any = {};\r\n\t\t\t\tif (!el.currentPointer.isNull) {\r\n\t\t\t\t\tif (el.currentPointer.container === null) { return throwNullException('el.currentPointer.container'); }\r\n\t\t\t\t\tjObj['cPath'] = el.currentPointer.container.path.componentsString;\r\n\t\t\t\t\tjObj['idx'] = el.currentPointer.index;\r\n\t\t\t\t}\r\n\t\t\t\tjObj['exp'] = el.inExpressionEvaluation;\r\n\t\t\t\tjObj['type'] = el.type;\r\n\t\t\t\tjObj['temp'] = JsonSerialisation.DictionaryRuntimeObjsToJObject(el.temporaryVariables);\r\n\t\t\t\tjThreadCallstack.push(jObj);\r\n\t\t\t}\r\n\r\n\t\t\tthreadJObj['callstack'] = jThreadCallstack;\r\n\t\t\tthreadJObj['threadIndex'] = this.threadIndex;\r\n\r\n\t\t\tif (!this.previousPointer.isNull) {\r\n\t\t\t\tlet resolvedPointer = this.previousPointer.Resolve();\r\n\t\t\t\tif (resolvedPointer === null) { return throwNullException('this.previousPointer.Resolve()'); }\r\n\t\t\t\tthreadJObj['previousContentObject'] = resolvedPointer.path.toString();\r\n\t\t\t}\r\n\r\n\t\t\treturn threadJObj;\r\n\t\t}\r\n\t}\r\n}\r\n","import {AbstractValue, Value, VariablePointerValue, ListValue} from './Value';\r\nimport {VariableAssignment} from './VariableAssignment';\r\nimport {InkObject} from './Object';\r\nimport {ListDefinitionsOrigin} from './ListDefinitionsOrigin';\r\nimport {StoryException} from './StoryException';\r\nimport {JsonSerialisation} from './JsonSerialisation';\r\nimport {asOrThrows, asOrNull} from './TypeAssertion';\r\nimport {tryGetValueFromMap} from './TryGetResult';\r\nimport {throwNullException} from './NullException';\r\nimport {CallStack} from './CallStack';\r\n\r\nexport class VariablesState{\r\n\t// The way variableChangedEvent is a bit different than the reference implementation.\r\n\t// Originally it uses the C# += operator to add delegates, but in js we need to maintain\r\n\t// an actual collection of delegates (ie. callbacks) to register a new one, there is a\r\n\t// special ObserveVariableChange method below.\r\n\tpublic variableChangedEventCallbacks: Array<(variableName: string, newValue: InkObject) => void> = [];\r\n\tpublic variableChangedEvent(variableName: string, newValue: InkObject): void {\r\n\t\tfor (let callback of this.variableChangedEventCallbacks) {\r\n\t\t\tcallback(variableName, newValue);\r\n\t\t}\r\n\t}\r\n\r\n\tget batchObservingVariableChanges(){\r\n\t\treturn this._batchObservingVariableChanges;\r\n\t}\r\n\tset batchObservingVariableChanges(value: boolean){\r\n\t\tthis._batchObservingVariableChanges = value;\r\n\t\tif (value) {\r\n\t\t\tthis._changedVariables = new Set();\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tif (this._changedVariables != null) {\r\n\t\t\t\tfor (let variableName of this._changedVariables) {\r\n\t\t\t\t\tlet currentValue = this._globalVariables.get(variableName);\r\n\t\t\t\t\tif (!currentValue) {\r\n\t\t\t\t\t\tthrowNullException('currentValue');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.variableChangedEvent(variableName, currentValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget callStack(){\r\n\t\treturn this._callStack;\r\n\t}\r\n\tset callStack(callStack){\r\n\t\tthis._callStack = callStack;\r\n\t}\r\n\r\n\tprivate _batchObservingVariableChanges: boolean = false;\r\n\r\n\t// the original code uses a magic getter and setter for global variables,\r\n\t// allowing things like variableState['varname]. This is not quite possible\r\n\t// in js without a Proxy, so it is replaced with this $ function.\r\n\tpublic $(variableName: string, value: InkObject){\r\n\t\tif (typeof value === 'undefined'){\r\n\t\t\tlet varContents = this._globalVariables.get(variableName);\r\n\r\n\t\t\tif ( typeof varContents === 'undefined' ) {\r\n\t\t\t\tvarContents = this._defaultGlobalVariables.get(variableName);\r\n\t\t\t}\r\n\r\n\t\t\tif ( typeof varContents !== 'undefined' )\r\n\t\t\t\treturn (varContents as AbstractValue).valueObject;\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif (typeof this._defaultGlobalVariables.get(variableName) === 'undefined')\r\n\t\t\t\tthrow new StoryException('Cannot assign to a variable ('+variableName+\") that hasn't been declared in the story\");\r\n\r\n\t\t\tlet val = Value.Create(value);\r\n\t\t\tif (val == null) {\r\n\t\t\t\tif (value == null) {\r\n\t\t\t\t\tthrow new StoryException('Cannot pass null to VariableState');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new StoryException('Invalid value passed to VariableState: '+value.toString());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.SetGlobal(variableName, val);\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(callStack: CallStack, listDefsOrigin: ListDefinitionsOrigin | null){\r\n\t\tthis._globalVariables = new Map();\r\n\t\tthis._callStack = callStack;\r\n\t\tthis._listDefsOrigin = listDefsOrigin;\r\n\r\n\t\t// if es6 proxies are available, use them.\r\n\t\ttry{\r\n\t\t\t// the proxy is used to allow direct manipulation of global variables.\r\n\t\t\t// It first tries to access the objects own property, and if none is\r\n\t\t\t// found it delegates the call to the $ method, defined below\r\n\t\t\tlet p = new Proxy(this, {\r\n\t\t\t\tget(target: any, name){\r\n\t\t\t\t\treturn (name in target) ? target[name] : target.$(name);\r\n\t\t\t\t},\r\n\t\t\t\tset(target: any, name, value){\r\n\t\t\t\t\tif (name in target) target[name] = value;\r\n\t\t\t\t\telse target.$(name, value);\r\n\t\t\t\t\treturn true; // returning a falsy value make the trap fail\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\treturn p;\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\t// thr proxy object is not available in this context. we should warn the\r\n\t\t\t// dev but writting to the console feels a bit intrusive.\r\n\t\t\t// console.log(\"ES6 Proxy not available - direct manipulation of global variables can't work, use $() instead.\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic CopyFrom(toCopy: VariablesState){\r\n\t\tthis._globalVariables = new Map(toCopy._globalVariables);\r\n\t\tthis._defaultGlobalVariables = new Map(toCopy._defaultGlobalVariables);\r\n\r\n\t\tthis.variableChangedEvent = toCopy.variableChangedEvent;\r\n\t\tthis.variableChangedEventCallbacks = toCopy.variableChangedEventCallbacks; // inkjs specificity that has to be copied along the rest of the structure\r\n\r\n\t\tif (toCopy.batchObservingVariableChanges != this.batchObservingVariableChanges) {\r\n\r\n\t\t\tif (toCopy.batchObservingVariableChanges) {\r\n\t\t\t\tthis._batchObservingVariableChanges = true;\r\n\t\t\t\tif (toCopy._changedVariables === null) { return throwNullException('toCopy._changedVariables'); }\r\n\t\t\t\tthis._changedVariables = new Set(toCopy._changedVariables);\r\n\t\t\t} else {\r\n\t\t\t\tthis._batchObservingVariableChanges = false;\r\n\t\t\t\tthis._changedVariables = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget jsonToken(){\r\n\t\treturn JsonSerialisation.DictionaryRuntimeObjsToJObject(this._globalVariables);\r\n\t}\r\n\tset jsonToken(value){\r\n\t\tthis._globalVariables = JsonSerialisation.JObjectToDictionaryRuntimeObjs(value);\r\n\t}\r\n\r\n\tpublic TryGetDefaultVariableValue(name: string | null): InkObject | null\r\n\t{\r\n\t\tlet val = tryGetValueFromMap(this._defaultGlobalVariables, name, null);\r\n\t\treturn val.exists ? val.result : null;\r\n\t}\r\n\r\n\tpublic GlobalVariableExistsWithName(name: string){\r\n\t\treturn this._globalVariables.has(name);\r\n\t}\r\n\r\n\tpublic GetVariableWithName(name: string | null, contextIndex: number = -1): InkObject | null {\r\n\t\tlet varValue = this.GetRawVariableWithName(name, contextIndex);\r\n\r\n\t\t// var varPointer = varValue as VariablePointerValue;\r\n\t\tlet varPointer = asOrNull(varValue, VariablePointerValue);\r\n\t\tif (varPointer !== null) {\r\n\t\t\tvarValue = this.ValueAtVariablePointer(varPointer);\r\n\t\t}\r\n\r\n\t\treturn varValue;\r\n\t}\r\n\r\n\tpublic GetRawVariableWithName(name: string | null, contextIndex: number) {\r\n\t\tlet varValue: InkObject | null = null;\r\n\r\n\t\tif (contextIndex == 0 || contextIndex == -1) {\r\n\t\t\t// this is a conditional assignment\r\n\t\t\tlet variableValue = tryGetValueFromMap(this._globalVariables, name, null);\r\n\t\t\tif (variableValue.exists)\r\n\t\t\t\treturn variableValue.result;\r\n\r\n\t\t\tif (this._listDefsOrigin === null) return throwNullException('VariablesState._listDefsOrigin');\r\n\t\t\tlet listItemValue = this._listDefsOrigin.FindSingleItemListWithName(name);\r\n\t\t\tif (listItemValue)\r\n\t\t\t\treturn listItemValue;\r\n\t\t}\r\n\r\n\t\tvarValue = this._callStack.GetTemporaryVariableWithName(name, contextIndex);\r\n\r\n\t\treturn varValue;\r\n\t}\r\n\r\n\tpublic ValueAtVariablePointer(pointer: VariablePointerValue){\r\n\t\t return this.GetVariableWithName(pointer.variableName, pointer.contextIndex);\r\n\t}\r\n\r\n\tpublic Assign(varAss: VariableAssignment, value: InkObject){\r\n\t\tlet name = varAss.variableName;\r\n\t\tif (name === null) { return throwNullException('name'); }\r\n\t\tlet contextIndex = -1;\r\n\r\n\t\tlet setGlobal = false;\r\n\t\tif (varAss.isNewDeclaration) {\r\n\t\t\tsetGlobal = varAss.isGlobal;\r\n\t\t} else {\r\n\t\t\tsetGlobal = this._globalVariables.has(name);\r\n\t\t}\r\n\r\n\t\tif (varAss.isNewDeclaration) {\r\n\t\t\t// var varPointer = value as VariablePointerValue;\r\n\t\t\tlet varPointer = asOrNull(value, VariablePointerValue);\r\n\t\t\tif (varPointer !== null) {\r\n\t\t\t\tlet fullyResolvedVariablePointer = this.ResolveVariablePointer(varPointer);\r\n\t\t\t\tvalue = fullyResolvedVariablePointer;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\r\n\t\t\tlet existingPointer = null;\r\n\t\t\tdo {\r\n\t\t\t\t// existingPointer = GetRawVariableWithName (name, contextIndex) as VariablePointerValue;\r\n\t\t\t\texistingPointer = asOrNull(this.GetRawVariableWithName(name, contextIndex), VariablePointerValue);\r\n\t\t\t\tif (existingPointer != null) {\r\n\t\t\t\t\tname = existingPointer.variableName;\r\n\t\t\t\t\tcontextIndex = existingPointer.contextIndex;\r\n\t\t\t\t\tsetGlobal = (contextIndex == 0);\r\n\t\t\t\t}\r\n\t\t\t} while(existingPointer != null);\r\n\t\t}\r\n\r\n\t\tif (setGlobal) {\r\n\t\t\tthis.SetGlobal(name, value);\r\n\t\t} else {\r\n\t\t\tthis._callStack.SetTemporaryVariable(name, value, varAss.isNewDeclaration, contextIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic SnapshotDefaultGlobals(){\r\n\t\tthis._defaultGlobalVariables = new Map(this._globalVariables);\r\n\t}\r\n\r\n\tpublic RetainListOriginsForAssignment(oldValue: InkObject, newValue: InkObject){\r\n\t\tlet oldList = asOrThrows(oldValue, ListValue);\r\n\t\tlet newList = asOrThrows(newValue, ListValue);\r\n\r\n\t\tif (oldList.value && newList.value && newList.value.Count == 0) {\r\n\t\t\tnewList.value.SetInitialOriginNames(oldList.value.originNames);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic SetGlobal(variableName: string | null, value: InkObject){\r\n\t\tlet oldValue = tryGetValueFromMap(this._globalVariables, variableName, null);\r\n\r\n\t\tif (oldValue.exists) {\r\n\t\t\tListValue.RetainListOriginsForAssignment(oldValue.result!, value);\r\n\t\t}\r\n\r\n\t\tif (variableName === null) { return throwNullException('variableName'); }\r\n\t\tthis._globalVariables.set(variableName, value);\r\n\r\n\t\t// TODO: Not sure !== is equivalent to !value.Equals(oldValue)\r\n\t\tif (this.variableChangedEvent != null && value !== oldValue.result) {\r\n\r\n\t\t\tif (this.batchObservingVariableChanges) {\r\n\t\t\t\tif (this._changedVariables === null) { return throwNullException('this._changedVariables'); }\r\n\t\t\t\tthis._changedVariables.add(variableName);\r\n\t\t\t} else {\r\n\t\t\t\tthis.variableChangedEvent(variableName, value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ResolveVariablePointer(varPointer: VariablePointerValue){\r\n\t\tlet contextIndex = varPointer.contextIndex;\r\n\r\n\t\tif( contextIndex == -1 )\r\n\t\t\tcontextIndex = this.GetContextIndexOfVariableNamed(varPointer.variableName);\r\n\r\n\t\tlet valueOfVariablePointedTo = this.GetRawVariableWithName(varPointer.variableName, contextIndex);\r\n\r\n\t\t// var doubleRedirectionPointer = valueOfVariablePointedTo as VariablePointerValue;\r\n\t\tlet doubleRedirectionPointer = asOrNull(valueOfVariablePointedTo, VariablePointerValue);\r\n\t\tif (doubleRedirectionPointer != null) {\r\n\t\t\treturn doubleRedirectionPointer;\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\treturn new VariablePointerValue(varPointer.variableName, contextIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic GetContextIndexOfVariableNamed(varName: string){\r\n\t\tif (this._globalVariables.get(varName))\r\n\t\t\treturn 0;\r\n\r\n\t\treturn this._callStack.currentElementIndex;\r\n\t}\r\n\r\n\t\t/**\r\n\t\t * This function is specific to the js version of ink. It allows to register a\r\n\t\t * callback that will be called when a variable changes. The original code uses\r\n\t\t * `state.variableChangedEvent += callback` instead.\r\n\t\t * @param {function} callback\r\n\t\t */\r\n\tpublic ObserveVariableChange(callback: (variableName: string, newValue: InkObject) => void){\r\n\t\tthis.variableChangedEventCallbacks.push(callback);\r\n\t}\r\n\r\n\tprivate _globalVariables: Map<string, InkObject>;\r\n\tprivate _defaultGlobalVariables: Map<string, InkObject> = new Map();\r\n\r\n\tprivate _callStack: CallStack;\r\n\tprivate _changedVariables: Set<string> | null = new Set();\r\n\tprivate _listDefsOrigin: ListDefinitionsOrigin | null;\r\n}\r\n","import {CallStack} from './CallStack';\r\nimport {VariablesState} from './VariablesState';\r\nimport {ValueType, Value, StringValue, ListValue} from './Value';\r\nimport {PushPopType} from './PushPop';\r\nimport {Tag} from './Tag';\r\nimport {Glue} from './Glue';\r\nimport {Path} from './Path';\r\nimport {ControlCommand} from './ControlCommand';\r\nimport {StoryException} from './StoryException';\r\nimport {StringBuilder} from './StringBuilder';\r\nimport {JsonSerialisation} from './JsonSerialisation';\r\nimport {PRNG} from './PRNG';\r\nimport {Void} from './Void';\r\nimport {Pointer} from './Pointer';\r\nimport {tryGetValueFromMap} from './TryGetResult';\r\nimport {Choice} from './Choice';\r\nimport {asOrNull, asOrThrows, nullIfUndefined} from './TypeAssertion';\r\nimport {JObject} from './JObject';\r\nimport {Debug} from './Debug';\r\nimport {Container} from './Container';\r\nimport {InkObject} from './Object';\r\nimport { throwNullException } from './NullException';\r\nimport { Story } from './Story';\r\n\r\nexport class StoryState{\r\n\r\n\tpublic readonly kInkSaveStateVersion = 8;\r\n\tpublic readonly kMinCompatibleLoadVersion = 8;\r\n\r\n\tpublic ToJson(indented: boolean = false){\r\n\t\treturn JSON.stringify(this.jsonToken, null, (indented) ? 2 : 0);\r\n\t}\r\n\tpublic toJson(indented: boolean = false){\r\n\t\treturn this.ToJson(indented);\r\n\t}\r\n\r\n\tpublic LoadJson(json: string){\r\n\t\tthis.jsonToken = JSON.parse(json);\r\n\t}\r\n\r\n\tpublic VisitCountAtPathString(pathString: string){\r\n\t\tlet visitCountOut = tryGetValueFromMap(this.visitCounts, pathString, null);\r\n\t\tif (visitCountOut.exists)\r\n\t\t\treturn visitCountOut.result;\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tget callstackDepth(){\r\n\t\treturn this.callStack.depth;\r\n\t}\r\n\r\n\tget outputStream(){\r\n\t\treturn this._outputStream;\r\n\t}\r\n\r\n\tget currentChoices(){\r\n\t\t// If we can continue generating text content rather than choices,\r\n\t\t// then we reflect the choice list as being empty, since choices\r\n\t\t// should always come at the end.\r\n\t\tif ( this.canContinue ) return [];\r\n\t\treturn this._currentChoices;\r\n\t}\r\n\r\n\tget generatedChoices(){\r\n\t\treturn this._currentChoices;\r\n\t}\r\n\r\n\tget currentErrors(){\r\n\t\treturn this._currentErrors;\r\n\t}\r\n\tprivate _currentErrors: string[] | null = null;\r\n\r\n\tget currentWarnings(){\r\n\t\treturn this._currentWarnings;\r\n\t}\r\n\tprivate _currentWarnings: string[] | null = null;\r\n\r\n\tget variablesState(){\r\n\t\treturn this._variablesState;\r\n\t}\r\n\tprivate _variablesState: VariablesState;\r\n\r\n\tpublic callStack: CallStack;\r\n\r\n\tget evaluationStack(){\r\n\t\treturn this._evaluationStack;\r\n\t}\r\n\tprivate _evaluationStack: InkObject[];\r\n\r\n\tpublic divertedPointer: Pointer = Pointer.Null;\r\n\r\n\tget visitCounts(){\r\n\t\treturn this._visitCounts;\r\n\t}\r\n\tprivate _visitCounts: Map<string, number>;\r\n\r\n\tget turnIndices(){\r\n\t\treturn this._turnIndices;\r\n\t}\r\n\tprivate _turnIndices: Map<string, number>;\r\n\r\n\tget currentTurnIndex(){\r\n\t\treturn this._currentTurnIndex;\r\n\t}\r\n\tprivate _currentTurnIndex: number = 0;\r\n\r\n\tpublic storySeed: number = 0;\r\n\tpublic previousRandom: number = 0;\r\n\tpublic didSafeExit: boolean = false;\r\n\r\n\tpublic story: Story;\r\n\r\n\tget currentPathString(){\r\n\t\tlet pointer = this.currentPointer;\r\n\t\tif (pointer.isNull) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\tif (pointer.path === null) { return throwNullException('pointer.path'); }\r\n\t\t\treturn pointer.path.toString();\r\n\t\t}\r\n\t}\r\n\r\n\tget currentPointer(){\r\n\t\treturn this.callStack.currentElement.currentPointer.copy();\r\n\t}\r\n\r\n\tset currentPointer(value){\r\n\t\tthis.callStack.currentElement.currentPointer = value.copy();\r\n\t}\r\n\r\n\tget previousPointer(){\r\n\t\treturn this.callStack.currentThread.previousPointer.copy();\r\n\t}\r\n\r\n\tset previousPointer(value){\r\n\t\tthis.callStack.currentThread.previousPointer = value.copy();\r\n\t}\r\n\r\n\tget canContinue(){\r\n\t\treturn !this.currentPointer.isNull && !this.hasError;\r\n\t}\r\n\r\n\tget hasError(){\r\n\t\treturn this.currentErrors != null && this.currentErrors.length > 0;\r\n\t}\r\n\r\n\tget hasWarning(){\r\n\t\treturn this.currentWarnings != null && this.currentWarnings.length > 0;\r\n\t}\r\n\r\n\tget currentText(){\r\n\t\tif( this._outputStreamTextDirty ) {\r\n\t\t\tlet sb = new StringBuilder();\r\n\r\n\t\t\tfor (let outputObj of this._outputStream) {\r\n\t\t\t\t// var textContent = outputObj as StringValue;\r\n\t\t\t\tlet textContent = asOrNull(outputObj, StringValue);\r\n\t\t\t\tif (textContent !== null) {\r\n\t\t\t\t\tsb.Append(textContent.value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._currentText = this.CleanOutputWhitespace(sb.toString());\r\n\t\t\tthis._outputStreamTextDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._currentText;\r\n\t}\r\n\tprivate _currentText: string | null = null;\r\n\r\n\tpublic CleanOutputWhitespace(str: string){\r\n\t\tlet sb = new StringBuilder();\r\n\r\n\t\tlet currentWhitespaceStart = -1;\r\n\t\tlet startOfLine = 0;\r\n\r\n\t\tfor (let i = 0; i < str.length; i++) {\r\n\t\t\tlet c = str.charAt(i);\r\n\r\n\t\t\tlet isInlineWhitespace = (c == ' ') || (c == '\\t');\r\n\r\n\t\t\tif (isInlineWhitespace && currentWhitespaceStart == -1)\r\n\t\t\t\tcurrentWhitespaceStart = i;\r\n\r\n\t\t\tif (!isInlineWhitespace) {\r\n\t\t\t\tif (c != '\\n' && currentWhitespaceStart > 0 && currentWhitespaceStart != startOfLine) {\r\n\t\t\t\t\tsb.Append(' ');\r\n\t\t\t\t}\r\n\t\t\t\tcurrentWhitespaceStart = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (c == '\\n')\r\n\t\t\t\tstartOfLine = i + 1;\r\n\r\n\t\t\tif (!isInlineWhitespace)\r\n\t\t\t\tsb.Append(c);\r\n\t\t}\r\n\r\n\t\treturn sb.toString();\r\n\t}\r\n\r\n\tget currentTags(){\r\n\t\tif( this._outputStreamTagsDirty ) {\r\n\t\t\tthis._currentTags = [];\r\n\r\n\t\t\tfor(let outputObj of this._outputStream) {\r\n\t\t\t\t// var tag = outputObj as Tag;\r\n\t\t\t\tlet tag = asOrNull(outputObj, Tag);\r\n\t\t\t\tif (tag !== null) {\r\n\t\t\t\t\tthis._currentTags.push(tag.text);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._outputStreamTagsDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._currentTags;\r\n\t}\r\n\tprivate _currentTags: string[] | null = null;\r\n\r\n\tget inExpressionEvaluation(){\r\n\t\treturn this.callStack.currentElement.inExpressionEvaluation;\r\n\t}\r\n\tset inExpressionEvaluation(value){\r\n\t\tthis.callStack.currentElement.inExpressionEvaluation = value;\r\n\t}\r\n\r\n\tconstructor(story: Story){\r\n\t\tthis.story = story;\r\n\r\n\t\tthis._outputStream = [];\r\n\t\tthis.OutputStreamDirty();\r\n\r\n\t\tthis._evaluationStack = [];\r\n\r\n\t\tthis.callStack = new CallStack(story);\r\n\t\tthis._variablesState = new VariablesState(this.callStack, story.listDefinitions);\r\n\r\n\t\tthis._visitCounts = new Map();\r\n\t\tthis._turnIndices = new Map();\r\n\t\tthis._currentTurnIndex = -1;\r\n\r\n\t\tlet timeSeed = (new Date()).getTime();\r\n\t\tthis.storySeed = (new PRNG(timeSeed)).next() % 100;\r\n\t\tthis.previousRandom = 0;\r\n\r\n\t\tthis._currentChoices = [];\r\n\r\n\t\tthis.GoToStart();\r\n\t}\r\n\r\n\tpublic GoToStart(){\r\n\t\tthis.callStack.currentElement.currentPointer = Pointer.StartOf(this.story.mainContentContainer);\r\n\t}\r\n\r\n\tpublic Copy(){\r\n\t\tlet copy = new StoryState(this.story);\r\n\r\n\t\tcopy.outputStream.push.apply(copy.outputStream, this._outputStream);\r\n\t\tthis.OutputStreamDirty();\r\n\r\n\t\tcopy._currentChoices.push.apply(copy._currentChoices, this._currentChoices);\r\n\r\n\t\tif (this.hasError) {\r\n\t\t\tcopy._currentErrors = [];\r\n\t\t\tcopy._currentErrors.push.apply(copy._currentErrors, this.currentErrors || []);\r\n\t\t}\r\n\r\n\t\tif (this.hasWarning) {\r\n\t\t\tcopy._currentWarnings = [];\r\n\t\t\tcopy._currentWarnings.push.apply(copy._currentWarnings, this.currentWarnings || []);\r\n\t\t}\r\n\r\n\t\tcopy.callStack = new CallStack(this.callStack);\r\n\r\n\t\tcopy._variablesState = new VariablesState(copy.callStack, this.story.listDefinitions);\r\n\t\tcopy.variablesState.CopyFrom(this.variablesState);\r\n\r\n\t\tcopy.evaluationStack.push.apply(copy.evaluationStack, this.evaluationStack);\r\n\r\n\t\tif (!this.divertedPointer.isNull)\r\n\t\t\tcopy.divertedPointer = this.divertedPointer.copy();\r\n\r\n\t\tcopy.previousPointer = this.previousPointer.copy();\r\n\r\n\t\tcopy._visitCounts = new Map(this.visitCounts);\r\n\t\tcopy._turnIndices = new Map(this.turnIndices);\r\n\r\n\t\tcopy._currentTurnIndex = this.currentTurnIndex;\r\n\t\tcopy.storySeed = this.storySeed;\r\n\t\tcopy.previousRandom = this.previousRandom;\r\n\r\n\t\tcopy.didSafeExit = this.didSafeExit;\r\n\r\n\t\treturn copy;\r\n\t}\r\n\r\n\tget jsonToken(){\r\n\t\tlet obj: JObject = {};\r\n\r\n\t\tlet choiceThreads: JObject | undefined;\r\n\t\tfor (let c of this._currentChoices) {\r\n\t\t\tif (c.threadAtGeneration === null) { return throwNullException('c.threadAtGeneration'); }\r\n\t\t\tc.originalThreadIndex = c.threadAtGeneration.threadIndex;\r\n\r\n\t\t\tif( this.callStack.ThreadWithIndex(c.originalThreadIndex) == null ) {\r\n\t\t\t\tif( choiceThreads == null )\r\n\t\t\t\t\tchoiceThreads = new Map();\r\n\r\n\t\t\t\tchoiceThreads[c.originalThreadIndex.toString()] = c.threadAtGeneration.jsonToken;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (choiceThreads != null)\r\n\t\t\tobj['choiceThreads'] = choiceThreads;\r\n\r\n\t\tobj['callstackThreads'] = this.callStack.GetJsonToken();\r\n\t\tobj['variablesState'] = this.variablesState.jsonToken;\r\n\r\n\t\tobj['evalStack'] = JsonSerialisation.ListToJArray(this.evaluationStack);\r\n\r\n\t\tobj['outputStream'] = JsonSerialisation.ListToJArray(this._outputStream);\r\n\r\n\t\tobj['currentChoices'] = JsonSerialisation.ListToJArray(this._currentChoices);\r\n\r\n\t\tif(!this.divertedPointer.isNull) {\r\n\t\t\tif (this.divertedPointer.path === null) { return throwNullException('this.divertedPointer.path'); }\r\n\t\t\tobj['currentDivertTarget'] = this.divertedPointer.path.componentsString;\r\n\t\t}\r\n\r\n\t\tobj['visitCounts'] = JsonSerialisation.IntDictionaryToJObject(this.visitCounts);\r\n\t\tobj['turnIndices'] = JsonSerialisation.IntDictionaryToJObject(this.turnIndices);\r\n\t\tobj['turnIdx'] = this.currentTurnIndex;\r\n\t\tobj['storySeed'] = this.storySeed;\r\n\t\tobj['previousRandom'] = this.previousRandom;\r\n\r\n\t\tobj['inkSaveVersion'] = this.kInkSaveStateVersion;\r\n\r\n\t\t// Not using this right now, but could do in future.\r\n\t\tobj['inkFormatVersion'] = this.story.inkVersionCurrent;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\tset jsonToken(value: JObject){\r\n\t\tlet jObject = value;\r\n\r\n\t\tlet jSaveVersion = jObject['inkSaveVersion'];\r\n\t\tif (jSaveVersion == null) {\r\n\t\t\tthrow new StoryException(\"ink save format incorrect, can't load.\");\r\n\t\t}\r\n\t\telse if (parseInt(jSaveVersion) < this.kMinCompatibleLoadVersion) {\r\n\t\t\tthrow new StoryException(\"Ink save format isn't compatible with the current version (saw '\"+jSaveVersion+\"', but minimum is \"+this.kMinCompatibleLoadVersion+\"), so can't load.\");\r\n\t\t}\r\n\r\n\t\tthis.callStack.SetJsonToken(jObject['callstackThreads'], this.story);\r\n\t\tthis.variablesState.jsonToken = jObject['variablesState'];\r\n\r\n\t\tthis._evaluationStack = JsonSerialisation.JArrayToRuntimeObjList(jObject['evalStack']);\r\n\r\n\t\tthis._outputStream = JsonSerialisation.JArrayToRuntimeObjList(jObject['outputStream']);\r\n\t\tthis.OutputStreamDirty();\r\n\r\n\t\t// currentChoices = Json.JArrayToRuntimeObjList<Choice>((JArray)jObject [\"currentChoices\"]);\r\n\t\tthis._currentChoices = JsonSerialisation.JArrayToRuntimeObjList(jObject['currentChoices']) as Choice[];\r\n\r\n\t\tlet currentDivertTargetPath = jObject['currentDivertTarget'];\r\n\t\tif (currentDivertTargetPath != null) {\r\n\t\t\tlet divertPath = new Path(currentDivertTargetPath.toString());\r\n\t\t\tthis.divertedPointer = this.story.PointerAtPath(divertPath);\r\n\t\t}\r\n\r\n\t\tthis._visitCounts = JsonSerialisation.JObjectToIntDictionary(jObject['visitCounts']) as Map<string, number>;\r\n\t\tthis._turnIndices = JsonSerialisation.JObjectToIntDictionary(jObject['turnIndices']) as Map<string, number>;\r\n\t\tthis._currentTurnIndex = parseInt(jObject['turnIdx']);\r\n\t\tthis.storySeed = parseInt(jObject['storySeed']);\r\n\t\tthis.previousRandom = parseInt(jObject['previousRandom']);\r\n\r\n\t\t// var jChoiceThreads = jObject[\"choiceThreads\"] as JObject;\r\n\t\tlet jChoiceThreads = jObject['choiceThreads'];\r\n\r\n\t\tfor(let c of this._currentChoices) {\r\n\t\t\tlet foundActiveThread = this.callStack.ThreadWithIndex(c.originalThreadIndex);\r\n\t\t\tif( foundActiveThread != null ) {\r\n\t\t\t\tc.threadAtGeneration = foundActiveThread.Copy();\r\n\t\t\t} else {\r\n\t\t\t\tlet jSavedChoiceThread = jChoiceThreads[c.originalThreadIndex.toString()];\r\n\t\t\t\tc.threadAtGeneration = new CallStack.Thread(jSavedChoiceThread, this.story);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ResetErrors(){\r\n\t\tthis._currentErrors = null;\r\n\t\tthis._currentWarnings = null;\r\n\t}\r\n\tpublic ResetOutput(objs: InkObject[] | null = null){\r\n\t\tthis._outputStream.length = 0;\r\n\t\tif (objs !== null) this._outputStream.push.apply(this._outputStream, objs);\r\n\t\tthis.OutputStreamDirty();\r\n\t}\r\n\r\n\tpublic PushToOutputStream(obj: InkObject | null){\r\n\t\t// var text = obj as StringValue;\r\n\t\tlet text = asOrNull(obj, StringValue);\r\n\t\tif (text !== null) {\r\n\t\t\tlet listText = this.TrySplittingHeadTailWhitespace(text);\r\n\t\t\tif (listText !== null) {\r\n\t\t\t\tfor(let textObj of listText) {\r\n\t\t\t\t\tthis.PushToOutputStreamIndividual(textObj);\r\n\t\t\t\t}\r\n\t\t\t\tthis.OutputStreamDirty();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.PushToOutputStreamIndividual(obj);\r\n\t\tthis.OutputStreamDirty();\r\n\t}\r\n\r\n\tpublic PopFromOutputStream(count: number){\r\n\t\tthis.outputStream.splice(this.outputStream.length - count, count);\r\n\t\tthis.OutputStreamDirty();\r\n\t}\r\n\r\n\tpublic TrySplittingHeadTailWhitespace(single: StringValue) {\r\n\t\tlet str = single.value;\r\n\t\tif (str === null) { return throwNullException('single.value'); }\r\n\r\n\t\tlet headFirstNewlineIdx = -1;\r\n\t\tlet headLastNewlineIdx = -1;\r\n\t\tfor (let i = 0; i < str.length; ++i) {\r\n\t\t\tlet c = str[i];\r\n\t\t\tif (c == '\\n') {\r\n\t\t\t\tif (headFirstNewlineIdx == -1)\r\n\t\t\t\t\theadFirstNewlineIdx = i;\r\n\t\t\t\theadLastNewlineIdx = i;\r\n\t\t\t}\r\n\t\t\telse if (c == ' ' || c == '\\t')\r\n\t\t\t\tcontinue;\r\n\t\t\telse\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tlet tailLastNewlineIdx = -1;\r\n\t\tlet tailFirstNewlineIdx = -1;\r\n\t\tfor (let i = 0; i < str.length; ++i) {\r\n\t\t\tlet c = str[i];\r\n\t\t\tif (c == '\\n') {\r\n\t\t\t\tif (tailLastNewlineIdx == -1)\r\n\t\t\t\t\ttailLastNewlineIdx = i;\r\n\t\t\t\ttailFirstNewlineIdx = i;\r\n\t\t\t}\r\n\t\t\telse if (c == ' ' || c == '\\t')\r\n\t\t\t\tcontinue;\r\n\t\t\telse\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// No splitting to be done?\r\n\t\tif (headFirstNewlineIdx == -1 && tailLastNewlineIdx == -1)\r\n\t\t\treturn null;\r\n\r\n\t\tlet listTexts: StringValue[] = [];\r\n\t\tlet innerStrStart = 0;\r\n\t\tlet innerStrEnd = str.length;\r\n\r\n\t\tif (headFirstNewlineIdx != -1) {\r\n\t\t\tif (headFirstNewlineIdx > 0) {\r\n\t\t\t\tlet leadingSpaces = new StringValue(str.substring(0, headFirstNewlineIdx));\r\n\t\t\t\tlistTexts.push(leadingSpaces);\r\n\t\t\t}\r\n\t\t\tlistTexts.push(new StringValue('\\n'));\r\n\t\t\tinnerStrStart = headLastNewlineIdx + 1;\r\n\t\t}\r\n\r\n\t\tif (tailLastNewlineIdx != -1) {\r\n\t\t\tinnerStrEnd = tailFirstNewlineIdx;\r\n\t\t}\r\n\r\n\t\tif (innerStrEnd > innerStrStart) {\r\n\t\t\tlet innerStrText = str.substring(innerStrStart, innerStrEnd - innerStrStart);\r\n\t\t\tlistTexts.push(new StringValue(innerStrText));\r\n\t\t}\r\n\r\n\t\tif (tailLastNewlineIdx != -1 && tailFirstNewlineIdx > headLastNewlineIdx) {\r\n\t\t\tlistTexts.push(new StringValue('\\n'));\r\n\t\t\tif (tailLastNewlineIdx < str.length - 1) {\r\n\t\t\t\tlet numSpaces = (str.length - tailLastNewlineIdx) - 1;\r\n\t\t\t\tlet trailingSpaces = new StringValue(str.substring(tailLastNewlineIdx + 1, numSpaces));\r\n\t\t\t\tlistTexts.push(trailingSpaces);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn listTexts;\r\n\t}\r\n\r\n\tpublic PushToOutputStreamIndividual(obj: InkObject | null){\r\n\t\tlet glue = asOrNull(obj, Glue);\r\n\t\tlet text = asOrNull(obj, StringValue);\r\n\r\n\t\tlet includeInOutput = true;\r\n\r\n\t\tif (glue) {\r\n\t\t\tthis.TrimNewlinesFromOutputStream();\r\n\t\t\tincludeInOutput = true;\r\n\t\t}\r\n\r\n\t\telse if( text ) {\r\n\r\n\t\t\tlet functionTrimIndex = -1;\r\n\t\t\tlet currEl = this.callStack.currentElement;\r\n\t\t\tif (currEl.type == PushPopType.Function) {\r\n\t\t\t\tfunctionTrimIndex = currEl.functionStartInOutputStream;\r\n\t\t\t}\r\n\r\n\t\t\tlet glueTrimIndex = -1;\r\n\t\t\tfor (let i = this._outputStream.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet o = this._outputStream[i];\r\n\t\t\t\tlet c = (o instanceof ControlCommand) ? o : null;\r\n\t\t\t\tlet g = (o instanceof Glue) ? o : null;\r\n\r\n\t\t\t\tif (g != null) {\r\n\t\t\t\t\tglueTrimIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (c != null && c.commandType == ControlCommand.CommandType.BeginString) {\r\n\t\t\t\t\tif (i >= functionTrimIndex) {\r\n\t\t\t\t\t\tfunctionTrimIndex = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet trimIndex = -1;\r\n\t\t\tif (glueTrimIndex != -1 && functionTrimIndex != -1)\r\n\t\t\t\ttrimIndex = Math.min(functionTrimIndex, glueTrimIndex);\r\n\t\t\telse if (glueTrimIndex != -1)\r\n\t\t\t\ttrimIndex = glueTrimIndex;\r\n\t\t\telse\r\n\t\t\t\ttrimIndex = functionTrimIndex;\r\n\r\n\t\t\tif (trimIndex != -1) {\r\n\r\n\t\t\t\tif (text.isNewline) {\r\n\t\t\t\t\tincludeInOutput = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (text.isNonWhitespace) {\r\n\r\n\t\t\t\t\tif (glueTrimIndex > -1)\r\n\t\t\t\t\t\tthis.RemoveExistingGlue();\r\n\r\n\t\t\t\t\tif (functionTrimIndex > -1) {\r\n\t\t\t\t\t\tlet callStackElements = this.callStack.elements;\r\n\t\t\t\t\t\tfor (let i = callStackElements.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tlet el = callStackElements[i];\r\n\t\t\t\t\t\t\tif (el.type == PushPopType.Function) {\r\n\t\t\t\t\t\t\t\tel.functionStartInOutputStream = -1;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\telse if (text.isNewline) {\r\n\t\t\t\tif (this.outputStreamEndsInNewline || !this.outputStreamContainsContent)\r\n\t\t\t\t\tincludeInOutput = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (includeInOutput) {\r\n\t\t\tif (obj === null) { return throwNullException('obj'); }\r\n\t\t\tthis._outputStream.push(obj);\r\n\t\t\tthis.OutputStreamDirty();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic TrimNewlinesFromOutputStream(){\r\n\t\tlet removeWhitespaceFrom = -1;\r\n\r\n\t\tlet i = this._outputStream.length-1;\r\n\t\twhile (i >= 0) {\r\n\t\t\tlet obj = this._outputStream[i];\r\n\t\t\tlet cmd = asOrNull(obj, ControlCommand);\r\n\t\t\tlet txt = asOrNull(obj, StringValue);\r\n\r\n\t\t\tif (cmd != null || (txt != null && txt.isNonWhitespace)) {\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (txt != null && txt.isNewline) {\r\n\t\t\t\tremoveWhitespaceFrom = i;\r\n\t\t\t}\r\n\t\t\ti--;\r\n\t\t}\r\n\r\n\t\t// Remove the whitespace\r\n\t\tif (removeWhitespaceFrom >= 0) {\r\n\t\t\ti=removeWhitespaceFrom;\r\n\t\t\twhile(i < this._outputStream.length) {\r\n\t\t\t\tlet text = asOrNull(this._outputStream[i], StringValue);\r\n\t\t\t\tif (text) {\r\n\t\t\t\t\tthis._outputStream.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.OutputStreamDirty();\r\n\t}\r\n\r\n\tpublic RemoveExistingGlue(){\r\n\t\tfor (let i = this._outputStream.length - 1; i >= 0; i--) {\r\n\t\t\tlet c = this._outputStream[i];\r\n\t\t\tif (c instanceof Glue) {\r\n\t\t\t\tthis._outputStream.splice(i, 1);\r\n\t\t\t} else if( c instanceof ControlCommand ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.OutputStreamDirty();\r\n\t}\r\n\r\n\tget outputStreamEndsInNewline(){\r\n\t\tif (this._outputStream.length > 0) {\r\n\r\n\t\t\tfor (let i = this._outputStream.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet obj = this._outputStream[i];\r\n\t\t\t\tif (obj instanceof ControlCommand)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tlet text = this._outputStream[i];\r\n\t\t\t\tif (text instanceof StringValue) {\r\n\t\t\t\t\tif (text.isNewline)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\telse if (text.isNonWhitespace)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget outputStreamContainsContent(){\r\n\t\tfor (let i = 0; i < this._outputStream.length; i++){\r\n\t\t\tif (this._outputStream[i] instanceof StringValue)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget inStringEvaluation(){\r\n\t\tfor (let i = this._outputStream.length - 1; i >= 0; i--) {\r\n\t\t\t// var cmd = this._outputStream[i] as ControlCommand;\r\n\t\t\tlet cmd = asOrNull(this._outputStream[i], ControlCommand);\r\n\t\t\tif (cmd instanceof ControlCommand && cmd.commandType == ControlCommand.CommandType.BeginString) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic PushEvaluationStack(obj: InkObject | null){\r\n\t\t// var listValue = obj as ListValue;\r\n\t\tlet listValue = asOrNull(obj, ListValue);\r\n\t\tif (listValue) {\r\n\r\n\t\t\t// Update origin when list is has something to indicate the list origin\r\n\t\t\tlet rawList = listValue.value;\r\n\t\t\tif (rawList === null) { return throwNullException('rawList'); }\r\n\r\n\t\t\tif (rawList.originNames != null) {\r\n\t\t\t\tif (!rawList.origins) rawList.origins = [];\r\n\t\t\t\trawList.origins.length = 0;\r\n\r\n\t\t\t\tfor (let n of rawList.originNames) {\r\n\t\t\t\t\tif (this.story.listDefinitions === null) return throwNullException('StoryState.story.listDefinitions');\r\n\t\t\t\t\tlet def = this.story.listDefinitions.TryListGetDefinition(n, null);\r\n\t\t\t\t\tif (def.result === null) return throwNullException('StoryState def.result');\r\n\t\t\t\t\tif (rawList.origins.indexOf(def.result) < 0) rawList.origins.push(def.result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (obj === null) { return throwNullException('obj'); }\r\n\t\tthis.evaluationStack.push(obj);\r\n\t}\r\n\r\n\tpublic PopEvaluationStack(): InkObject;\r\n\tpublic PopEvaluationStack(numberOfObjects: number): InkObject[];\r\n\tpublic PopEvaluationStack(numberOfObjects?: number){\r\n\t\tif (typeof numberOfObjects === 'undefined'){\r\n\t\t\tlet obj = this.evaluationStack.pop();\r\n\t\t\treturn nullIfUndefined(obj);\r\n\t\t} else {\r\n\t\t\tif(numberOfObjects > this.evaluationStack.length) {\r\n\t\t\t\tthrow new Error('trying to pop too many objects');\r\n\t\t\t}\r\n\r\n\t\t\tlet popped = this.evaluationStack.splice(this.evaluationStack.length - numberOfObjects, numberOfObjects);\r\n\t\t\treturn nullIfUndefined(popped);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic PeekEvaluationStack(){\r\n\t\t return this.evaluationStack[this.evaluationStack.length - 1];\r\n\t}\r\n\r\n\tpublic ForceEnd(){\r\n\t\tthis.callStack.Reset();\r\n\r\n\t\tthis._currentChoices.length = 0;\r\n\r\n\t\tthis.currentPointer = Pointer.Null;\r\n\t\tthis.previousPointer = Pointer.Null;\r\n\r\n\t\tthis.didSafeExit = true;\r\n\t}\r\n\r\n\tpublic TrimWhitespaceFromFunctionEnd(){\r\n\t\tDebug.Assert (this.callStack.currentElement.type == PushPopType.Function);\r\n\t\tlet functionStartPoint = this.callStack.currentElement.functionStartInOutputStream;\r\n\r\n\t\tif (functionStartPoint == -1) {\r\n\t\t\tfunctionStartPoint = 0;\r\n\t\t}\r\n\r\n\t\tfor (let i = this._outputStream.length - 1; i >= functionStartPoint; i--) {\r\n\t\t\tlet obj = this._outputStream[i];\r\n\t\t\tlet txt = asOrNull(obj, StringValue);\r\n\t\t\tlet cmd = asOrNull(obj, ControlCommand);\r\n\r\n\t\t\tif (txt == null) continue;\r\n\t\t\tif (cmd) break;\r\n\r\n\t\t\tif (txt.isNewline || txt.isInlineWhitespace) {\r\n\t\t\t\tthis._outputStream.splice(i, 1);\r\n\t\t\t\tthis.OutputStreamDirty();\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic PopCallStack(popType: PushPopType | null = null) {\r\n\t\tif (this.callStack.currentElement.type == PushPopType.Function)\r\n\t\t\tthis.TrimWhitespaceFromFunctionEnd();\r\n\r\n\t\tthis.callStack.Pop(popType);\r\n\t}\r\n\r\n\tpublic SetChosenPath(path: Path, incrementingTurnIndex: boolean){\r\n\t\t// Changing direction, assume we need to clear current set of choices\r\n\t\tthis._currentChoices.length = 0;\r\n\r\n\t\tlet newPointer = this.story.PointerAtPath(path);\r\n\t\tif (!newPointer.isNull && newPointer.index == -1)\r\n\t\t\tnewPointer.index = 0;\r\n\r\n\t\tthis.currentPointer = newPointer;\r\n\r\n\t\tif (incrementingTurnIndex)\r\n\t\t\tthis._currentTurnIndex++;\r\n\t}\r\n\r\n\tpublic StartFunctionEvaluationFromGame(funcContainer: Container, args: any[]){\r\n\t\tthis.callStack.Push(PushPopType.FunctionEvaluationFromGame, this.evaluationStack.length);\r\n\t\tthis.callStack.currentElement.currentPointer = Pointer.StartOf(funcContainer);\r\n\r\n\t\tthis.PassArgumentsToEvaluationStack(args);\r\n\t}\r\n\r\n\tpublic PassArgumentsToEvaluationStack(args: any[]){\r\n\t\t// Pass arguments onto the evaluation stack\r\n\t\tif (args != null) {\r\n\t\t\tfor (let i = 0; i < args.length; i++) {\r\n\t\t\t\tif (!(typeof args[i] === 'number' || typeof args[i] === 'string')) {\r\n\t\t\t\t\tthrow new Error('ink arguments when calling EvaluateFunction / ChoosePathStringWithParameters  must be int, float or string');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.PushEvaluationStack(Value.Create(args[i]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic TryExitFunctionEvaluationFromGame(){\r\n\t\tif (this.callStack.currentElement.type == PushPopType.FunctionEvaluationFromGame) {\r\n\t\t\tthis.currentPointer = Pointer.Null;\r\n\t\t\tthis.didSafeExit = true;\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic CompleteFunctionEvaluationFromGame(){\r\n\t\tif (this.callStack.currentElement.type != PushPopType.FunctionEvaluationFromGame) {\r\n\t\t\tthrow new StoryException('Expected external function evaluation to be complete. Stack trace: '+this.callStack.callStackTrace);\r\n\t\t}\r\n\r\n\t\tlet originalEvaluationStackHeight = this.callStack.currentElement.evaluationStackHeightWhenPushed;\r\n\r\n\t\tlet returnedObj: InkObject | null = null;\r\n\t\twhile (this.evaluationStack.length > originalEvaluationStackHeight) {\r\n\t\t\tlet poppedObj = this.PopEvaluationStack();\r\n\t\t\tif (returnedObj === null)\r\n\t\t\t\treturnedObj = poppedObj;\r\n\t\t}\r\n\r\n\t\tthis.PopCallStack(PushPopType.FunctionEvaluationFromGame);\r\n\r\n\t\tif (returnedObj) {\r\n\t\t\tif (returnedObj instanceof Void)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t// Some kind of value, if not void\r\n\t\t\t// var returnVal = returnedObj as Runtime.Value;\r\n\t\t\tlet returnVal = asOrThrows(returnedObj, Value);\r\n\r\n\t\t\t// DivertTargets get returned as the string of components\r\n\t\t\t// (rather than a Path, which isn't public)\r\n\t\t\tif (returnVal.valueType == ValueType.DivertTarget) {\r\n\t\t\t\treturn returnVal.valueObject.toString();\r\n\t\t\t}\r\n\r\n\t\t\t// Other types can just have their exact object type:\r\n\t\t\t// int, float, string. VariablePointers get returned as strings.\r\n\t\t\treturn returnVal.valueObject;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic AddError(message: string, isWarning: boolean){\r\n\t\tif (!isWarning) {\r\n\t\t\tif (this._currentErrors == null) this._currentErrors = [];\r\n\t\t\tthis._currentErrors.push(message);\r\n\t\t} else {\r\n\t\t\tif (this._currentWarnings == null) this._currentWarnings = [];\r\n\t\t\tthis._currentWarnings.push(message);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic OutputStreamDirty(){\r\n\t\tthis._outputStreamTextDirty = true;\r\n\t\tthis._outputStreamTagsDirty = true;\r\n\t}\r\n\r\n\tprivate _outputStream: InkObject[];\r\n\tprivate _outputStreamTextDirty = true;\r\n\tprivate _outputStreamTagsDirty = true;\r\n\tprivate _currentChoices: Choice[];\r\n}\r\n","import {Container} from './Container';\r\nimport {InkObject} from './Object';\r\nimport {JsonSerialisation} from './JsonSerialisation';\r\nimport {StoryState} from './StoryState';\r\nimport {ControlCommand} from './ControlCommand';\r\nimport {PushPopType} from './PushPop';\r\nimport {ChoicePoint} from './ChoicePoint';\r\nimport {Choice} from './Choice';\r\nimport {Divert} from './Divert';\r\nimport {Value, StringValue, IntValue, DivertTargetValue, VariablePointerValue, ListValue} from './Value';\r\nimport {Path} from './Path';\r\nimport {Void} from './Void';\r\nimport {Tag} from './Tag';\r\nimport {VariableAssignment} from './VariableAssignment';\r\nimport {VariableReference} from './VariableReference';\r\nimport {NativeFunctionCall} from './NativeFunctionCall';\r\nimport {StoryException} from './StoryException';\r\nimport {PRNG} from './PRNG';\r\nimport {StringBuilder} from './StringBuilder';\r\nimport {ListDefinitionsOrigin} from './ListDefinitionsOrigin';\r\nimport {ListDefinition} from './ListDefinition';\r\nimport {Stopwatch} from './StopWatch';\r\nimport {Pointer} from './Pointer';\r\nimport {InkList, InkListItem, KeyValuePair} from './InkList';\r\nimport {JObject} from './JObject';\r\nimport {asOrNull, asOrThrows} from './TypeAssertion';\r\nimport {DebugMetadata} from './DebugMetadata';\r\nimport {throwNullException} from './NullException';\r\n\r\nexport {InkList} from './InkList';\r\n\r\n// tslint:disable no-conditional-assignment\r\n\r\nif (!Number.isInteger) {\r\n\tNumber.isInteger = function isInteger(nVal: any) {\r\n\t\treturn typeof nVal === 'number' && isFinite(nVal) && nVal > -9007199254740992 && nVal < 9007199254740992 && Math.floor(nVal) === nVal;\r\n\t};\r\n}\r\n\r\nexport class Story extends InkObject{\r\n\r\n\tpublic inkVersionCurrent = 19;\r\n\r\n\tpublic inkVersionMinimumCompatible = 18;\r\n\r\n\tget currentChoices(){\r\n\t\tlet choices: Choice[] = [];\r\n\r\n\t\tif (this._state === null) { return throwNullException('this._state'); }\r\n\t\tfor(let c of this._state.currentChoices) {\r\n\t\t\tif (!c.isInvisibleDefault) {\r\n\t\t\t\tc.index = choices.length;\r\n\t\t\t\tchoices.push(c);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn choices;\r\n\t}\r\n\r\n\tget currentText(){\r\n\t\tthis.IfAsyncWeCant(\"call currentText since it's a work in progress\");\r\n\t\treturn this.state.currentText;\r\n\t}\r\n\r\n\tget currentTags(){\r\n\t\tthis.IfAsyncWeCant(\"call currentTags since it's a work in progress\");\r\n\t\treturn this.state.currentTags;\r\n\t}\r\n\r\n\tget currentErrors(){\r\n\t\treturn this.state.currentErrors;\r\n\t}\r\n\r\n\tget currentWarnings(){\r\n\t\treturn this.state.currentWarnings;\r\n\t}\r\n\r\n\tget hasError(){\r\n\t\treturn this.state.hasError;\r\n\t}\r\n\r\n\tget hasWarning(){\r\n\t\treturn this.state.hasWarning;\r\n\t}\r\n\r\n\tget variablesState(){\r\n\t\treturn this.state.variablesState;\r\n\t}\r\n\r\n\tget listDefinitions(){\r\n\t\treturn this._listDefinitions;\r\n\t}\r\n\r\n\tget state(){\r\n\t\treturn this._state;\r\n\t}\r\n\r\n\t// TODO: Implement Profiler\r\n\tpublic StartProfiling(){ /* */ }\r\n\tpublic EndProfiling(){ /* */ }\r\n\r\n\tconstructor(contentContainer: Container, lists: ListDefinition[] | null);\r\n\tconstructor(jsonString: string);\r\n\tconstructor(json: JObject);\r\n\tconstructor(){\r\n\t\tsuper();\r\n\r\n\t\t// Discrimination between constructors\r\n\t\tlet contentContainer: Container;\r\n\t\tlet lists: ListDefinition[] | null = null;\r\n\t\tlet json: JObject | null = null;\r\n\r\n\t\tif (arguments[0] instanceof Container) {\r\n\t\t\tcontentContainer = arguments[0] as Container;\r\n\r\n\t\t\tif (typeof arguments[1] !== 'undefined') {\r\n\t\t\t\tlists = arguments[1] as ListDefinition[];\r\n\t\t\t}\r\n\r\n\t\t\t// ------ Story (Container contentContainer, List<Runtime.ListDefinition> lists = null)\r\n\t\t\tthis._mainContentContainer = contentContainer;\r\n\t\t\t// ------\r\n\t\t} else {\r\n\t\t\tif (typeof arguments[0] === 'string') {\r\n\t\t\t\tlet jsonString = arguments[0] as string;\r\n\t\t\t\tjson = JSON.parse(jsonString);\r\n\t\t\t} else {\r\n\t\t\t\tjson = arguments[0] as JObject;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ------ Story (Container contentContainer, List<Runtime.ListDefinition> lists = null)\r\n\t\tif (lists != null)\r\n\t\t\tthis._listDefinitions = new ListDefinitionsOrigin(lists);\r\n\r\n\t\tthis._externals = new Map();\r\n\t\t// ------\r\n\r\n\t\t// ------ Story(string jsonString) : this((Container)null)\r\n\t\tif (json !== null) {\r\n\t\t\tlet rootObject: JObject = json;\r\n\r\n\t\t\tlet versionObj = rootObject['inkVersion'];\r\n\t\t\tif (versionObj == null)\r\n\t\t\t\tthrow new Error(\"ink version number not found. Are you sure it's a valid .ink.json file?\");\r\n\r\n\t\t\tlet formatFromFile = parseInt(versionObj);\r\n\t\t\tif (formatFromFile > this.inkVersionCurrent){\r\n\t\t\t\tthrow new Error('Version of ink used to build story was newer than the current version of the engine');\r\n\t\t\t}\r\n\t\t\telse if (formatFromFile < this.inkVersionMinimumCompatible){\r\n\t\t\t\tthrow new Error('Version of ink used to build story is too old to be loaded by this version of the engine');\r\n\t\t\t}\r\n\t\t\telse if (formatFromFile != this.inkVersionCurrent){\r\n\t\t\t\tconsole.warn(\"WARNING: Version of ink used to build story doesn't match current version of engine. Non-critical, but recommend synchronising.\");\r\n\t\t\t}\r\n\r\n\t\t\tlet rootToken = rootObject['root'];\r\n\t\t\tif (rootToken == null)\r\n\t\t\t\tthrow new Error(\"Root node for ink not found. Are you sure it's a valid .ink.json file?\");\r\n\r\n\t\t\tlet listDefsObj;\r\n\t\t\tif (listDefsObj = rootObject['listDefs']) {\r\n\t\t\t\tthis._listDefinitions = JsonSerialisation.JTokenToListDefinitions(listDefsObj);\r\n\t\t\t}\r\n\r\n\t\t\tthis._mainContentContainer = asOrThrows(JsonSerialisation.JTokenToRuntimeObject(rootToken), Container);\r\n\r\n\t\t\tthis.ResetState();\r\n\t\t}\r\n\t\t// ------\r\n\t}\r\n\r\n\tpublic ToJsonString(){\r\n\t\tlet rootContainerJsonList = JsonSerialisation.RuntimeObjectToJToken(this._mainContentContainer);\r\n\r\n\t\tlet  rootObject: JObject = {};\r\n\t\trootObject['inkVersion'] = this.inkVersionCurrent;\r\n\t\trootObject['root'] = rootContainerJsonList;\r\n\r\n\t\tif (this._listDefinitions != null)\r\n\t\t\trootObject['listDefs'] = JsonSerialisation.ListDefinitionsToJToken(this._listDefinitions);\r\n\r\n\t\treturn JSON.stringify(rootObject);\r\n\t}\r\n\r\n\tpublic ResetState(){\r\n\t\tthis.IfAsyncWeCant('ResetState');\r\n\r\n\t\tthis._state = new StoryState(this);\r\n\t\tthis._state.variablesState.ObserveVariableChange(this.VariableStateDidChangeEvent.bind(this));\r\n\r\n\t\tthis.ResetGlobals();\r\n\t}\r\n\r\n\tpublic ResetErrors(){\r\n\t\tif (this._state === null) { return throwNullException('this._state'); }\r\n\t\tthis._state.ResetErrors();\r\n\t}\r\n\r\n\tpublic ResetCallstack(){\r\n\t\tthis.IfAsyncWeCant('ResetCallstack');\r\n\t\tif (this._state === null) { return throwNullException('this._state'); }\r\n\t\tthis._state.ForceEnd();\r\n\t}\r\n\r\n\tpublic ResetGlobals(){\r\n\t\tif (this._mainContentContainer.namedContent.get('global decl')){\r\n\t\t\tlet originalPointer = this.state.currentPointer.copy();\r\n\r\n\t\t\tthis.ChoosePath(new Path('global decl'), false);\r\n\r\n\t\t\tthis.ContinueInternal();\r\n\r\n\t\t\tthis.state.currentPointer = originalPointer;\r\n\t\t}\r\n\r\n\t\tthis.state.variablesState.SnapshotDefaultGlobals();\r\n\t}\r\n\r\n\tpublic Continue(){\r\n\t\tthis.ContinueAsync(0);\r\n\t\treturn this.currentText;\r\n\t}\r\n\r\n\tget canContinue(){\r\n\t\treturn this.state.canContinue;\r\n\t}\r\n\r\n\tget asyncContinueComplete(){\r\n\t\treturn !this._asyncContinueActive;\r\n\t}\r\n\r\n\tpublic ContinueAsync(millisecsLimitAsync: number){\r\n\t\tif (!this._hasValidatedExternals)\r\n\t\t\tthis.ValidateExternalBindings();\r\n\r\n\t\tthis.ContinueInternal(millisecsLimitAsync);\r\n\t}\r\n\r\n\tpublic ContinueInternal(millisecsLimitAsync = 0){\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PreContinue();\r\n\r\n\t\tlet isAsyncTimeLimited = millisecsLimitAsync > 0;\r\n\t\tthis._recursiveContinueCount++;\r\n\r\n\t\tif (!this._asyncContinueActive) {\r\n\t\t\tthis._asyncContinueActive = isAsyncTimeLimited;\r\n\r\n\t\t\tif (!this.canContinue) {\r\n\t\t\t\tthrow new StoryException(\"Can't continue - should check canContinue before calling Continue\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._state.didSafeExit = false;\r\n\t\t\tthis._state.ResetOutput();\r\n\r\n\t\t\tif (this._recursiveContinueCount == 1)\r\n\t\t\t\tthis._state.variablesState.batchObservingVariableChanges = true;\r\n\t\t}\r\n\r\n\t\tlet durationStopwatch = new Stopwatch();\r\n\t\tdurationStopwatch.Start();\r\n\r\n\t\tlet outputStreamEndsInNewline = false;\r\n\t\tdo {\r\n\t\t\ttry {\r\n\t\t\t\toutputStreamEndsInNewline = this.ContinueSingleStep();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!(e instanceof StoryException)) throw e;\r\n\r\n\t\t\t\tthis.AddError(e.message, undefined, e.useEndLineNumber);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (outputStreamEndsInNewline)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (this._asyncContinueActive && durationStopwatch.ElapsedMilliseconds > millisecsLimitAsync) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t} while(this.canContinue);\r\n\r\n\t\tdurationStopwatch.Stop();\r\n\r\n\t\tif (outputStreamEndsInNewline || !this.canContinue) {\r\n\t\t\tif (this._stateAtLastNewline != null) {\r\n\t\t\t\tthis.RestoreStateSnapshot(this._stateAtLastNewline);\r\n\t\t\t\tthis._stateAtLastNewline = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.canContinue) {\r\n\t\t\t\tif (this.state.callStack.canPopThread)\r\n\t\t\t\t\tthis.AddError('Thread available to pop, threads should always be flat by the end of evaluation?');\r\n\r\n\t\t\t\tif (this.state.generatedChoices.length == 0 && !this.state.didSafeExit && this._temporaryEvaluationContainer == null) {\r\n\t\t\t\t\tif (this.state.callStack.CanPop(PushPopType.Tunnel))\r\n\t\t\t\t\t\tthis.AddError (\"unexpectedly reached end of content. Do you need a '->->' to return from a tunnel?\");\r\n\t\t\t\t\telse if (this.state.callStack.CanPop(PushPopType.Function))\r\n\t\t\t\t\t\tthis.AddError (\"unexpectedly reached end of content. Do you need a '~ return'?\");\r\n\t\t\t\t\telse if (!this.state.callStack.canPop)\r\n\t\t\t\t\t\tthis.AddError (\"ran out of content. Do you need a '-> DONE' or '-> END'?\");\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis.AddError ('unexpectedly reached end of content for unknown reason. Please debug compiler!');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state.didSafeExit = false;\r\n\r\n\t\t\tif (this._recursiveContinueCount == 1)\r\n\t\t\t\tthis._state.variablesState.batchObservingVariableChanges = false;\r\n\r\n\t\t\tthis._asyncContinueActive = false;\r\n\t\t}\r\n\r\n\t\tthis._recursiveContinueCount--;\r\n\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PostContinue();\r\n\t}\r\n\r\n\tpublic ContinueSingleStep(){\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PreStep();\r\n\r\n\t\tthis.Step();\r\n\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PostStep();\r\n\r\n\t\tif (!this.canContinue && !this.state.callStack.elementIsEvaluateFromGame) {\r\n\t\t\tthis.TryFollowDefaultInvisibleChoice();\r\n\t\t}\r\n\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PreSnapshot();\r\n\r\n\t\tif (!this.state.inStringEvaluation) {\r\n\r\n\t\t\tif (this._stateAtLastNewline != null) {\r\n\r\n\t\t\t\tif (this._stateAtLastNewline.currentTags === null) { return throwNullException('this._stateAtLastNewline.currentTags'); }\r\n\t\t\t\tif (this.state.currentTags === null) { return throwNullException('this.state.currentTags'); }\r\n\r\n\t\t\t\tlet change = this.CalculateNewlineOutputStateChange (\r\n\t\t\t\t\tthis._stateAtLastNewline.currentText, this.state.currentText,\r\n\t\t\t\t\tthis._stateAtLastNewline.currentTags.length, this.state.currentTags.length,\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (change == Story.OutputStateChange.ExtendedBeyondNewline) {\r\n\r\n\t\t\t\t\tthis.RestoreStateSnapshot(this._stateAtLastNewline);\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (change == Story.OutputStateChange.NewlineRemoved) {\r\n\t\t\t\t\tthis._stateAtLastNewline = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.outputStreamEndsInNewline) {\r\n\t\t\t\tif (this.canContinue) {\r\n\t\t\t\t\tif (this._stateAtLastNewline == null)\r\n\t\t\t\t\t\tthis._stateAtLastNewline = this.StateSnapshot();\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._stateAtLastNewline = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.PostSnapshot();\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic CalculateNewlineOutputStateChange(prevText: string | null, currText: string | null, prevTagCount: number, currTagCount: number){\r\n\t\tif (prevText === null) { return throwNullException('prevText'); }\r\n\t\tif (currText === null) { return throwNullException('currText'); }\r\n\r\n\t\tlet newlineStillExists = currText.length >= prevText.length && currText.charAt(prevText.length - 1) == '\\n';\r\n\t\tif (prevTagCount == currTagCount && prevText.length == currText.length && newlineStillExists)\r\n\t\t\treturn Story.OutputStateChange.NoChange;\r\n\r\n\t\tif (!newlineStillExists) {\r\n\t\t\treturn Story.OutputStateChange.NewlineRemoved;\r\n\t\t}\r\n\r\n\t\tif (currTagCount > prevTagCount)\r\n\t\t\treturn Story.OutputStateChange.ExtendedBeyondNewline;\r\n\r\n\t\tfor (let i = prevText.length; i < currText.length; i++) {\r\n\t\t\tlet c = currText.charAt(i);\r\n\t\t\tif (c != ' ' && c != '\\t') {\r\n\t\t\t\treturn Story.OutputStateChange.ExtendedBeyondNewline;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Story.OutputStateChange.NoChange;\r\n\t}\r\n\r\n\tpublic ContinueMaximally(){\r\n\t\tthis.IfAsyncWeCant('ContinueMaximally');\r\n\r\n\t\tlet sb = new StringBuilder();\r\n\r\n\t\twhile (this.canContinue) {\r\n\t\t\tsb.Append(this.Continue());\r\n\t\t}\r\n\r\n\t\treturn sb.toString();\r\n\t}\r\n\r\n\tpublic ContentAtPath(path: Path){\r\n\t\treturn this.mainContentContainer.ContentAtPath(path);\r\n\t}\r\n\r\n\tpublic KnotContainerWithName(name: string){\r\n\t\tlet namedContainer = this.mainContentContainer.namedContent.get(name);\r\n\t\tif (namedContainer instanceof Container)\r\n\t\t\treturn namedContainer;\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tpublic PointerAtPath(path: Path) {\r\n\t\tif (path.length == 0)\r\n\t\t\treturn Pointer.Null;\r\n\r\n\t\tlet p = new Pointer();\r\n\r\n\t\tlet pathLengthToUse = path.length;\r\n\r\n\t\tlet result = null;\r\n\t\tif (path.lastComponent === null) { return throwNullException('path.lastComponent'); }\r\n\r\n\t\tif (path.lastComponent.isIndex) {\r\n\t\t\tpathLengthToUse = path.length - 1;\r\n\t\t\tresult = this.mainContentContainer.ContentAtPath(path, undefined, pathLengthToUse);\r\n\t\t\tp.container = result.container;\r\n\t\t\tp.index = path.lastComponent.index;\r\n\t\t} else {\r\n\t\t\tresult = this.mainContentContainer.ContentAtPath(path);\r\n\t\t\tp.container = result.container;\r\n\t\t\tp.index = -1;\r\n\t\t}\r\n\r\n\t\tif (result.obj == null || result.obj == this.mainContentContainer && pathLengthToUse > 0) {\r\n\t\t\tthis.Error(\"Failed to find content at path '\" + path + \"', and no approximation of it was possible.\");\r\n\t\t} else if (result.approximate)\r\n\t\t\tthis.Warning(\"Failed to find content at path '\" + path + \"', so it was approximated to: '\"+result.obj.path+\"'.\");\r\n\r\n\t\treturn p;\r\n\t}\r\n\r\n\tpublic StateSnapshot(){\r\n\t\treturn this.state.Copy();\r\n\t}\r\n\r\n\tpublic RestoreStateSnapshot(state: StoryState){\r\n\t\tthis._state = state;\r\n\t}\r\n\r\n\tpublic Step(){\r\n\r\n\t\tlet shouldAddToStream = true;\r\n\r\n\t\tlet pointer = this.state.currentPointer.copy();\r\n\t\tif (pointer.isNull) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Container containerToEnter = pointer.Resolve () as Container;\r\n\t\tlet containerToEnter = asOrNull(pointer.Resolve(), Container);\r\n\r\n\t\twhile(containerToEnter) {\r\n\r\n\t\t\tthis.VisitContainer(containerToEnter, true);\r\n\r\n\t\t\t// No content? the most we can do is step past it\r\n\t\t\tif (containerToEnter.content.length == 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tpointer = Pointer.StartOf(containerToEnter);\r\n\t\t\t// containerToEnter = pointer.Resolve() as Container;\r\n\t\t\tcontainerToEnter = asOrNull(pointer.Resolve(), Container);\r\n\t\t}\r\n\r\n\t\tthis.state.currentPointer = pointer.copy();\r\n\r\n\t\tif (this._profiler != null)\r\n\t\t\tthis._profiler.Step(this.state.callStack);\r\n\r\n\t\t// Is the current content object:\r\n\t\t//  - Normal content\r\n\t\t//  - Or a logic/flow statement - if so, do it\r\n\t\t// Stop flow if we hit a stack pop when we're unable to pop (e.g. return/done statement in knot\r\n\t\t// that was diverted to rather than called as a function)\r\n\t\tlet currentContentObj = pointer.Resolve();\r\n\t\tlet isLogicOrFlowControl = this.PerformLogicAndFlowControl(currentContentObj);\r\n\r\n\t\t// Has flow been forced to end by flow control above?\r\n\t\tif (this.state.currentPointer.isNull) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (isLogicOrFlowControl) {\r\n\t\t\tshouldAddToStream = false;\r\n\t\t}\r\n\r\n\t\t// Choice with condition?\r\n\t\t// var choicePoint = currentContentObj as ChoicePoint;\r\n\t\tlet choicePoint = asOrNull(currentContentObj, ChoicePoint);\r\n\t\tif (choicePoint) {\r\n\t\t\tlet choice = this.ProcessChoice(choicePoint);\r\n\t\t\tif (choice) {\r\n\t\t\t\tthis.state.generatedChoices.push(choice);\r\n\t\t\t}\r\n\r\n\t\t\tcurrentContentObj = null;\r\n\t\t\tshouldAddToStream = false;\r\n\t\t}\r\n\r\n\t\t// If the container has no content, then it will be\r\n\t\t// the \"content\" itself, but we skip over it.\r\n\t\tif (currentContentObj instanceof Container) {\r\n\t\t\tshouldAddToStream = false;\r\n\t\t}\r\n\r\n\t\t// Content to add to evaluation stack or the output stream\r\n\t\tif (shouldAddToStream) {\r\n\r\n\t\t\t// If we're pushing a variable pointer onto the evaluation stack, ensure that it's specific\r\n\t\t\t// to our current (possibly temporary) context index. And make a copy of the pointer\r\n\t\t\t// so that we're not editing the original runtime object.\r\n\t\t\t// var varPointer = currentContentObj as VariablePointerValue;\r\n\t\t\tlet varPointer = asOrNull(currentContentObj, VariablePointerValue);\r\n\t\t\tif (varPointer && varPointer.contextIndex == -1) {\r\n\r\n\t\t\t\t// Create new object so we're not overwriting the story's own data\r\n\t\t\t\tlet contextIdx = this.state.callStack.ContextForVariableNamed(varPointer.variableName);\r\n\t\t\t\tcurrentContentObj = new VariablePointerValue(varPointer.variableName, contextIdx);\r\n\t\t\t}\r\n\r\n\t\t\t// Expression evaluation content\r\n\t\t\tif (this.state.inExpressionEvaluation) {\r\n\t\t\t\tthis.state.PushEvaluationStack(currentContentObj);\r\n\t\t\t}\r\n\t\t\t// Output stream content (i.e. not expression evaluation)\r\n\t\t\telse {\r\n\t\t\t\tthis.state.PushToOutputStream(currentContentObj);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Increment the content pointer, following diverts if necessary\r\n\t\tthis.NextContent();\r\n\r\n\t\t// Starting a thread should be done after the increment to the content pointer,\r\n\t\t// so that when returning from the thread, it returns to the content after this instruction.\r\n\t\t// var controlCmd = currentContentObj as ;\r\n\t\tlet controlCmd = asOrNull(currentContentObj, ControlCommand);\r\n\t\tif (controlCmd && controlCmd.commandType == ControlCommand.CommandType.StartThread) {\r\n\t\t\tthis.state.callStack.PushThread();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic VisitContainer(container: Container, atStart: boolean){\r\n\t\tif (!container.countingAtStartOnly || atStart) {\r\n\t\t\tif (container.visitsShouldBeCounted)\r\n\t\t\t\tthis.IncrementVisitCountForContainer(container);\r\n\r\n\t\t\tif (container.turnIndexShouldBeCounted)\r\n\t\t\t\tthis.RecordTurnIndexVisitToContainer(container);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _prevContainers: Container[] = [];\r\n\tpublic VisitChangedContainersDueToDivert(){\r\n\t\tlet previousPointer = this.state.previousPointer.copy();\r\n\t\tlet pointer = this.state.currentPointer.copy();\r\n\r\n\t\tif (pointer.isNull || pointer.index == -1)\r\n\t\t\treturn;\r\n\r\n\t\tthis._prevContainers.length = 0;\r\n\t\tif (!previousPointer.isNull) {\r\n\t\t\t// Container prevAncestor = previousPointer.Resolve() as Container ?? previousPointer.container as Container;\r\n\t\t\tlet resolvedPreviousAncestor = previousPointer.Resolve();\r\n\t\t\tlet prevAncestor = asOrNull(resolvedPreviousAncestor, Container) || asOrNull(previousPointer.container, Container);\r\n\t\t\twhile (prevAncestor) {\r\n\t\t\t\tthis._prevContainers.push(prevAncestor);\r\n\t\t\t\t// prevAncestor = prevAncestor.parent as Container;\r\n\t\t\t\tprevAncestor = asOrNull(prevAncestor.parent, Container);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet currentChildOfContainer = pointer.Resolve();\r\n\r\n\t\tif (currentChildOfContainer == null) return;\r\n\r\n\t\t// Container currentContainerAncestor = currentChildOfContainer.parent as Container;\r\n\t\tlet currentContainerAncestor = asOrNull(currentChildOfContainer.parent, Container);\r\n\t\twhile (currentContainerAncestor && (this._prevContainers.indexOf(currentContainerAncestor) < 0 || currentContainerAncestor.countingAtStartOnly)) {\r\n\r\n\t\t\t// Check whether this ancestor container is being entered at the start,\r\n\t\t\t// by checking whether the child object is the first.\r\n\t\t\tlet enteringAtStart = currentContainerAncestor.content.length > 0\r\n\t\t\t\t&& currentChildOfContainer == currentContainerAncestor.content[0];\r\n\r\n\t\t\t// Mark a visit to this container\r\n\t\t\tthis.VisitContainer(currentContainerAncestor, enteringAtStart);\r\n\r\n\t\t\tcurrentChildOfContainer = currentContainerAncestor;\r\n\t\t\t// currentContainerAncestor = currentContainerAncestor.parent as Container;\r\n\t\t\tcurrentContainerAncestor = asOrNull(currentContainerAncestor.parent, Container);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ProcessChoice(choicePoint: ChoicePoint){\r\n\t\tlet showChoice = true;\r\n\r\n\t\t// Don't create choice if choice point doesn't pass conditional\r\n\t\tif (choicePoint.hasCondition) {\r\n\t\t\tlet conditionValue = this.state.PopEvaluationStack();\r\n\t\t\tif (!this.IsTruthy(conditionValue)) {\r\n\t\t\t\tshowChoice = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet startText = '';\r\n\t\tlet choiceOnlyText = '';\r\n\r\n\t\tif (choicePoint.hasChoiceOnlyContent) {\r\n\t\t\t// var choiceOnlyStrVal = state.PopEvaluationStack () as StringValue;\r\n\t\t\tlet choiceOnlyStrVal = asOrThrows(this.state.PopEvaluationStack(), StringValue);\r\n\t\t\tchoiceOnlyText = choiceOnlyStrVal.value || '';\r\n\t\t}\r\n\r\n\t\tif (choicePoint.hasStartContent) {\r\n\t\t\t// var startStrVal = state.PopEvaluationStack () as StringValue;\r\n\t\t\tlet startStrVal = asOrThrows(this.state.PopEvaluationStack(), StringValue);\r\n\t\t\tstartText = startStrVal.value || '';\r\n\t\t}\r\n\r\n\t\t// Don't create choice if player has already read this content\r\n\t\tif (choicePoint.onceOnly) {\r\n\t\t\tlet visitCount = this.VisitCountForContainer(choicePoint.choiceTarget);\r\n\t\t\tif (visitCount > 0) {\r\n\t\t\t\tshowChoice = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// We go through the full process of creating the choice above so\r\n\t\t// that we consume the content for it, since otherwise it'll\r\n\t\t// be shown on the output stream.\r\n\t\tif (!showChoice) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet choice = new Choice();\r\n\t\tchoice.targetPath = choicePoint.pathOnChoice;\r\n\t\tchoice.sourcePath = choicePoint.path.toString();\r\n\t\tchoice.isInvisibleDefault = choicePoint.isInvisibleDefault;\r\n\t\tchoice.threadAtGeneration = this.state.callStack.ForkThread();\r\n\r\n\t\tchoice.text = (startText + choiceOnlyText).replace(/^[ \\t]+|[ \\t]+$/g, '');\r\n\r\n\t\treturn choice;\r\n\t}\r\n\r\n\tpublic IsTruthy(obj: InkObject){\r\n\t\tlet truthy = false;\r\n\t\tif (obj instanceof Value) {\r\n\t\t\tlet val = obj;\r\n\r\n\t\t\tif (val instanceof DivertTargetValue) {\r\n\t\t\t\tlet divTarget = val;\r\n\t\t\t\tthis.Error(\"Shouldn't use a divert target (to \" + divTarget.targetPath + \") as a conditional value. Did you intend a function call 'likeThis()' or a read count check 'likeThis'? (no arrows)\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn val.isTruthy;\r\n\t\t}\r\n\t\treturn truthy;\r\n\t}\r\n\r\n\tpublic PerformLogicAndFlowControl(contentObj: InkObject | null){\r\n\t\tif( contentObj == null ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Divert\r\n\t\tif (contentObj instanceof Divert) {\r\n\t\t\tlet currentDivert = contentObj;\r\n\r\n\t\t\tif (currentDivert.isConditional) {\r\n\t\t\t\tlet conditionValue = this.state.PopEvaluationStack();\r\n\r\n\t\t\t\t// False conditional? Cancel divert\r\n\t\t\t\tif (!this.IsTruthy(conditionValue))\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (currentDivert.hasVariableTarget) {\r\n\t\t\t\tlet varName = currentDivert.variableDivertName;\r\n\r\n\t\t\t\tlet varContents = this.state.variablesState.GetVariableWithName(varName);\r\n\r\n\t\t\t\tif (varContents == null) {\r\n\t\t\t\t\tthis.Error('Tried to divert using a target from a variable that could not be found (' + varName + ')');\r\n\t\t\t\t}\r\n\t\t\t\telse if (!(varContents instanceof DivertTargetValue)) {\r\n\r\n\t\t\t\t\t// var intContent = varContents as IntValue;\r\n\t\t\t\t\tlet intContent = asOrNull(varContents, IntValue);\r\n\r\n\t\t\t\t\tlet errorMessage = 'Tried to divert to a target from a variable, but the variable (' + varName + \") didn't contain a divert target, it \";\r\n\t\t\t\t\tif (intContent instanceof IntValue && intContent.value == 0) {\r\n\t\t\t\t\t\terrorMessage += 'was empty/null (the value 0).';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\terrorMessage += \"contained '\" + varContents + \"'.\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.Error(errorMessage);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet target = asOrThrows(varContents, DivertTargetValue);\r\n\t\t\t\tthis.state.divertedPointer = this.PointerAtPath(target.targetPath);\r\n\r\n\t\t\t} else if (currentDivert.isExternal) {\r\n\t\t\t\tthis.CallExternalFunction(currentDivert.targetPathString, currentDivert.externalArgs);\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.state.divertedPointer = currentDivert.targetPointer.copy();\r\n\t\t\t}\r\n\r\n\t\t\tif (currentDivert.pushesToStack) {\r\n\t\t\t\tthis.state.callStack.Push(\r\n\t\t\t\t\tcurrentDivert.stackPushType,\r\n\t\t\t\t\tundefined,\r\n\t\t\t\t\tthis.state.outputStream.length,\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.divertedPointer.isNull && !currentDivert.isExternal) {\r\n\r\n\t\t\t\tif (currentDivert && currentDivert.debugMetadata && currentDivert.debugMetadata.sourceName != null) {\r\n\t\t\t\t\tthis.Error(\"Divert target doesn't exist: \" + currentDivert.debugMetadata.sourceName);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.Error('Divert resolution failed: ' + currentDivert);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Start/end an expression evaluation? Or print out the result?\r\n\t\telse if( contentObj instanceof ControlCommand ) {\r\n\t\t\tlet evalCommand = contentObj;\r\n\r\n\t\t\tswitch (evalCommand.commandType) {\r\n\r\n\t\t\tcase ControlCommand.CommandType.EvalStart:\r\n\t\t\t\tthis.Assert(this.state.inExpressionEvaluation === false, 'Already in expression evaluation?');\r\n\t\t\t\tthis.state.inExpressionEvaluation = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.EvalEnd:\r\n\t\t\t\tthis.Assert(this.state.inExpressionEvaluation === true, 'Not in expression evaluation mode');\r\n\t\t\t\tthis.state.inExpressionEvaluation = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.EvalOutput:\r\n\r\n\t\t\t\t// If the expression turned out to be empty, there may not be anything on the stack\r\n\t\t\t\tif (this.state.evaluationStack.length > 0) {\r\n\r\n\t\t\t\t\tlet output = this.state.PopEvaluationStack();\r\n\r\n\t\t\t\t\t// Functions may evaluate to Void, in which case we skip output\r\n\t\t\t\t\tif (!(output instanceof Void)) {\r\n\t\t\t\t\t\t// TODO: Should we really always blanket convert to string?\r\n\t\t\t\t\t\t// It would be okay to have numbers in the output stream the\r\n\t\t\t\t\t\t// only problem is when exporting text for viewing, it skips over numbers etc.\r\n\t\t\t\t\t\tlet text = new StringValue(output.toString());\r\n\r\n\t\t\t\t\t\tthis.state.PushToOutputStream(text);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.NoOp:\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.Duplicate:\r\n\t\t\t\tthis.state.PushEvaluationStack(this.state.PeekEvaluationStack());\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.PopEvaluatedValue:\r\n\t\t\t\tthis.state.PopEvaluationStack();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.PopFunction:\r\n\t\t\tcase ControlCommand.CommandType.PopTunnel:\r\n\r\n\t\t\t\tlet popType = evalCommand.commandType == ControlCommand.CommandType.PopFunction ?\r\n\t\t\t\t\tPushPopType.Function : PushPopType.Tunnel;\r\n\r\n\t\t\t\tlet overrideTunnelReturnTarget: DivertTargetValue | null = null;\r\n\t\t\t\tif (popType == PushPopType.Tunnel) {\r\n\t\t\t\t\tlet popped = this.state.PopEvaluationStack();\r\n\t\t\t\t\t// overrideTunnelReturnTarget = popped as DivertTargetValue;\r\n\t\t\t\t\toverrideTunnelReturnTarget = asOrNull(popped, DivertTargetValue);\r\n\t\t\t\t\tif (overrideTunnelReturnTarget === null) {\r\n\t\t\t\t\t\tthis.Assert(popped instanceof Void, \"Expected void if ->-> doesn't override target\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.state.TryExitFunctionEvaluationFromGame()){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.state.callStack.currentElement.type != popType || !this.state.callStack.canPop) {\r\n\r\n\t\t\t\t\tlet names: Map<PushPopType, string> = new Map();\r\n\t\t\t\t\tnames.set(PushPopType.Function, 'function return statement (~ return)');\r\n\t\t\t\t\tnames.set(PushPopType.Tunnel, 'tunnel onwards statement (->->)');\r\n\r\n\t\t\t\t\tlet expected = names.get(this.state.callStack.currentElement.type);\r\n\t\t\t\t\tif (!this.state.callStack.canPop) {\r\n\t\t\t\t\t\texpected = 'end of flow (-> END or choice)';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet errorMsg = 'Found ' + names.get(popType) + ', when expected ' + expected;\r\n\r\n\t\t\t\t\tthis.Error(errorMsg);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.PopCallStack();\r\n\r\n\t\t\t\t\tif (overrideTunnelReturnTarget)\r\n\t\t\t\t\t\tthis.state.divertedPointer = this.PointerAtPath(overrideTunnelReturnTarget.targetPath);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.BeginString:\r\n\t\t\t\tthis.state.PushToOutputStream(evalCommand);\r\n\r\n\t\t\t\tthis.Assert(this.state.inExpressionEvaluation === true, 'Expected to be in an expression when evaluating a string');\r\n\t\t\t\tthis.state.inExpressionEvaluation = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.EndString:\r\n\r\n\t\t\t\tlet contentStackForString: InkObject[] = [];\r\n\r\n\t\t\t\tlet outputCountConsumed = 0;\r\n\t\t\t\tfor (let i = this.state.outputStream.length - 1; i >= 0; --i) {\r\n\t\t\t\t\tlet obj = this.state.outputStream[i];\r\n\r\n\t\t\t\t\toutputCountConsumed++;\r\n\r\n\t\t\t\t\t// var command = obj as ControlCommand;\r\n\t\t\t\t\tlet command = asOrNull(obj, ControlCommand);\r\n\t\t\t\t\tif (command && command.commandType == ControlCommand.CommandType.BeginString) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( obj instanceof StringValue ) {\r\n\t\t\t\t\t\tcontentStackForString.push(obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Consume the content that was produced for this string\r\n\t\t\t\tthis.state.PopFromOutputStream(outputCountConsumed);\r\n\r\n\t\t\t\t// The C# version uses a Stack for contentStackForString, but we're\r\n\t\t\t\t// using a simple array, so we need to reverse it before using it\r\n\t\t\t\tcontentStackForString = contentStackForString.reverse();\r\n\r\n\t\t\t\t// Build string out of the content we collected\r\n\t\t\t\tlet sb = new StringBuilder();\r\n\t\t\t\tfor (let c of contentStackForString) {\r\n\t\t\t\t\tsb.Append(c.toString());\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return to expression evaluation (from content mode)\r\n\t\t\t\tthis.state.inExpressionEvaluation = true;\r\n\t\t\t\tthis.state.PushEvaluationStack(new StringValue(sb.toString()));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.ChoiceCount:\r\n\t\t\t\tlet choiceCount = this.state.generatedChoices.length;\r\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(choiceCount));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.Turns:\r\n\t\t\t\tthis.state.PushEvaluationStack (new IntValue (this.state.currentTurnIndex+1));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.TurnsSince:\r\n\t\t\tcase ControlCommand.CommandType.ReadCount:\r\n\t\t\t\tlet target = this.state.PopEvaluationStack();\r\n\t\t\t\tif( !(target instanceof DivertTargetValue) ) {\r\n\t\t\t\t\tlet extraNote = '';\r\n\t\t\t\t\tif( target instanceof IntValue )\r\n\t\t\t\t\t\textraNote = \". Did you accidentally pass a read count ('knot_name') instead of a target ('-> knot_name')?\";\r\n\t\t\t\t\tthis.Error('TURNS_SINCE / READ_COUNT expected a divert target (knot, stitch, label name), but saw '+target+extraNote);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// var divertTarget = target as DivertTargetValue;\r\n\t\t\t\tlet divertTarget = asOrThrows(target, DivertTargetValue);\r\n\t\t\t\t// var container = ContentAtPath (divertTarget.targetPath).correctObj as Container;\r\n\t\t\t\tlet container = asOrNull(this.ContentAtPath(divertTarget.targetPath).correctObj, Container);\r\n\r\n\t\t\t\tlet eitherCount;\r\n\t\t\t\tif (container != null) {\r\n\t\t\t\t\tif (evalCommand.commandType == ControlCommand.CommandType.TurnsSince)\r\n\t\t\t\t\t\teitherCount = this.TurnsSinceForContainer(container);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\teitherCount = this.VisitCountForContainer(container);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (evalCommand.commandType == ControlCommand.CommandType.TurnsSince)\r\n\t\t\t\t\t\teitherCount = -1;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\teitherCount = 0;\r\n\r\n\t\t\t\t\tthis.Warning('Failed to find container for ' + evalCommand.toString() + ' lookup at ' + divertTarget.targetPath.toString());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(eitherCount));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.Random: {\r\n\t\t\t\tlet maxInt = asOrNull(this.state.PopEvaluationStack(), IntValue);\r\n\t\t\t\tlet minInt = asOrNull(this.state.PopEvaluationStack(), IntValue);\r\n\r\n\t\t\t\tif (minInt == null || minInt instanceof IntValue === false)\r\n\t\t\t\t\treturn this.Error('Invalid value for minimum parameter of RANDOM(min, max)');\r\n\r\n\t\t\t\tif (maxInt == null || minInt instanceof IntValue === false)\r\n\t\t\t\t\treturn this.Error('Invalid value for maximum parameter of RANDOM(min, max)');\r\n\r\n\t\t\t\t// Originally a primitive type, but here, can be null.\r\n\t\t\t\t// TODO: Replace by default value?\r\n\t\t\t\tif (maxInt.value === null) { return throwNullException('maxInt.value'); }\r\n\t\t\t\tif (minInt.value === null) { return throwNullException('minInt.value'); }\r\n\r\n\t\t\t\tlet randomRange = maxInt.value - minInt.value + 1;\r\n\t\t\t\tif (randomRange <= 0)\r\n\t\t\t\t\tthis.Error('RANDOM was called with minimum as ' + minInt.value + ' and maximum as ' + maxInt.value + '. The maximum must be larger');\r\n\r\n\t\t\t\tlet resultSeed = this.state.storySeed + this.state.previousRandom;\r\n\t\t\t\tlet random = new PRNG(resultSeed);\r\n\r\n\t\t\t\tlet nextRandom = random.next();\r\n\t\t\t\tlet chosenValue = (nextRandom % randomRange) + minInt.value;\r\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(chosenValue));\r\n\r\n\t\t\t\t// Next random number (rather than keeping the Random object around)\r\n\t\t\t\tthis.state.previousRandom = nextRandom;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase ControlCommand.CommandType.SeedRandom:\r\n\t\t\t\tlet seed = asOrNull(this.state.PopEvaluationStack(), IntValue);\r\n\t\t\t\tif (seed == null || seed instanceof IntValue === false)\r\n\t\t\t\t\treturn this.Error('Invalid value passed to SEED_RANDOM');\r\n\r\n\t\t\t\t// Originally a primitive type, but here, can be null.\r\n\t\t\t\t// TODO: Replace by default value?\r\n\t\t\t\tif (seed.value === null) { return throwNullException('minInt.value'); }\r\n\r\n\t\t\t\tthis.state.storySeed = seed.value;\r\n\t\t\t\tthis.state.previousRandom = 0;\r\n\r\n\t\t\t\tthis.state.PushEvaluationStack(new Void());\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.VisitIndex:\r\n\t\t\t\tlet count = this.VisitCountForContainer(this.state.currentPointer.container) - 1; // index not count\r\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(count));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.SequenceShuffleIndex:\r\n\t\t\t\tlet shuffleIndex = this.NextSequenceShuffleIndex();\r\n\t\t\t\tthis.state.PushEvaluationStack(new IntValue(shuffleIndex));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.StartThread:\r\n\t\t\t\t// Handled in main step function\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.Done:\r\n\t\t\t\t// We may exist in the context of the initial\r\n\t\t\t\t// act of creating the thread, or in the context of\r\n\t\t\t\t// evaluating the content.\r\n\t\t\t\tif (this.state.callStack.canPopThread) {\r\n\t\t\t\t\tthis.state.callStack.PopThread();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// In normal flow - allow safe exit without warning\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.didSafeExit = true;\r\n\r\n\t\t\t\t\t// Stop flow in current thread\r\n\t\t\t\t\tthis.state.currentPointer = Pointer.Null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// Force flow to end completely\r\n\t\t\tcase ControlCommand.CommandType.End:\r\n\t\t\t\tthis.state.ForceEnd();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.ListFromInt:\r\n\t\t\t\t// var intVal = state.PopEvaluationStack () as IntValue;\r\n\t\t\t\tlet intVal = asOrNull(this.state.PopEvaluationStack(), IntValue);\r\n\t\t\t\t// var listNameVal = state.PopEvaluationStack () as StringValue;\r\n\t\t\t\tlet listNameVal = asOrThrows(this.state.PopEvaluationStack(), StringValue);\r\n\r\n\t\t\t\tif (intVal === null) {\r\n\t\t\t\t\tthrow new StoryException('Passed non-integer when creating a list element from a numerical value.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet generatedListValue = null;\r\n\r\n\t\t\t\tif (this.listDefinitions === null) { return throwNullException('this.listDefinitions'); }\r\n\t\t\t\tlet foundListDef = this.listDefinitions.TryListGetDefinition(listNameVal.value, null);\r\n\t\t\t\tif (foundListDef.exists) {\r\n\t\t\t\t\t// Originally a primitive type, but here, can be null.\r\n\t\t\t\t\t// TODO: Replace by default value?\r\n\t\t\t\t\tif (intVal.value === null) { return throwNullException('minInt.value'); }\r\n\r\n\t\t\t\t\tlet foundItem = foundListDef.result!.TryGetItemWithValue(intVal.value, InkListItem.Null);\r\n\t\t\t\t\tif (foundItem.exists) {\r\n\t\t\t\t\t\tgeneratedListValue = new ListValue(foundItem.result!, intVal.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new StoryException('Failed to find LIST called ' + listNameVal.value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (generatedListValue == null)\r\n\t\t\t\t\tgeneratedListValue = new ListValue();\r\n\r\n\t\t\t\tthis.state.PushEvaluationStack(generatedListValue);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.ListRange:\r\n\t\t\t\tlet max = asOrNull(this.state.PopEvaluationStack(), Value);\r\n\t\t\t\tlet min = asOrNull(this.state.PopEvaluationStack(), Value);\r\n\r\n\t\t\t\t// var targetList = state.PopEvaluationStack () as ListValue;\r\n\t\t\t\tlet targetList = asOrNull(this.state.PopEvaluationStack(), ListValue);\r\n\r\n\t\t\t\tif (targetList === null || min === null || max === null)\r\n\t\t\t\t\tthrow new StoryException('Expected list, minimum and maximum for LIST_RANGE');\r\n\r\n\t\t\t\tif (targetList.value === null) { return throwNullException('targetList.value'); }\r\n\t\t\t\tlet result = targetList.value.ListWithSubRange(min.valueObject, max.valueObject);\r\n\r\n\t\t\t\tthis.state.PushEvaluationStack (new ListValue(result));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ControlCommand.CommandType.ListRandom: {\r\n\t\t\t\tlet listVal = this.state.PopEvaluationStack() as ListValue;\r\n\t\t\t\tif (listVal === null)\r\n\t\t\t\t\tthrow new StoryException('Expected list for LIST_RANDOM');\r\n\r\n\t\t\t\tlet list = listVal.value;\r\n\r\n\t\t\t\tlet newList: InkList | null = null;\r\n\r\n\t\t\t\tif (list === null) { throw throwNullException('list'); }\r\n\t\t\t\tif (list.Count == 0) {\r\n\t\t\t\t\tnewList = new InkList();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Generate a random index for the element to take\r\n\t\t\t\t\tlet resultSeed = this.state.storySeed + this.state.previousRandom;\r\n\t\t\t\t\tlet random = new PRNG(resultSeed);\r\n\r\n\t\t\t\t\tlet nextRandom = random.next();\r\n\t\t\t\t\tlet listItemIndex = nextRandom % list.Count;\r\n\r\n\t\t\t\t\t// This bit is a little different from the original\r\n\t\t\t\t\t// C# code, since iterators do not work in the same way.\r\n\t\t\t\t\t// First, we iterate listItemIndex - 1 times, calling next().\r\n\t\t\t\t\t// The listItemIndex-th time is made outside of the loop,\r\n\t\t\t\t\t// in order to retrieve the value.\r\n\t\t\t\t\tlet listEnumerator = list.entries();\r\n\t\t\t\t\tfor (let i = 0; i <= listItemIndex - 1; i++) {\r\n\t\t\t\t\t\tlistEnumerator.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet value = listEnumerator.next().value;\r\n\t\t\t\t\tlet randomItem: KeyValuePair<InkListItem, number> = {\r\n\t\t\t\t\t\tKey: InkListItem.fromSerializedKey(value[0]),\r\n\t\t\t\t\t\tValue: value[1],\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Origin list is simply the origin of the one element\r\n\t\t\t\t\tif (randomItem.Key.originName === null) { return throwNullException('randomItem.Key.originName'); }\r\n\t\t\t\t\tnewList = new InkList(randomItem.Key.originName, this);\r\n\t\t\t\t\tnewList.Add(randomItem.Key, randomItem.Value);\r\n\r\n\t\t\t\t\tthis.state.previousRandom = nextRandom;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state.PushEvaluationStack(new ListValue(newList));\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis.Error('unhandled ControlCommand: ' + evalCommand);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Variable assignment\r\n\t\telse if( contentObj instanceof VariableAssignment ) {\r\n\t\t\tlet varAss = contentObj;\r\n\t\t\tlet assignedVal = this.state.PopEvaluationStack();\r\n\r\n\t\t\tthis.state.variablesState.Assign(varAss, assignedVal);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Variable reference\r\n\t\telse if( contentObj instanceof VariableReference ) {\r\n\t\t\tlet varRef = contentObj;\r\n\t\t\tlet foundValue = null;\r\n\r\n\t\t\t// Explicit read count value\r\n\t\t\tif (varRef.pathForCount != null) {\r\n\r\n\t\t\t\tlet container = varRef.containerForCount;\r\n\t\t\t\tlet count = this.VisitCountForContainer(container);\r\n\t\t\t\tfoundValue = new IntValue(count);\r\n\t\t\t}\r\n\r\n\t\t\t// Normal variable reference\r\n\t\t\telse {\r\n\r\n\t\t\t\tfoundValue = this.state.variablesState.GetVariableWithName(varRef.name);\r\n\r\n\t\t\t\tif (foundValue == null) {\r\n\t\t\t\t\tlet defaultVal = this.state.variablesState.TryGetDefaultVariableValue (varRef.name);\r\n\t\t\t\t\tif (defaultVal != null) {\r\n\t\t\t\t\t\tthis.Warning(\"Variable not found in save state: '\" + varRef.name + \"', but seems to have been newly created. Assigning value from latest ink's declaration: \" + defaultVal);\r\n\t\t\t\t\t\tfoundValue = defaultVal;\r\n\r\n\t\t\t\t\t\t// Save for future usage, preventing future errors\r\n\t\t\t\t\t\t// Only do this for variables that are known to be globals, not those that may be missing temps.\r\n\t\t\t\t\t\tthis.state.variablesState.SetGlobal(varRef.name, foundValue);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.Warning (\"Variable not found: '\" + varRef.name + \"'. Using default value of 0 (false). This can happen with temporary variables if the declaration hasn't yet been hit.\");\r\n\t\t\t\t\t\tfoundValue = new IntValue(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.state.PushEvaluationStack(foundValue);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Native function call\r\n\t\telse if (contentObj instanceof NativeFunctionCall) {\r\n\t\t\tlet func = contentObj;\r\n\t\t\tlet funcParams = this.state.PopEvaluationStack(func.numberOfParameters);\r\n\t\t\tlet result = func.Call(funcParams);\r\n\t\t\tthis.state.PushEvaluationStack(result);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// No control content, must be ordinary content\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic ChoosePathString(path: string, resetCallstack = true, args: any[] = []){\r\n\t\tthis.IfAsyncWeCant ('call ChoosePathString right now');\r\n\r\n\t\tif (resetCallstack) {\r\n\t\t\tthis.ResetCallstack();\r\n\t\t} else {\r\n\t\t\tif (this.state.callStack.currentElement.type == PushPopType.Function) {\r\n\t\t\t\tlet funcDetail = '';\r\n\t\t\t\tlet container = this.state.callStack.currentElement.currentPointer.container;\r\n\t\t\t\tif (container != null) {\r\n\t\t\t\t\tfuncDetail = '('+container.path.toString ()+') ';\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('Story was running a function '+funcDetail+'when you called ChoosePathString('+path+') - this is almost certainly not not what you want! Full stack trace: \\n'+this.state.callStack.callStackTrace);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.state.PassArgumentsToEvaluationStack(args);\r\n\t\tthis.ChoosePath(new Path(path));\r\n\t}\r\n\r\n\tpublic IfAsyncWeCant(activityStr: string)\r\n\t{\r\n\t\tif (this._asyncContinueActive)\r\n\t\t\tthrow new Error(\"Can't \" + activityStr + '. Story is in the middle of a ContinueAsync(). Make more ContinueAsync() calls or a single Continue() call beforehand.');\r\n\t}\r\n\r\n\tpublic ChoosePath(p: Path, incrementingTurnIndex: boolean = true){\r\n\t\tthis.state.SetChosenPath(p, incrementingTurnIndex);\r\n\r\n\t\t// Take a note of newly visited containers for read counts etc\r\n\t\tthis.VisitChangedContainersDueToDivert();\r\n\t}\r\n\r\n\tpublic ChooseChoiceIndex(choiceIdx: number){\r\n\t\tchoiceIdx = choiceIdx;\r\n\t\tlet choices = this.currentChoices;\r\n\t\tthis.Assert(choiceIdx >= 0 && choiceIdx < choices.length, 'choice out of range');\r\n\r\n\t\tlet choiceToChoose = choices[choiceIdx];\r\n\t\tif (choiceToChoose.threadAtGeneration === null) { return throwNullException('choiceToChoose.threadAtGeneration'); }\r\n\t\tif (choiceToChoose.targetPath === null) { return throwNullException('choiceToChoose.targetPath'); }\r\n\r\n\t\tthis.state.callStack.currentThread = choiceToChoose.threadAtGeneration;\r\n\r\n\t\tthis.ChoosePath(choiceToChoose.targetPath);\r\n\t}\r\n\r\n\tpublic HasFunction(functionName: string){\r\n\t\ttry {\r\n\t\t\treturn this.KnotContainerWithName(functionName) != null;\r\n\t\t} catch(e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic EvaluateFunction(functionName: string, args: any[] = [], returnTextOutput: boolean = false): Story.EvaluateFunctionTextOutput | any{\r\n\t\t// EvaluateFunction behaves slightly differently than the C# version.\r\n\t\t// In C#, you can pass a (second) parameter `out textOutput` to get the\r\n\t\t// text outputted by the function. This is not possible in js. Instead,\r\n\t\t// we maintain the regular signature (functionName, args), plus an\r\n\t\t// optional third parameter returnTextOutput. If set to true, we will\r\n\t\t// return both the textOutput and the returned value, as an object.\r\n\r\n\t\tthis.IfAsyncWeCant('evaluate a function');\r\n\r\n\t\tif (functionName == null) {\r\n\t\t\tthrow new Error('Function is null');\r\n\t\t}\r\n\t\telse if (functionName == '' || functionName.trim() == '') {\r\n\t\t\tthrow new Error('Function is empty or white space.');\r\n\t\t}\r\n\r\n\t\tlet funcContainer = this.KnotContainerWithName(functionName);\r\n\t\tif (funcContainer == null) {\r\n\t\t\tthrow new Error(\"Function doesn't exist: '\" + functionName + \"'\");\r\n\t\t}\r\n\r\n\t\tlet outputStreamBefore: InkObject[] = [];\r\n\t\toutputStreamBefore.push.apply(outputStreamBefore, this.state.outputStream);\r\n\t\tthis._state.ResetOutput();\r\n\r\n\t\tthis.state.StartFunctionEvaluationFromGame(funcContainer, args);\r\n\r\n\t\t// Evaluate the function, and collect the string output\r\n\t\tlet stringOutput = new StringBuilder();\r\n\t\twhile (this.canContinue) {\r\n\t\t\tstringOutput.Append(this.Continue());\r\n\t\t}\r\n\t\tlet textOutput = stringOutput.toString();\r\n\r\n\t\tthis._state.ResetOutput(outputStreamBefore);\r\n\r\n\t\tlet result = this.state.CompleteFunctionEvaluationFromGame();\r\n\r\n\t\treturn (returnTextOutput) ? {returned: result, output: textOutput} : result;\r\n\t}\r\n\r\n\tpublic EvaluateExpression(exprContainer: Container){\r\n\t\tlet startCallStackHeight = this.state.callStack.elements.length;\r\n\r\n\t\tthis.state.callStack.Push(PushPopType.Tunnel);\r\n\r\n\t\tthis._temporaryEvaluationContainer = exprContainer;\r\n\r\n\t\tthis.state.GoToStart();\r\n\r\n\t\tlet evalStackHeight = this.state.evaluationStack.length;\r\n\r\n\t\tthis.Continue();\r\n\r\n\t\tthis._temporaryEvaluationContainer = null;\r\n\r\n\t\t// Should have fallen off the end of the Container, which should\r\n\t\t// have auto-popped, but just in case we didn't for some reason,\r\n\t\t// manually pop to restore the state (including currentPath).\r\n\t\tif (this.state.callStack.elements.length > startCallStackHeight) {\r\n\t\t\tthis.state.PopCallStack();\r\n\t\t}\r\n\r\n\t\tlet endStackHeight = this.state.evaluationStack.length;\r\n\t\tif (endStackHeight > evalStackHeight) {\r\n\t\t\treturn this.state.PopEvaluationStack();\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic allowExternalFunctionFallbacks: boolean = false;\r\n\r\n\tpublic CallExternalFunction(funcName: string | null, numberOfArguments: number){\r\n\t\tif (funcName === null) { return throwNullException('funcName'); }\r\n\t\tlet func = this._externals.get(funcName);\r\n\t\tlet fallbackFunctionContainer = null;\r\n\r\n\t\tlet foundExternal = typeof func !== 'undefined';\r\n\r\n\t\t// Try to use fallback function?\r\n\t\tif (!foundExternal) {\r\n\t\t\tif (this.allowExternalFunctionFallbacks) {\r\n\t\t\t\tfallbackFunctionContainer = this.KnotContainerWithName(funcName);\r\n\t\t\t\tthis.Assert(fallbackFunctionContainer !== null, \"Trying to call EXTERNAL function '\" + funcName + \"' which has not been bound, and fallback ink function could not be found.\");\r\n\r\n\t\t\t\t// Divert direct into fallback function and we're done\r\n\t\t\t\tthis.state.callStack.Push(\r\n\t\t\t\t\tPushPopType.Function,\r\n\t\t\t\t\tundefined,\r\n\t\t\t\t\tthis.state.outputStream.length,\r\n\t\t\t\t);\r\n\t\t\t\tthis.state.divertedPointer = Pointer.StartOf(fallbackFunctionContainer);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis.Assert(false, \"Trying to call EXTERNAL function '\" + funcName + \"' which has not been bound (and ink fallbacks disabled).\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Pop arguments\r\n\t\tlet args: any[] = [];\r\n\t\tfor (let i = 0; i < numberOfArguments; ++i) {\r\n\t\t\t// var poppedObj = state.PopEvaluationStack () as Value;\r\n\t\t\tlet poppedObj = asOrThrows(this.state.PopEvaluationStack(), Value);\r\n\t\t\tlet valueObj = poppedObj.valueObject;\r\n\t\t\targs.push(valueObj);\r\n\t\t}\r\n\r\n\t\t// Reverse arguments from the order they were popped,\r\n\t\t// so they're the right way round again.\r\n\t\targs.reverse();\r\n\r\n\t\t// Run the function!\r\n\t\tlet funcResult = func!(args);\r\n\r\n\t\t// Convert return value (if any) to the a type that the ink engine can use\r\n\t\tlet returnObj = null;\r\n\t\tif (funcResult != null) {\r\n\t\t\treturnObj = Value.Create(funcResult);\r\n\t\t\tthis.Assert(returnObj !== null, 'Could not create ink value from returned object of type ' + (typeof funcResult));\r\n\t\t} else {\r\n\t\t\treturnObj = new Void();\r\n\t\t}\r\n\r\n\t\tthis.state.PushEvaluationStack(returnObj);\r\n\t}\r\n\r\n\tpublic BindExternalFunctionGeneral(funcName: string, func: Story.ExternalFunction){\r\n\t\tthis.IfAsyncWeCant('bind an external function');\r\n\t\tthis.Assert(!this._externals.has(funcName), \"Function '\" + funcName + \"' has already been bound.\");\r\n\t\tthis._externals.set(funcName, func);\r\n\t}\r\n\r\n\tpublic TryCoerce(value: any){\r\n\t\t// We're skipping type coercition in this implementation. First of, js\r\n\t\t// is loosely typed, so it's not that important. Secondly, there is no\r\n\t\t// clean way (AFAIK) for the user to describe what type of parameters\r\n\t\t// they expect.\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic BindExternalFunction(funcName: string, func: Story.ExternalFunction){\r\n\t\tthis.Assert(func != null, \"Can't bind a null function\");\r\n\r\n\t\tthis.BindExternalFunctionGeneral(funcName, (args: any) => {\r\n\t\t\tthis.Assert(args.length >= func.length, 'External function expected ' + func.length + ' arguments');\r\n\r\n\t\t\tlet coercedArgs = [];\r\n\t\t\tfor (let i = 0, l = args.length; i < l; i++){\r\n\t\t\t\tcoercedArgs[i] = this.TryCoerce(args[i]);\r\n\t\t\t}\r\n\t\t\treturn func.apply(null, coercedArgs);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic UnbindExternalFunction(funcName: string){\r\n\t\tthis.IfAsyncWeCant('unbind an external a function');\r\n\t\tthis.Assert(this._externals.has(funcName), \"Function '\" + funcName + \"' has not been bound.\");\r\n\t\tthis._externals.delete(funcName);\r\n\t}\r\n\r\n\tpublic ValidateExternalBindings(): void;\r\n\tpublic ValidateExternalBindings(c: Container | null, missingExternals: Set<string>): void;\r\n\tpublic ValidateExternalBindings(o: InkObject | null, missingExternals: Set<string>): void;\r\n\tpublic ValidateExternalBindings(){\r\n\r\n\t\tlet c: Container | null = null;\r\n\t\tlet o: InkObject | null = null;\r\n\t\tlet missingExternals: Set<string> = arguments[1] || new Set();\r\n\r\n\t\tif (arguments[0] instanceof Container) {\r\n\t\t\tc = arguments[0];\r\n\t\t}\r\n\r\n\t\tif (arguments[0] instanceof InkObject) {\r\n\t\t\to = arguments[0];\r\n\t\t}\r\n\r\n\t\tif (c === null && o === null) {\r\n\t\t\tthis.ValidateExternalBindings(this._mainContentContainer, missingExternals);\r\n\t\t\tthis._hasValidatedExternals = true;\r\n\r\n\t\t\t// No problem! Validation complete\r\n\t\t\tif( missingExternals.size == 0 ) {\r\n\t\t\t\tthis._hasValidatedExternals = true;\r\n\t\t\t} else {\r\n\t\t\t\tlet message = 'Error: Missing function binding for external';\r\n\t\t\t\tmessage += (missingExternals.size > 1) ? 's' : '';\r\n\t\t\t\tmessage += \": '\";\r\n\t\t\t\tmessage += Array.from(missingExternals).join(\"', '\");\r\n\t\t\t\tmessage += \"' \";\r\n\t\t\t\tmessage += (this.allowExternalFunctionFallbacks) ? ', and no fallback ink function found.' : ' (ink fallbacks disabled)';\r\n\r\n\t\t\t\tthis.Error(message);\r\n\t\t\t}\r\n\t\t} else if (c != null) {\r\n\t\t\tfor (let innerContent of c.content) {\r\n\t\t\t\tlet container = innerContent as Container;\r\n\t\t\t\tif (container == null || !container.hasValidName)\r\n\t\t\t\t\tthis.ValidateExternalBindings (innerContent, missingExternals);\r\n\t\t\t}\r\n\t\t\tfor (let [key, value] of c.namedContent) {\r\n\t\t\t\tthis.ValidateExternalBindings (asOrNull(value, InkObject), missingExternals);\r\n\t\t\t}\r\n\t\t} else if (o != null) {\r\n\t\t\tlet divert = asOrNull(o, Divert);\r\n\t\t\tif (divert && divert.isExternal) {\r\n\t\t\t\tlet name = divert.targetPathString;\r\n\t\t\t\tif (name === null) { return throwNullException('name'); }\r\n\t\t\t\tif (!this._externals.has(name)) {\r\n\t\t\t\t\tif (this.allowExternalFunctionFallbacks) {\r\n\t\t\t\t\t\tlet fallbackFound = this.mainContentContainer.namedContent.has(name);\r\n\t\t\t\t\t\tif (!fallbackFound) {\r\n\t\t\t\t\t\t\tmissingExternals.add(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmissingExternals.add(name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ObserveVariable(variableName: string, observer: Story.VariableObserver){\r\n\t\tthis.IfAsyncWeCant('observe a new variable');\r\n\r\n\t\tif (this._variableObservers === null)\r\n\t\t\tthis._variableObservers = new Map();\r\n\r\n\t\tif(!this.state.variablesState.GlobalVariableExistsWithName(variableName))\r\n\t\t\tthrow new StoryException(\"Cannot observe variable '\"+variableName+\"' because it wasn't declared in the ink story.\");\r\n\r\n\t\tif (this._variableObservers.has(variableName)) {\r\n\t\t\tthis._variableObservers.get(variableName)!.push(observer);\r\n\t\t} else {\r\n\t\t\tthis._variableObservers.set(variableName, [observer]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ObserveVariables(variableNames: string[], observers: Story.VariableObserver[]){\r\n\t\tfor (let i = 0, l = variableNames.length; i < l; i++){\r\n\t\t\tthis.ObserveVariable(variableNames[i], observers[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic RemoveVariableObserver(observer: Story.VariableObserver, specificVariableName: string){\r\n\t\tthis.IfAsyncWeCant('remove a variable observer');\r\n\r\n\t\tif (this._variableObservers === null)\r\n\t\t\treturn;\r\n\r\n\t\tif (typeof specificVariableName !== 'undefined') {\r\n\t\t\tif (this._variableObservers.has(specificVariableName)) {\r\n\t\t\t\tlet observers = this._variableObservers.get(specificVariableName)!;\r\n\t\t\t\tobservers.splice(observers.indexOf(observer), 1);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet keys = this._variableObservers.keys();\r\n\r\n\t\t\tfor (let varName of keys){\r\n\t\t\t\tlet observers = this._variableObservers.get(varName)!;\r\n\t\t\t\tobservers.splice(observers.indexOf(observer), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic VariableStateDidChangeEvent(variableName: string, newValueObj: InkObject){\r\n\t\tif (this._variableObservers === null)\r\n\t\t\treturn;\r\n\r\n\t\tlet observers = this._variableObservers.get(variableName);\r\n\t\tif (typeof observers !== 'undefined') {\r\n\t\t\tif (!(newValueObj instanceof Value)) {\r\n\t\t\t\tthrow new Error(\"Tried to get the value of a variable that isn't a standard type\");\r\n\t\t\t}\r\n\t\t\t// var val = newValueObj as Value;\r\n\t\t\tlet val = asOrThrows(newValueObj, Value);\r\n\r\n\t\t\tfor (let observer of observers) {\r\n\t\t\t\tobserver(variableName, val.valueObject);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget globalTags(){\r\n\t\treturn this.TagsAtStartOfFlowContainerWithPathString('');\r\n\t}\r\n\r\n\tpublic TagsForContentAtPath(path: string){\r\n\t\treturn this.TagsAtStartOfFlowContainerWithPathString(path);\r\n\t}\r\n\r\n\tpublic TagsAtStartOfFlowContainerWithPathString(pathString: string){\r\n\t\tlet path = new Path(pathString);\r\n\r\n\t\tlet flowContainer = this.ContentAtPath(path).container;\r\n\t\tif (flowContainer === null) { return throwNullException('flowContainer'); }\r\n\t\twhile(true) {\r\n\t\t\tlet firstContent: InkObject = flowContainer.content[0];\r\n\t\t\tif (firstContent instanceof Container)\r\n\t\t\t\tflowContainer = firstContent;\r\n\t\t\telse break;\r\n\t\t}\r\n\r\n\t\tlet tags: string[] | null = null;\r\n\r\n\t\tfor(let c of flowContainer.content) {\r\n\t\t\t// var tag = c as Runtime.Tag;\r\n\t\t\tlet tag = asOrNull(c, Tag);\r\n\t\t\tif (tag) {\r\n\t\t\t\tif (tags == null) tags = [];\r\n\t\t\t\ttags.push(tag.text);\r\n\t\t\t} else break;\r\n\t\t}\r\n\r\n\t\treturn tags;\r\n\t}\r\n\r\n\tpublic BuildStringOfHierarchy(){\r\n\t\tlet sb = new StringBuilder();\r\n\r\n\t\tthis.mainContentContainer.BuildStringOfHierarchy(sb, 0, this.state.currentPointer.Resolve());\r\n\r\n\t\treturn sb.toString();\r\n\t}\r\n\r\n\tpublic BuildStringOfContainer(container: Container){\r\n\t\tlet sb = new StringBuilder();\r\n\t\tcontainer.BuildStringOfHierarchy(sb, 0, this.state.currentPointer.Resolve());\r\n\t\treturn sb.toString();\r\n\t}\r\n\r\n\tpublic NextContent(){\r\n\t\tthis.state.previousPointer = this.state.currentPointer.copy();\r\n\r\n\t\tif (!this.state.divertedPointer.isNull) {\r\n\r\n\t\t\tthis.state.currentPointer = this.state.divertedPointer.copy();\r\n\t\t\tthis.state.divertedPointer = Pointer.Null;\r\n\r\n\t\t\tthis.VisitChangedContainersDueToDivert();\r\n\r\n\t\t\tif (!this.state.currentPointer.isNull) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet successfulPointerIncrement = this.IncrementContentPointer();\r\n\r\n\t\tif (!successfulPointerIncrement) {\r\n\r\n\t\t\tlet didPop = false;\r\n\r\n\t\t\tif (this.state.callStack.CanPop(PushPopType.Function)) {\r\n\r\n\t\t\t\tthis.state.PopCallStack(PushPopType.Function);\r\n\r\n\t\t\t\tif (this.state.inExpressionEvaluation) {\r\n\t\t\t\t\tthis.state.PushEvaluationStack(new Void());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdidPop = true;\r\n\t\t\t} else if (this.state.callStack.canPopThread) {\r\n\t\t\t\tthis.state.callStack.PopThread();\r\n\r\n\t\t\t\tdidPop = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.state.TryExitFunctionEvaluationFromGame();\r\n\t\t\t}\r\n\r\n\t\t\tif (didPop && !this.state.currentPointer.isNull) {\r\n\t\t\t\tthis.NextContent();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic IncrementContentPointer(){\r\n\t\tlet successfulIncrement = true;\r\n\r\n\t\tlet pointer = this.state.callStack.currentElement.currentPointer.copy();\r\n\t\tpointer.index++;\r\n\r\n\t\tif (pointer.container === null) { return throwNullException('pointer.container'); }\r\n\t\twhile (pointer.index >= pointer.container.content.length) {\r\n\r\n\t\t\tsuccessfulIncrement = false;\r\n\r\n\t\t\t// Container nextAncestor = pointer.container.parent as Container;\r\n\t\t\tlet nextAncestor = asOrNull(pointer.container.parent, Container);\r\n\t\t\tif (nextAncestor instanceof Container === false) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet indexInAncestor = nextAncestor!.content.indexOf(pointer.container);\r\n\t\t\tif (indexInAncestor == -1) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tpointer = new Pointer(nextAncestor, indexInAncestor);\r\n\r\n\t\t\tpointer.index++;\r\n\r\n\t\t\tsuccessfulIncrement = true;\r\n\t\t\tif (pointer.container === null) { return throwNullException('pointer.container'); }\r\n\t\t}\r\n\r\n\t\tif (!successfulIncrement) pointer = Pointer.Null;\r\n\r\n\t\tthis.state.callStack.currentElement.currentPointer = pointer.copy();\r\n\r\n\t\treturn successfulIncrement;\r\n\t}\r\n\r\n\tpublic TryFollowDefaultInvisibleChoice(){\r\n\t\tlet allChoices = this._state.currentChoices;\r\n\r\n\t\tlet invisibleChoices = allChoices.filter((c) => {\r\n\t\t\treturn c.isInvisibleDefault;\r\n\t\t});\r\n\r\n\t\tif (invisibleChoices.length == 0 || allChoices.length > invisibleChoices.length)\r\n\t\t\treturn false;\r\n\r\n\t\tlet choice = invisibleChoices[0];\r\n\r\n\t\tif (choice.targetPath === null) { return throwNullException('choice.targetPath'); }\r\n\r\n\t\tif (choice.threadAtGeneration === null) { return throwNullException('choice.threadAtGeneration'); }\r\n\r\n\t\tthis.state.callStack.currentThread = choice.threadAtGeneration;\r\n\r\n\t\tthis.ChoosePath(choice.targetPath, false);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic VisitCountForContainer(container: Container | null){\r\n\t\tif (container === null) { return throwNullException('container'); }\r\n\t\tif( !container.visitsShouldBeCounted ) {\r\n\t\t\tconsole.warn('Read count for target ('+container.name+' - on '+container.debugMetadata+') unknown. The story may need to be compiled with countAllVisits flag (-c).');\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tlet count = 0;\r\n\t\tlet containerPathStr = container.path.toString();\r\n\t\tcount = this.state.visitCounts.get(containerPathStr) || count;\r\n\t\treturn count;\r\n\t}\r\n\r\n\tpublic IncrementVisitCountForContainer(container: Container){\r\n\t\tlet count = 0;\r\n\t\tlet containerPathStr = container.path.toString();\r\n\t\tif (this.state.visitCounts.has(containerPathStr)) count = this.state.visitCounts.get(containerPathStr)!;\r\n\t\tcount++;\r\n\t\tthis.state.visitCounts.set(containerPathStr, count);\r\n\t}\r\n\r\n\tpublic RecordTurnIndexVisitToContainer(container: Container){\r\n\t\tlet containerPathStr = container.path.toString();\r\n\t\tthis.state.turnIndices.set(containerPathStr, this.state.currentTurnIndex);\r\n\t}\r\n\r\n\tpublic TurnsSinceForContainer(container: Container){\r\n\t\tif( !container.turnIndexShouldBeCounted ) {\r\n\t\t\tthis.Error('TURNS_SINCE() for target ('+container.name+' - on '+container.debugMetadata+') unknown. The story may need to be compiled with countAllVisits flag (-c).');\r\n\t\t}\r\n\r\n\t\tlet containerPathStr = container.path.toString();\r\n\t\tlet index = this.state.turnIndices.get(containerPathStr);\r\n\t\tif (typeof index !== 'undefined') {\r\n\t\t\treturn this.state.currentTurnIndex - index;\r\n\t\t} else {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic NextSequenceShuffleIndex(){\r\n\t\t// var numElementsIntVal = state.PopEvaluationStack () as IntValue;\r\n\t\tlet numElementsIntVal = asOrNull(this.state.PopEvaluationStack(), IntValue);\r\n\t\tif (!(numElementsIntVal instanceof IntValue)) {\r\n\t\t\tthis.Error('expected number of elements in sequence for shuffle index');\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tlet seqContainer = this.state.currentPointer.container;\r\n\t\tif (seqContainer === null) { return throwNullException('seqContainer'); }\r\n\r\n\t\t// Originally a primitive type, but here, can be null.\r\n\t\t// TODO: Replace by default value?\r\n\t\tif (numElementsIntVal.value === null) { return throwNullException('numElementsIntVal.value'); }\r\n\t\tlet numElements = numElementsIntVal.value;\r\n\r\n\t\t// var seqCountVal = state.PopEvaluationStack () as IntValue;\r\n\t\tlet seqCountVal = asOrThrows(this.state.PopEvaluationStack(), IntValue);\r\n\t\tlet seqCount = seqCountVal.value;\r\n\r\n\t\t// Originally a primitive type, but here, can be null.\r\n\t\t// TODO: Replace by default value?\r\n\t\tif (seqCount === null) { return throwNullException('seqCount'); }\r\n\r\n\t\tlet loopIndex = seqCount / numElements;\r\n\t\tlet iterationIndex = seqCount % numElements;\r\n\r\n\t\tlet seqPathStr = seqContainer.path.toString();\r\n\t\tlet sequenceHash = 0;\r\n\t\tfor (let i = 0, l = seqPathStr.length; i < l; i++){\r\n\t\t\tsequenceHash += seqPathStr.charCodeAt(i) || 0;\r\n\t\t}\r\n\t\tlet randomSeed = sequenceHash + loopIndex + this.state.storySeed;\r\n\t\tlet random = new PRNG(Math.floor(randomSeed));\r\n\r\n\t\tlet unpickedIndices = [];\r\n\t\tfor (let i = 0; i < numElements; ++i) {\r\n\t\t\tunpickedIndices.push(i);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i <= iterationIndex; ++i) {\r\n\t\t\tlet chosen = random.next() % unpickedIndices.length;\r\n\t\t\tlet chosenIndex = unpickedIndices[chosen];\r\n\t\t\tunpickedIndices.splice(chosen, 1);\r\n\r\n\t\t\tif (i == iterationIndex) {\r\n\t\t\t\treturn chosenIndex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthrow new Error('Should never reach here');\r\n\t}\r\n\r\n\tpublic Error(message: string, useEndLineNumber = false): never{\r\n\t\tlet e = new StoryException(message);\r\n\t\te.useEndLineNumber = useEndLineNumber;\r\n\t\tthrow e;\r\n\t}\r\n\r\n\tpublic Warning(message: string){\r\n\t\tthis.AddError(message, true);\r\n\t}\r\n\r\n\tpublic AddError(message: string, isWarning = false, useEndLineNumber = false){\r\n\t\tlet dm = this.currentDebugMetadata;\r\n\r\n\t\tlet errorTypeStr = isWarning ? 'WARNING' : 'ERROR';\r\n\r\n\t\tif (dm != null) {\r\n\t\t\tlet lineNum = useEndLineNumber ? dm.endLineNumber : dm.startLineNumber;\r\n\t\t\tmessage = 'RUNTIME ' + errorTypeStr + \": '\" + dm.fileName + \"' line \" + lineNum + ': ' + message;\r\n\t\t}\r\n\t\telse if(!this.state.currentPointer.isNull) {\r\n\t\t\tmessage = 'RUNTIME ' + errorTypeStr + ': (' + this.state.currentPointer + '): ' + message;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmessage = 'RUNTIME ' + errorTypeStr + ': ' + message;\r\n\t\t}\r\n\r\n\t\tthis.state.AddError(message, isWarning);\r\n\r\n\t\t// In a broken state don't need to know about any other errors.\r\n\t\tif (!isWarning)\r\n\t\t\tthis.state.ForceEnd();\r\n\t}\r\n\r\n\tpublic Assert(condition: boolean, message: string | null = null) {\r\n\t\tif (condition == false) {\r\n\t\t\tif (message == null) {\r\n\t\t\t\tmessage = 'Story assert';\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(message + ' ' + this.currentDebugMetadata);\r\n\t\t}\r\n\t}\r\n\r\n\tget currentDebugMetadata(): DebugMetadata | null {\r\n\t\tlet dm: DebugMetadata | null;\r\n\r\n\t\tlet pointer = this.state.currentPointer;\r\n\t\tif (!pointer.isNull && pointer.Resolve() !== null) {\r\n\t\t\tdm = pointer.Resolve()!.debugMetadata;\r\n\t\t\tif (dm !== null) {\r\n\t\t\t\treturn dm;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = this.state.callStack.elements.length - 1; i >= 0; --i) {\r\n\t\t\tpointer = this.state.callStack.elements [i].currentPointer;\r\n\t\t\tif (!pointer.isNull && pointer.Resolve() !== null) {\r\n\t\t\t\tdm = pointer.Resolve()!.debugMetadata;\r\n\t\t\t\tif (dm !== null) {\r\n\t\t\t\t\treturn dm;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = this.state.outputStream.length - 1; i >= 0; --i) {\r\n\t\t\tlet outputObj = this.state.outputStream [i];\r\n\t\t\tdm = outputObj.debugMetadata;\r\n\t\t\tif (dm !== null) {\r\n\t\t\t\treturn dm;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tget mainContentContainer(){\r\n\t\tif (this._temporaryEvaluationContainer) {\r\n\t\t\treturn this._temporaryEvaluationContainer;\r\n\t\t} else {\r\n\t\t\treturn this._mainContentContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * `_mainContentContainer` is almost guaranteed to be set in the\r\n\t * constructor, unless the json is malformed.\r\n\t */\r\n\tprivate _mainContentContainer!: Container;\r\n\tprivate _listDefinitions: ListDefinitionsOrigin | null = null;\r\n\r\n\tprivate _externals: Map<string, Story.ExternalFunction>;\r\n\tprivate _variableObservers: Map<string, Story.VariableObserver[]> | null = null;\r\n\tprivate _hasValidatedExternals: boolean = false;\r\n\r\n\tprivate _temporaryEvaluationContainer: Container | null = null;\r\n\r\n\t/**\r\n\t * `state` is almost guaranteed to be set in the constructor, unless\r\n\t * using the compiler-specific constructor which will likely not be used in\r\n\t * the real world.\r\n\t */\r\n\tprivate _state!: StoryState;\r\n\r\n\tprivate _asyncContinueActive: boolean = false;\r\n\tprivate _stateAtLastNewline: StoryState | null = null;\r\n\r\n\tprivate _recursiveContinueCount: number = 0;\r\n\r\n\tprivate _profiler: any | null = null; // TODO: Profiler\r\n}\r\n\r\nexport namespace Story{\r\n\texport enum OutputStateChange {\r\n\t\tNoChange = 0,\r\n\t\tExtendedBeyondNewline = 1,\r\n\t\tNewlineRemoved = 2,\r\n\t}\r\n\r\n\texport interface EvaluateFunctionTextOutput {\r\n\t\treturned: any;\r\n\t\toutput: string;\r\n\t}\r\n\r\n\texport type VariableObserver = (variableName: string, newValue: any) => void;\r\n\texport type ExternalFunction = (...args: any) => any;\r\n}\r\n"],"names":["Story"],"mappings":"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"}